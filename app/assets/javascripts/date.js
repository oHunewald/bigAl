  


<!DOCTYPE html>
<html>
  <head prefix="og: http://ogp.me/ns# fb: http://ogp.me/ns/fb# githubog: http://ogp.me/ns/fb/githubog#">
    <meta charset='utf-8'>
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
        <title>jquery.ganttView/lib/date.js at master · thegrubbsian/jquery.ganttView · GitHub</title>
    <link rel="search" type="application/opensearchdescription+xml" href="/opensearch.xml" title="GitHub" />
    <link rel="fluid-icon" href="https://github.com/fluidicon.png" title="GitHub" />
    <link rel="apple-touch-icon" sizes="57x57" href="/apple-touch-icon-114.png" />
    <link rel="apple-touch-icon" sizes="114x114" href="/apple-touch-icon-114.png" />
    <link rel="apple-touch-icon" sizes="72x72" href="/apple-touch-icon-144.png" />
    <link rel="apple-touch-icon" sizes="144x144" href="/apple-touch-icon-144.png" />
    <link rel="logo" type="image/svg" href="http://github-media-downloads.s3.amazonaws.com/github-logo.svg" />
    <link rel="xhr-socket" href="/_sockets">
    <meta name="msapplication-TileImage" content="/windows-tile.png">
    <meta name="msapplication-TileColor" content="#ffffff">

    
    
    <link rel="icon" type="image/x-icon" href="/favicon.ico" />

    <meta content="authenticity_token" name="csrf-param" />
<meta content="nGyqme+a//j2d9c/8ioIyb0hxFk/rr3IbswkNKXCl/o=" name="csrf-token" />

    <link href="https://a248.e.akamai.net/assets.github.com/assets/github-202e33a586eb990be0ca930957d0d26c9d440e4b.css" media="all" rel="stylesheet" type="text/css" />
    <link href="https://a248.e.akamai.net/assets.github.com/assets/github2-f76d0e0736a101c35f22cff55e3d523192129437.css" media="all" rel="stylesheet" type="text/css" />
    


      <script src="https://a248.e.akamai.net/assets.github.com/assets/frameworks-92d138f450f2960501e28397a2f63b0f100590f0.js" type="text/javascript"></script>
      <script src="https://a248.e.akamai.net/assets.github.com/assets/github-6c17acb922d93755a29e9f34f5de44cd976359b1.js" type="text/javascript"></script>
      
      <meta http-equiv="x-pjax-version" content="778c991bf5abf47467e7697c12bae40f">

        <link data-pjax-transient rel='permalink' href='/thegrubbsian/jquery.ganttView/blob/c50fa9ab63e1f36a2a2e8c2e3ca3159bb9038775/lib/date.js'>
    <meta property="og:title" content="jquery.ganttView"/>
    <meta property="og:type" content="githubog:gitrepository"/>
    <meta property="og:url" content="https://github.com/thegrubbsian/jquery.ganttView"/>
    <meta property="og:image" content="https://secure.gravatar.com/avatar/0dbd7b2879b41c03162147c1037b3bcc?s=420&amp;d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png"/>
    <meta property="og:site_name" content="GitHub"/>
    <meta property="og:description" content="jquery.ganttView - An editable jQuery Gantt chart plugin."/>
    <meta property="twitter:card" content="summary"/>
    <meta property="twitter:site" content="@GitHub">
    <meta property="twitter:title" content="thegrubbsian/jquery.ganttView"/>

    <meta name="description" content="jquery.ganttView - An editable jQuery Gantt chart plugin." />

  <link href="https://github.com/thegrubbsian/jquery.ganttView/commits/master.atom" rel="alternate" title="Recent Commits to jquery.ganttView:master" type="application/atom+xml" />

  </head>


  <body class="logged_out page-blob linux vis-public env-production  ">
    <div id="wrapper">

      

      
      
      

      
      <div class="header header-logged-out">
  <div class="container clearfix">

      <a class="header-logo-wordmark" href="https://github.com/">Github</a>

    <div class="header-actions">
        <a class="button primary" href="https://github.com/signup">Sign up for free</a>
      <a class="button" href="https://github.com/login?return_to=%2Fthegrubbsian%2Fjquery.ganttView%2Fblob%2Fmaster%2Flib%2Fdate.js">Sign in</a>
    </div>

      <ul class="top-nav">
          <li class="explore"><a href="https://github.com/explore">Explore GitHub</a></li>
        <li class="search"><a href="https://github.com/search">Search</a></li>
        <li class="features"><a href="https://github.com/features">Features</a></li>
          <li class="blog"><a href="https://github.com/blog">Blog</a></li>
      </ul>

  </div>
</div>


      

      


            <div class="site hfeed" itemscope itemtype="http://schema.org/WebPage">
      <div class="hentry">
        
        <div class="pagehead repohead instapaper_ignore readability-menu ">
          <div class="container">
            <div class="title-actions-bar">
              


<ul class="pagehead-actions">



    <li>
      <a href="/login?return_to=%2Fthegrubbsian%2Fjquery.ganttView"
        class="minibutton js-toggler-target star-button entice tooltipped upwards"
        title="You must be signed in to use this feature" rel="nofollow">
        <span class="mini-icon mini-icon-star"></span>Star
      </a>
      <a class="social-count js-social-count" href="/thegrubbsian/jquery.ganttView/stargazers">
        320
      </a>
    </li>
    <li>
      <a href="/login?return_to=%2Fthegrubbsian%2Fjquery.ganttView"
        class="minibutton js-toggler-target fork-button entice tooltipped upwards"
        title="You must be signed in to fork a repository" rel="nofollow">
        <span class="mini-icon mini-icon-fork"></span>Fork
      </a>
      <a href="/thegrubbsian/jquery.ganttView/network" class="social-count">
        106
      </a>
    </li>
</ul>

              <h1 itemscope itemtype="http://data-vocabulary.org/Breadcrumb" class="entry-title public">
                <span class="repo-label"><span>public</span></span>
                <span class="mega-icon mega-icon-public-repo"></span>
                <span class="author vcard">
                  <a href="/thegrubbsian" class="url fn" itemprop="url" rel="author">
                  <span itemprop="title">thegrubbsian</span>
                  </a></span> /
                <strong><a href="/thegrubbsian/jquery.ganttView" class="js-current-repository">jquery.ganttView</a></strong>
              </h1>
            </div>

            
  <ul class="tabs">
      <li class="pulse-nav"><a href="/thegrubbsian/jquery.ganttView/pulse" highlight="pulse" rel="nofollow"><span class="mini-icon mini-icon-pulse"></span></a></li>
    <li><a href="/thegrubbsian/jquery.ganttView" class="selected" highlight="repo_source repo_downloads repo_commits repo_tags repo_branches">Code</a></li>
    <li><a href="/thegrubbsian/jquery.ganttView/network" highlight="repo_network">Network</a></li>
    <li><a href="/thegrubbsian/jquery.ganttView/pulls" highlight="repo_pulls">Pull Requests <span class='counter'>3</span></a></li>

      <li><a href="/thegrubbsian/jquery.ganttView/issues" highlight="repo_issues">Issues <span class='counter'>14</span></a></li>



    <li><a href="/thegrubbsian/jquery.ganttView/graphs" highlight="repo_graphs repo_contributors">Graphs</a></li>


  </ul>
  
<div class="tabnav">

  <span class="tabnav-right">
    <ul class="tabnav-tabs">
          <li><a href="/thegrubbsian/jquery.ganttView/tags" class="tabnav-tab" highlight="repo_tags">Tags <span class="counter ">5</span></a></li>
    </ul>
    
  </span>

  <div class="tabnav-widget scope">


    <div class="select-menu js-menu-container js-select-menu js-branch-menu">
      <a class="minibutton select-menu-button js-menu-target" data-hotkey="w" data-ref="master">
        <span class="mini-icon mini-icon-branch"></span>
        <i>branch:</i>
        <span class="js-select-button">master</span>
      </a>

      <div class="select-menu-modal-holder js-menu-content js-navigation-container">

        <div class="select-menu-modal">
          <div class="select-menu-header">
            <span class="select-menu-title">Switch branches/tags</span>
            <span class="mini-icon mini-icon-remove-close js-menu-close"></span>
          </div> <!-- /.select-menu-header -->

          <div class="select-menu-filters">
            <div class="select-menu-text-filter">
              <input type="text" id="commitish-filter-field" class="js-filterable-field js-navigation-enable" placeholder="Filter branches/tags">
            </div>
            <div class="select-menu-tabs">
              <ul>
                <li class="select-menu-tab">
                  <a href="#" data-tab-filter="branches" class="js-select-menu-tab">Branches</a>
                </li>
                <li class="select-menu-tab">
                  <a href="#" data-tab-filter="tags" class="js-select-menu-tab">Tags</a>
                </li>
              </ul>
            </div><!-- /.select-menu-tabs -->
          </div><!-- /.select-menu-filters -->

          <div class="select-menu-list select-menu-tab-bucket js-select-menu-tab-bucket css-truncate" data-tab-filter="branches">

            <div data-filterable-for="commitish-filter-field" data-filterable-type="substring">

                <div class="select-menu-item js-navigation-item js-navigation-target selected">
                  <span class="select-menu-item-icon mini-icon mini-icon-confirm"></span>
                  <a href="/thegrubbsian/jquery.ganttView/blob/master/lib/date.js" class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target" data-name="master" rel="nofollow" title="master">master</a>
                </div> <!-- /.select-menu-item -->
            </div>

              <div class="select-menu-no-results">Nothing to show</div>
          </div> <!-- /.select-menu-list -->


          <div class="select-menu-list select-menu-tab-bucket js-select-menu-tab-bucket css-truncate" data-tab-filter="tags">
            <div data-filterable-for="commitish-filter-field" data-filterable-type="substring">

                <div class="select-menu-item js-navigation-item js-navigation-target ">
                  <span class="select-menu-item-icon mini-icon mini-icon-confirm"></span>
                  <a href="/thegrubbsian/jquery.ganttView/blob/v.0.7/lib/date.js" class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target" data-name="v.0.7" rel="nofollow" title="v.0.7">v.0.7</a>
                </div> <!-- /.select-menu-item -->
                <div class="select-menu-item js-navigation-item js-navigation-target ">
                  <span class="select-menu-item-icon mini-icon mini-icon-confirm"></span>
                  <a href="/thegrubbsian/jquery.ganttView/blob/0.8.8/lib/date.js" class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target" data-name="0.8.8" rel="nofollow" title="0.8.8">0.8.8</a>
                </div> <!-- /.select-menu-item -->
                <div class="select-menu-item js-navigation-item js-navigation-target ">
                  <span class="select-menu-item-icon mini-icon mini-icon-confirm"></span>
                  <a href="/thegrubbsian/jquery.ganttView/blob/0.8.2.0/lib/date.js" class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target" data-name="0.8.2.0" rel="nofollow" title="0.8.2.0">0.8.2.0</a>
                </div> <!-- /.select-menu-item -->
                <div class="select-menu-item js-navigation-item js-navigation-target ">
                  <span class="select-menu-item-icon mini-icon mini-icon-confirm"></span>
                  <a href="/thegrubbsian/jquery.ganttView/blob/0.7.2/lib/date.js" class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target" data-name="0.7.2" rel="nofollow" title="0.7.2">0.7.2</a>
                </div> <!-- /.select-menu-item -->
                <div class="select-menu-item js-navigation-item js-navigation-target ">
                  <span class="select-menu-item-icon mini-icon mini-icon-confirm"></span>
                  <a href="/thegrubbsian/jquery.ganttView/blob/0.7.0/lib/date.js" class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target" data-name="0.7.0" rel="nofollow" title="0.7.0">0.7.0</a>
                </div> <!-- /.select-menu-item -->
            </div>

            <div class="select-menu-no-results">Nothing to show</div>

          </div> <!-- /.select-menu-list -->

        </div> <!-- /.select-menu-modal -->
      </div> <!-- /.select-menu-modal-holder -->
    </div> <!-- /.select-menu -->

  </div> <!-- /.scope -->

  <ul class="tabnav-tabs">
    <li><a href="/thegrubbsian/jquery.ganttView" class="selected tabnav-tab" highlight="repo_source">Files</a></li>
    <li><a href="/thegrubbsian/jquery.ganttView/commits/master" class="tabnav-tab" highlight="repo_commits">Commits</a></li>
    <li><a href="/thegrubbsian/jquery.ganttView/branches" class="tabnav-tab" highlight="repo_branches" rel="nofollow">Branches <span class="counter ">1</span></a></li>
  </ul>

</div>

  
  
  


            
          </div>
        </div><!-- /.repohead -->

        <div id="js-repo-pjax-container" class="container context-loader-container" data-pjax-container>
          


<!-- blob contrib key: blob_contributors:v21:446780447edb8177e63c562571047e24 -->
<!-- blob contrib frag key: views10/v8/blob_contributors:v21:446780447edb8177e63c562571047e24 -->


<div id="slider">
    <div class="frame-meta">

      <p title="This is a placeholder element" class="js-history-link-replace hidden"></p>

        <div class="breadcrumb">
          <span class='bold'><span itemscope="" itemtype="http://data-vocabulary.org/Breadcrumb"><a href="/thegrubbsian/jquery.ganttView" class="js-slide-to" data-branch="master" data-direction="back" itemscope="url"><span itemprop="title">jquery.ganttView</span></a></span></span><span class="separator"> / </span><span itemscope="" itemtype="http://data-vocabulary.org/Breadcrumb"><a href="/thegrubbsian/jquery.ganttView/tree/master/lib" class="js-slide-to" data-branch="master" data-direction="back" itemscope="url"><span itemprop="title">lib</span></a></span><span class="separator"> / </span><strong class="final-path">date.js</strong> <span class="js-zeroclipboard zeroclipboard-button" data-clipboard-text="lib/date.js" data-copied-hint="copied!" title="copy to clipboard"><span class="mini-icon mini-icon-clipboard"></span></span>
        </div>

      <a href="/thegrubbsian/jquery.ganttView/find/master" class="js-slide-to" data-hotkey="t" style="display:none">Show File Finder</a>


        
  <div class="commit file-history-tease">
    <img class="main-avatar" height="24" src="https://secure.gravatar.com/avatar/0dbd7b2879b41c03162147c1037b3bcc?s=140&amp;d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png" width="24" />
    <span class="author"><a href="/thegrubbsian" rel="author">thegrubbsian</a></span>
    <time class="js-relative-date" datetime="2010-06-10T18:40:29-07:00" title="2010-06-10 18:40:29">June 10, 2010</time>
    <div class="commit-title">
        <a href="/thegrubbsian/jquery.ganttView/commit/20766907ca3d1728462c97bb73fccdf55771bf6f" class="message">reorganized project</a>
    </div>

    <div class="participation">
      <p class="quickstat"><a href="#blob_contributors_box" rel="facebox"><strong>1</strong> contributor</a></p>
      
    </div>
    <div id="blob_contributors_box" style="display:none">
      <h2>Users on GitHub who have contributed to this file</h2>
      <ul class="facebox-user-list">
        <li>
          <img height="24" src="https://secure.gravatar.com/avatar/0dbd7b2879b41c03162147c1037b3bcc?s=140&amp;d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png" width="24" />
          <a href="/thegrubbsian">thegrubbsian</a>
        </li>
      </ul>
    </div>
  </div>


    </div><!-- ./.frame-meta -->

    <div class="frames">
      <div class="frame" data-permalink-url="/thegrubbsian/jquery.ganttView/blob/c50fa9ab63e1f36a2a2e8c2e3ca3159bb9038775/lib/date.js" data-title="jquery.ganttView/lib/date.js at master · thegrubbsian/jquery.ganttView · GitHub" data-type="blob">

        <div id="files" class="bubble">
          <div class="file">
            <div class="meta">
              <div class="info">
                <span class="icon"><b class="mini-icon mini-icon-text-file"></b></span>
                <span class="mode" title="File Mode">file</span>
                  <span>146 lines (145 sloc)</span>
                <span>30.638 kb</span>
              </div>
              <div class="actions">
                <div class="button-group">
                      <a class="minibutton js-entice" href=""
                         data-entice="You must be signed in and on a branch to make or propose changes">Edit</a>
                  <a href="/thegrubbsian/jquery.ganttView/raw/master/lib/date.js" class="button minibutton " id="raw-url">Raw</a>
                    <a href="/thegrubbsian/jquery.ganttView/blame/master/lib/date.js" class="button minibutton ">Blame</a>
                  <a href="/thegrubbsian/jquery.ganttView/commits/master/lib/date.js" class="button minibutton " rel="nofollow">History</a>
                </div><!-- /.button-group -->
              </div><!-- /.actions -->

            </div>
                <div class="blob-wrapper data type-javascript js-blob-data">
      <table class="file-code file-diff">
        <tr class="file-code-line">
          <td class="blob-line-nums">
            <span id="L1" rel="#L1">1</span>
<span id="L2" rel="#L2">2</span>
<span id="L3" rel="#L3">3</span>
<span id="L4" rel="#L4">4</span>
<span id="L5" rel="#L5">5</span>
<span id="L6" rel="#L6">6</span>
<span id="L7" rel="#L7">7</span>
<span id="L8" rel="#L8">8</span>
<span id="L9" rel="#L9">9</span>
<span id="L10" rel="#L10">10</span>
<span id="L11" rel="#L11">11</span>
<span id="L12" rel="#L12">12</span>
<span id="L13" rel="#L13">13</span>
<span id="L14" rel="#L14">14</span>
<span id="L15" rel="#L15">15</span>
<span id="L16" rel="#L16">16</span>
<span id="L17" rel="#L17">17</span>
<span id="L18" rel="#L18">18</span>
<span id="L19" rel="#L19">19</span>
<span id="L20" rel="#L20">20</span>
<span id="L21" rel="#L21">21</span>
<span id="L22" rel="#L22">22</span>
<span id="L23" rel="#L23">23</span>
<span id="L24" rel="#L24">24</span>
<span id="L25" rel="#L25">25</span>
<span id="L26" rel="#L26">26</span>
<span id="L27" rel="#L27">27</span>
<span id="L28" rel="#L28">28</span>
<span id="L29" rel="#L29">29</span>
<span id="L30" rel="#L30">30</span>
<span id="L31" rel="#L31">31</span>
<span id="L32" rel="#L32">32</span>
<span id="L33" rel="#L33">33</span>
<span id="L34" rel="#L34">34</span>
<span id="L35" rel="#L35">35</span>
<span id="L36" rel="#L36">36</span>
<span id="L37" rel="#L37">37</span>
<span id="L38" rel="#L38">38</span>
<span id="L39" rel="#L39">39</span>
<span id="L40" rel="#L40">40</span>
<span id="L41" rel="#L41">41</span>
<span id="L42" rel="#L42">42</span>
<span id="L43" rel="#L43">43</span>
<span id="L44" rel="#L44">44</span>
<span id="L45" rel="#L45">45</span>
<span id="L46" rel="#L46">46</span>
<span id="L47" rel="#L47">47</span>
<span id="L48" rel="#L48">48</span>
<span id="L49" rel="#L49">49</span>
<span id="L50" rel="#L50">50</span>
<span id="L51" rel="#L51">51</span>
<span id="L52" rel="#L52">52</span>
<span id="L53" rel="#L53">53</span>
<span id="L54" rel="#L54">54</span>
<span id="L55" rel="#L55">55</span>
<span id="L56" rel="#L56">56</span>
<span id="L57" rel="#L57">57</span>
<span id="L58" rel="#L58">58</span>
<span id="L59" rel="#L59">59</span>
<span id="L60" rel="#L60">60</span>
<span id="L61" rel="#L61">61</span>
<span id="L62" rel="#L62">62</span>
<span id="L63" rel="#L63">63</span>
<span id="L64" rel="#L64">64</span>
<span id="L65" rel="#L65">65</span>
<span id="L66" rel="#L66">66</span>
<span id="L67" rel="#L67">67</span>
<span id="L68" rel="#L68">68</span>
<span id="L69" rel="#L69">69</span>
<span id="L70" rel="#L70">70</span>
<span id="L71" rel="#L71">71</span>
<span id="L72" rel="#L72">72</span>
<span id="L73" rel="#L73">73</span>
<span id="L74" rel="#L74">74</span>
<span id="L75" rel="#L75">75</span>
<span id="L76" rel="#L76">76</span>
<span id="L77" rel="#L77">77</span>
<span id="L78" rel="#L78">78</span>
<span id="L79" rel="#L79">79</span>
<span id="L80" rel="#L80">80</span>
<span id="L81" rel="#L81">81</span>
<span id="L82" rel="#L82">82</span>
<span id="L83" rel="#L83">83</span>
<span id="L84" rel="#L84">84</span>
<span id="L85" rel="#L85">85</span>
<span id="L86" rel="#L86">86</span>
<span id="L87" rel="#L87">87</span>
<span id="L88" rel="#L88">88</span>
<span id="L89" rel="#L89">89</span>
<span id="L90" rel="#L90">90</span>
<span id="L91" rel="#L91">91</span>
<span id="L92" rel="#L92">92</span>
<span id="L93" rel="#L93">93</span>
<span id="L94" rel="#L94">94</span>
<span id="L95" rel="#L95">95</span>
<span id="L96" rel="#L96">96</span>
<span id="L97" rel="#L97">97</span>
<span id="L98" rel="#L98">98</span>
<span id="L99" rel="#L99">99</span>
<span id="L100" rel="#L100">100</span>
<span id="L101" rel="#L101">101</span>
<span id="L102" rel="#L102">102</span>
<span id="L103" rel="#L103">103</span>
<span id="L104" rel="#L104">104</span>
<span id="L105" rel="#L105">105</span>
<span id="L106" rel="#L106">106</span>
<span id="L107" rel="#L107">107</span>
<span id="L108" rel="#L108">108</span>
<span id="L109" rel="#L109">109</span>
<span id="L110" rel="#L110">110</span>
<span id="L111" rel="#L111">111</span>
<span id="L112" rel="#L112">112</span>
<span id="L113" rel="#L113">113</span>
<span id="L114" rel="#L114">114</span>
<span id="L115" rel="#L115">115</span>
<span id="L116" rel="#L116">116</span>
<span id="L117" rel="#L117">117</span>
<span id="L118" rel="#L118">118</span>
<span id="L119" rel="#L119">119</span>
<span id="L120" rel="#L120">120</span>
<span id="L121" rel="#L121">121</span>
<span id="L122" rel="#L122">122</span>
<span id="L123" rel="#L123">123</span>
<span id="L124" rel="#L124">124</span>
<span id="L125" rel="#L125">125</span>
<span id="L126" rel="#L126">126</span>
<span id="L127" rel="#L127">127</span>
<span id="L128" rel="#L128">128</span>
<span id="L129" rel="#L129">129</span>
<span id="L130" rel="#L130">130</span>
<span id="L131" rel="#L131">131</span>
<span id="L132" rel="#L132">132</span>
<span id="L133" rel="#L133">133</span>
<span id="L134" rel="#L134">134</span>
<span id="L135" rel="#L135">135</span>
<span id="L136" rel="#L136">136</span>
<span id="L137" rel="#L137">137</span>
<span id="L138" rel="#L138">138</span>
<span id="L139" rel="#L139">139</span>
<span id="L140" rel="#L140">140</span>
<span id="L141" rel="#L141">141</span>
<span id="L142" rel="#L142">142</span>
<span id="L143" rel="#L143">143</span>
<span id="L144" rel="#L144">144</span>
<span id="L145" rel="#L145">145</span>

          </td>
          <td class="blob-line-code">
                  <div class="highlight"><pre><div class='line' id='LC1'><span class="cm">/**</span></div><div class='line' id='LC2'><span class="cm"> * @version: 1.0 Alpha-1</span></div><div class='line' id='LC3'><span class="cm"> * @author: Coolite Inc. http://www.coolite.com/</span></div><div class='line' id='LC4'><span class="cm"> * @date: 2008-05-13</span></div><div class='line' id='LC5'><span class="cm"> * @copyright: Copyright (c) 2006-2008, Coolite Inc. (http://www.coolite.com/). All rights reserved.</span></div><div class='line' id='LC6'><span class="cm"> * @license: Licensed under The MIT License. See license.txt and http://www.datejs.com/license/. </span></div><div class='line' id='LC7'><span class="cm"> * @website: http://www.datejs.com/</span></div><div class='line' id='LC8'><span class="cm"> */</span></div><div class='line' id='LC9'><span class="nb">Date</span><span class="p">.</span><span class="nx">CultureInfo</span><span class="o">=</span><span class="p">{</span><span class="nx">name</span><span class="o">:</span><span class="s2">&quot;en-US&quot;</span><span class="p">,</span><span class="nx">englishName</span><span class="o">:</span><span class="s2">&quot;English (United States)&quot;</span><span class="p">,</span><span class="nx">nativeName</span><span class="o">:</span><span class="s2">&quot;English (United States)&quot;</span><span class="p">,</span><span class="nx">dayNames</span><span class="o">:</span><span class="p">[</span><span class="s2">&quot;Sunday&quot;</span><span class="p">,</span><span class="s2">&quot;Monday&quot;</span><span class="p">,</span><span class="s2">&quot;Tuesday&quot;</span><span class="p">,</span><span class="s2">&quot;Wednesday&quot;</span><span class="p">,</span><span class="s2">&quot;Thursday&quot;</span><span class="p">,</span><span class="s2">&quot;Friday&quot;</span><span class="p">,</span><span class="s2">&quot;Saturday&quot;</span><span class="p">],</span><span class="nx">abbreviatedDayNames</span><span class="o">:</span><span class="p">[</span><span class="s2">&quot;Sun&quot;</span><span class="p">,</span><span class="s2">&quot;Mon&quot;</span><span class="p">,</span><span class="s2">&quot;Tue&quot;</span><span class="p">,</span><span class="s2">&quot;Wed&quot;</span><span class="p">,</span><span class="s2">&quot;Thu&quot;</span><span class="p">,</span><span class="s2">&quot;Fri&quot;</span><span class="p">,</span><span class="s2">&quot;Sat&quot;</span><span class="p">],</span><span class="nx">shortestDayNames</span><span class="o">:</span><span class="p">[</span><span class="s2">&quot;Su&quot;</span><span class="p">,</span><span class="s2">&quot;Mo&quot;</span><span class="p">,</span><span class="s2">&quot;Tu&quot;</span><span class="p">,</span><span class="s2">&quot;We&quot;</span><span class="p">,</span><span class="s2">&quot;Th&quot;</span><span class="p">,</span><span class="s2">&quot;Fr&quot;</span><span class="p">,</span><span class="s2">&quot;Sa&quot;</span><span class="p">],</span><span class="nx">firstLetterDayNames</span><span class="o">:</span><span class="p">[</span><span class="s2">&quot;S&quot;</span><span class="p">,</span><span class="s2">&quot;M&quot;</span><span class="p">,</span><span class="s2">&quot;T&quot;</span><span class="p">,</span><span class="s2">&quot;W&quot;</span><span class="p">,</span><span class="s2">&quot;T&quot;</span><span class="p">,</span><span class="s2">&quot;F&quot;</span><span class="p">,</span><span class="s2">&quot;S&quot;</span><span class="p">],</span><span class="nx">monthNames</span><span class="o">:</span><span class="p">[</span><span class="s2">&quot;January&quot;</span><span class="p">,</span><span class="s2">&quot;February&quot;</span><span class="p">,</span><span class="s2">&quot;March&quot;</span><span class="p">,</span><span class="s2">&quot;April&quot;</span><span class="p">,</span><span class="s2">&quot;May&quot;</span><span class="p">,</span><span class="s2">&quot;June&quot;</span><span class="p">,</span><span class="s2">&quot;July&quot;</span><span class="p">,</span><span class="s2">&quot;August&quot;</span><span class="p">,</span><span class="s2">&quot;September&quot;</span><span class="p">,</span><span class="s2">&quot;October&quot;</span><span class="p">,</span><span class="s2">&quot;November&quot;</span><span class="p">,</span><span class="s2">&quot;December&quot;</span><span class="p">],</span><span class="nx">abbreviatedMonthNames</span><span class="o">:</span><span class="p">[</span><span class="s2">&quot;Jan&quot;</span><span class="p">,</span><span class="s2">&quot;Feb&quot;</span><span class="p">,</span><span class="s2">&quot;Mar&quot;</span><span class="p">,</span><span class="s2">&quot;Apr&quot;</span><span class="p">,</span><span class="s2">&quot;May&quot;</span><span class="p">,</span><span class="s2">&quot;Jun&quot;</span><span class="p">,</span><span class="s2">&quot;Jul&quot;</span><span class="p">,</span><span class="s2">&quot;Aug&quot;</span><span class="p">,</span><span class="s2">&quot;Sep&quot;</span><span class="p">,</span><span class="s2">&quot;Oct&quot;</span><span class="p">,</span><span class="s2">&quot;Nov&quot;</span><span class="p">,</span><span class="s2">&quot;Dec&quot;</span><span class="p">],</span><span class="nx">amDesignator</span><span class="o">:</span><span class="s2">&quot;AM&quot;</span><span class="p">,</span><span class="nx">pmDesignator</span><span class="o">:</span><span class="s2">&quot;PM&quot;</span><span class="p">,</span><span class="nx">firstDayOfWeek</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">twoDigitYearMax</span><span class="o">:</span><span class="mi">2029</span><span class="p">,</span><span class="nx">dateElementOrder</span><span class="o">:</span><span class="s2">&quot;mdy&quot;</span><span class="p">,</span><span class="nx">formatPatterns</span><span class="o">:</span><span class="p">{</span><span class="nx">shortDate</span><span class="o">:</span><span class="s2">&quot;M/d/yyyy&quot;</span><span class="p">,</span><span class="nx">longDate</span><span class="o">:</span><span class="s2">&quot;dddd, MMMM dd, yyyy&quot;</span><span class="p">,</span><span class="nx">shortTime</span><span class="o">:</span><span class="s2">&quot;h:mm tt&quot;</span><span class="p">,</span><span class="nx">longTime</span><span class="o">:</span><span class="s2">&quot;h:mm:ss tt&quot;</span><span class="p">,</span><span class="nx">fullDateTime</span><span class="o">:</span><span class="s2">&quot;dddd, MMMM dd, yyyy h:mm:ss tt&quot;</span><span class="p">,</span><span class="nx">sortableDateTime</span><span class="o">:</span><span class="s2">&quot;yyyy-MM-ddTHH:mm:ss&quot;</span><span class="p">,</span><span class="nx">universalSortableDateTime</span><span class="o">:</span><span class="s2">&quot;yyyy-MM-dd HH:mm:ssZ&quot;</span><span class="p">,</span><span class="nx">rfc1123</span><span class="o">:</span><span class="s2">&quot;ddd, dd MMM yyyy HH:mm:ss GMT&quot;</span><span class="p">,</span><span class="nx">monthDay</span><span class="o">:</span><span class="s2">&quot;MMMM dd&quot;</span><span class="p">,</span><span class="nx">yearMonth</span><span class="o">:</span><span class="s2">&quot;MMMM, yyyy&quot;</span><span class="p">},</span><span class="nx">regexPatterns</span><span class="o">:</span><span class="p">{</span><span class="nx">jan</span><span class="o">:</span><span class="sr">/^jan(uary)?/i</span><span class="p">,</span><span class="nx">feb</span><span class="o">:</span><span class="sr">/^feb(ruary)?/i</span><span class="p">,</span><span class="nx">mar</span><span class="o">:</span><span class="sr">/^mar(ch)?/i</span><span class="p">,</span><span class="nx">apr</span><span class="o">:</span><span class="sr">/^apr(il)?/i</span><span class="p">,</span><span class="nx">may</span><span class="o">:</span><span class="sr">/^may/i</span><span class="p">,</span><span class="nx">jun</span><span class="o">:</span><span class="sr">/^jun(e)?/i</span><span class="p">,</span><span class="nx">jul</span><span class="o">:</span><span class="sr">/^jul(y)?/i</span><span class="p">,</span><span class="nx">aug</span><span class="o">:</span><span class="sr">/^aug(ust)?/i</span><span class="p">,</span><span class="nx">sep</span><span class="o">:</span><span class="sr">/^sep(t(ember)?)?/i</span><span class="p">,</span><span class="nx">oct</span><span class="o">:</span><span class="sr">/^oct(ober)?/i</span><span class="p">,</span><span class="nx">nov</span><span class="o">:</span><span class="sr">/^nov(ember)?/i</span><span class="p">,</span><span class="nx">dec</span><span class="o">:</span><span class="sr">/^dec(ember)?/i</span><span class="p">,</span><span class="nb">sun</span><span class="o">:</span><span class="sr">/^su(n(day)?)?/i</span><span class="p">,</span><span class="nx">mon</span><span class="o">:</span><span class="sr">/^mo(n(day)?)?/i</span><span class="p">,</span><span class="nx">tue</span><span class="o">:</span><span class="sr">/^tu(e(s(day)?)?)?/i</span><span class="p">,</span><span class="nx">wed</span><span class="o">:</span><span class="sr">/^we(d(nesday)?)?/i</span><span class="p">,</span><span class="nx">thu</span><span class="o">:</span><span class="sr">/^th(u(r(s(day)?)?)?)?/i</span><span class="p">,</span><span class="nx">fri</span><span class="o">:</span><span class="sr">/^fr(i(day)?)?/i</span><span class="p">,</span><span class="nx">sat</span><span class="o">:</span><span class="sr">/^sa(t(urday)?)?/i</span><span class="p">,</span><span class="nx">future</span><span class="o">:</span><span class="sr">/^next/i</span><span class="p">,</span><span class="nx">past</span><span class="o">:</span><span class="sr">/^last|past|prev(ious)?/i</span><span class="p">,</span><span class="nx">add</span><span class="o">:</span><span class="sr">/^(\+|aft(er)?|from|hence)/i</span><span class="p">,</span><span class="nx">subtract</span><span class="o">:</span><span class="sr">/^(\-|bef(ore)?|ago)/i</span><span class="p">,</span><span class="nx">yesterday</span><span class="o">:</span><span class="sr">/^yes(terday)?/i</span><span class="p">,</span><span class="nx">today</span><span class="o">:</span><span class="sr">/^t(od(ay)?)?/i</span><span class="p">,</span><span class="nx">tomorrow</span><span class="o">:</span><span class="sr">/^tom(orrow)?/i</span><span class="p">,</span><span class="nx">now</span><span class="o">:</span><span class="sr">/^n(ow)?/i</span><span class="p">,</span><span class="nx">millisecond</span><span class="o">:</span><span class="sr">/^ms|milli(second)?s?/i</span><span class="p">,</span><span class="nx">second</span><span class="o">:</span><span class="sr">/^sec(ond)?s?/i</span><span class="p">,</span><span class="nx">minute</span><span class="o">:</span><span class="sr">/^mn|min(ute)?s?/i</span><span class="p">,</span><span class="nx">hour</span><span class="o">:</span><span class="sr">/^h(our)?s?/i</span><span class="p">,</span><span class="nx">week</span><span class="o">:</span><span class="sr">/^w(eek)?s?/i</span><span class="p">,</span><span class="nx">month</span><span class="o">:</span><span class="sr">/^m(onth)?s?/i</span><span class="p">,</span><span class="nx">day</span><span class="o">:</span><span class="sr">/^d(ay)?s?/i</span><span class="p">,</span><span class="nx">year</span><span class="o">:</span><span class="sr">/^y(ear)?s?/i</span><span class="p">,</span><span class="nx">shortMeridian</span><span class="o">:</span><span class="sr">/^(a|p)/i</span><span class="p">,</span><span class="nx">longMeridian</span><span class="o">:</span><span class="sr">/^(a\.?m?\.?|p\.?m?\.?)/i</span><span class="p">,</span><span class="nx">timezone</span><span class="o">:</span><span class="sr">/^((e(s|d)t|c(s|d)t|m(s|d)t|p(s|d)t)|((gmt)?\s*(\+|\-)\s*\d\d\d\d?)|gmt|utc)/i</span><span class="p">,</span><span class="nx">ordinalSuffix</span><span class="o">:</span><span class="sr">/^\s*(st|nd|rd|th)/i</span><span class="p">,</span><span class="nx">timeContext</span><span class="o">:</span><span class="sr">/^\s*(\:|a(?!u|p)|p)/i</span><span class="p">},</span><span class="nx">timezones</span><span class="o">:</span><span class="p">[{</span><span class="nx">name</span><span class="o">:</span><span class="s2">&quot;UTC&quot;</span><span class="p">,</span><span class="nx">offset</span><span class="o">:</span><span class="s2">&quot;-000&quot;</span><span class="p">},{</span><span class="nx">name</span><span class="o">:</span><span class="s2">&quot;GMT&quot;</span><span class="p">,</span><span class="nx">offset</span><span class="o">:</span><span class="s2">&quot;-000&quot;</span><span class="p">},{</span><span class="nx">name</span><span class="o">:</span><span class="s2">&quot;EST&quot;</span><span class="p">,</span><span class="nx">offset</span><span class="o">:</span><span class="s2">&quot;-0500&quot;</span><span class="p">},{</span><span class="nx">name</span><span class="o">:</span><span class="s2">&quot;EDT&quot;</span><span class="p">,</span><span class="nx">offset</span><span class="o">:</span><span class="s2">&quot;-0400&quot;</span><span class="p">},{</span><span class="nx">name</span><span class="o">:</span><span class="s2">&quot;CST&quot;</span><span class="p">,</span><span class="nx">offset</span><span class="o">:</span><span class="s2">&quot;-0600&quot;</span><span class="p">},{</span><span class="nx">name</span><span class="o">:</span><span class="s2">&quot;CDT&quot;</span><span class="p">,</span><span class="nx">offset</span><span class="o">:</span><span class="s2">&quot;-0500&quot;</span><span class="p">},{</span><span class="nx">name</span><span class="o">:</span><span class="s2">&quot;MST&quot;</span><span class="p">,</span><span class="nx">offset</span><span class="o">:</span><span class="s2">&quot;-0700&quot;</span><span class="p">},{</span><span class="nx">name</span><span class="o">:</span><span class="s2">&quot;MDT&quot;</span><span class="p">,</span><span class="nx">offset</span><span class="o">:</span><span class="s2">&quot;-0600&quot;</span><span class="p">},{</span><span class="nx">name</span><span class="o">:</span><span class="s2">&quot;PST&quot;</span><span class="p">,</span><span class="nx">offset</span><span class="o">:</span><span class="s2">&quot;-0800&quot;</span><span class="p">},{</span><span class="nx">name</span><span class="o">:</span><span class="s2">&quot;PDT&quot;</span><span class="p">,</span><span class="nx">offset</span><span class="o">:</span><span class="s2">&quot;-0700&quot;</span><span class="p">}]};</span></div><div class='line' id='LC10'><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">$D</span><span class="o">=</span><span class="nb">Date</span><span class="p">,</span><span class="nx">$P</span><span class="o">=</span><span class="nx">$D</span><span class="p">.</span><span class="nx">prototype</span><span class="p">,</span><span class="nx">$C</span><span class="o">=</span><span class="nx">$D</span><span class="p">.</span><span class="nx">CultureInfo</span><span class="p">,</span><span class="nx">p</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">s</span><span class="p">,</span><span class="nx">l</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">l</span><span class="p">){</span><span class="nx">l</span><span class="o">=</span><span class="mi">2</span><span class="p">;}</span></div><div class='line' id='LC11'><span class="k">return</span><span class="p">(</span><span class="s2">&quot;000&quot;</span><span class="o">+</span><span class="nx">s</span><span class="p">).</span><span class="nx">slice</span><span class="p">(</span><span class="nx">l</span><span class="o">*-</span><span class="mi">1</span><span class="p">);};</span><span class="nx">$P</span><span class="p">.</span><span class="nx">clearTime</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">setHours</span><span class="p">(</span><span class="mi">0</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">setMinutes</span><span class="p">(</span><span class="mi">0</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">setSeconds</span><span class="p">(</span><span class="mi">0</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">setMilliseconds</span><span class="p">(</span><span class="mi">0</span><span class="p">);</span><span class="k">return</span> <span class="k">this</span><span class="p">;};</span><span class="nx">$P</span><span class="p">.</span><span class="nx">setTimeToNow</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">n</span><span class="o">=</span><span class="k">new</span> <span class="nb">Date</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">setHours</span><span class="p">(</span><span class="nx">n</span><span class="p">.</span><span class="nx">getHours</span><span class="p">());</span><span class="k">this</span><span class="p">.</span><span class="nx">setMinutes</span><span class="p">(</span><span class="nx">n</span><span class="p">.</span><span class="nx">getMinutes</span><span class="p">());</span><span class="k">this</span><span class="p">.</span><span class="nx">setSeconds</span><span class="p">(</span><span class="nx">n</span><span class="p">.</span><span class="nx">getSeconds</span><span class="p">());</span><span class="k">this</span><span class="p">.</span><span class="nx">setMilliseconds</span><span class="p">(</span><span class="nx">n</span><span class="p">.</span><span class="nx">getMilliseconds</span><span class="p">());</span><span class="k">return</span> <span class="k">this</span><span class="p">;};</span><span class="nx">$D</span><span class="p">.</span><span class="nx">today</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">new</span> <span class="nb">Date</span><span class="p">().</span><span class="nx">clearTime</span><span class="p">();};</span><span class="nx">$D</span><span class="p">.</span><span class="nx">compare</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">date1</span><span class="p">,</span><span class="nx">date2</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nb">isNaN</span><span class="p">(</span><span class="nx">date1</span><span class="p">)</span><span class="o">||</span><span class="nb">isNaN</span><span class="p">(</span><span class="nx">date2</span><span class="p">)){</span><span class="k">throw</span> <span class="k">new</span> <span class="nb">Error</span><span class="p">(</span><span class="nx">date1</span><span class="o">+</span><span class="s2">&quot; - &quot;</span><span class="o">+</span><span class="nx">date2</span><span class="p">);}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">date1</span> <span class="k">instanceof</span> <span class="nb">Date</span><span class="o">&amp;&amp;</span><span class="nx">date2</span> <span class="k">instanceof</span> <span class="nb">Date</span><span class="p">){</span><span class="k">return</span><span class="p">(</span><span class="nx">date1</span><span class="o">&lt;</span><span class="nx">date2</span><span class="p">)</span><span class="o">?-</span><span class="mi">1</span><span class="o">:</span><span class="p">(</span><span class="nx">date1</span><span class="o">&gt;</span><span class="nx">date2</span><span class="p">)</span><span class="o">?</span><span class="mi">1</span><span class="o">:</span><span class="mi">0</span><span class="p">;}</span><span class="k">else</span><span class="p">{</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">TypeError</span><span class="p">(</span><span class="nx">date1</span><span class="o">+</span><span class="s2">&quot; - &quot;</span><span class="o">+</span><span class="nx">date2</span><span class="p">);}};</span><span class="nx">$D</span><span class="p">.</span><span class="nx">equals</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">date1</span><span class="p">,</span><span class="nx">date2</span><span class="p">){</span><span class="k">return</span><span class="p">(</span><span class="nx">date1</span><span class="p">.</span><span class="nx">compareTo</span><span class="p">(</span><span class="nx">date2</span><span class="p">)</span><span class="o">===</span><span class="mi">0</span><span class="p">);};</span><span class="nx">$D</span><span class="p">.</span><span class="nx">getDayNumberFromName</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">name</span><span class="p">){</span><span class="kd">var</span> <span class="nx">n</span><span class="o">=</span><span class="nx">$C</span><span class="p">.</span><span class="nx">dayNames</span><span class="p">,</span><span class="nx">m</span><span class="o">=</span><span class="nx">$C</span><span class="p">.</span><span class="nx">abbreviatedDayNames</span><span class="p">,</span><span class="nx">o</span><span class="o">=</span><span class="nx">$C</span><span class="p">.</span><span class="nx">shortestDayNames</span><span class="p">,</span><span class="nx">s</span><span class="o">=</span><span class="nx">name</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">();</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">i</span><span class="o">&lt;</span><span class="nx">n</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">i</span><span class="o">++</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">n</span><span class="p">[</span><span class="nx">i</span><span class="p">].</span><span class="nx">toLowerCase</span><span class="p">()</span><span class="o">==</span><span class="nx">s</span><span class="o">||</span><span class="nx">m</span><span class="p">[</span><span class="nx">i</span><span class="p">].</span><span class="nx">toLowerCase</span><span class="p">()</span><span class="o">==</span><span class="nx">s</span><span class="o">||</span><span class="nx">o</span><span class="p">[</span><span class="nx">i</span><span class="p">].</span><span class="nx">toLowerCase</span><span class="p">()</span><span class="o">==</span><span class="nx">s</span><span class="p">){</span><span class="k">return</span> <span class="nx">i</span><span class="p">;}}</span></div><div class='line' id='LC12'><span class="k">return</span><span class="o">-</span><span class="mi">1</span><span class="p">;};</span><span class="nx">$D</span><span class="p">.</span><span class="nx">getMonthNumberFromName</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">name</span><span class="p">){</span><span class="kd">var</span> <span class="nx">n</span><span class="o">=</span><span class="nx">$C</span><span class="p">.</span><span class="nx">monthNames</span><span class="p">,</span><span class="nx">m</span><span class="o">=</span><span class="nx">$C</span><span class="p">.</span><span class="nx">abbreviatedMonthNames</span><span class="p">,</span><span class="nx">s</span><span class="o">=</span><span class="nx">name</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">();</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">i</span><span class="o">&lt;</span><span class="nx">n</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">i</span><span class="o">++</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">n</span><span class="p">[</span><span class="nx">i</span><span class="p">].</span><span class="nx">toLowerCase</span><span class="p">()</span><span class="o">==</span><span class="nx">s</span><span class="o">||</span><span class="nx">m</span><span class="p">[</span><span class="nx">i</span><span class="p">].</span><span class="nx">toLowerCase</span><span class="p">()</span><span class="o">==</span><span class="nx">s</span><span class="p">){</span><span class="k">return</span> <span class="nx">i</span><span class="p">;}}</span></div><div class='line' id='LC13'><span class="k">return</span><span class="o">-</span><span class="mi">1</span><span class="p">;};</span><span class="nx">$D</span><span class="p">.</span><span class="nx">isLeapYear</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">year</span><span class="p">){</span><span class="k">return</span><span class="p">((</span><span class="nx">year</span><span class="o">%</span><span class="mi">4</span><span class="o">===</span><span class="mi">0</span><span class="o">&amp;&amp;</span><span class="nx">year</span><span class="o">%</span><span class="mi">100</span><span class="o">!==</span><span class="mi">0</span><span class="p">)</span><span class="o">||</span><span class="nx">year</span><span class="o">%</span><span class="mi">400</span><span class="o">===</span><span class="mi">0</span><span class="p">);};</span><span class="nx">$D</span><span class="p">.</span><span class="nx">getDaysInMonth</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">year</span><span class="p">,</span><span class="nx">month</span><span class="p">){</span><span class="k">return</span><span class="p">[</span><span class="mi">31</span><span class="p">,(</span><span class="nx">$D</span><span class="p">.</span><span class="nx">isLeapYear</span><span class="p">(</span><span class="nx">year</span><span class="p">)</span><span class="o">?</span><span class="mi">29</span><span class="o">:</span><span class="mi">28</span><span class="p">),</span><span class="mi">31</span><span class="p">,</span><span class="mi">30</span><span class="p">,</span><span class="mi">31</span><span class="p">,</span><span class="mi">30</span><span class="p">,</span><span class="mi">31</span><span class="p">,</span><span class="mi">31</span><span class="p">,</span><span class="mi">30</span><span class="p">,</span><span class="mi">31</span><span class="p">,</span><span class="mi">30</span><span class="p">,</span><span class="mi">31</span><span class="p">][</span><span class="nx">month</span><span class="p">];};</span><span class="nx">$D</span><span class="p">.</span><span class="nx">getTimezoneAbbreviation</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">offset</span><span class="p">){</span><span class="kd">var</span> <span class="nx">z</span><span class="o">=</span><span class="nx">$C</span><span class="p">.</span><span class="nx">timezones</span><span class="p">,</span><span class="nx">p</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">i</span><span class="o">&lt;</span><span class="nx">z</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">i</span><span class="o">++</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">z</span><span class="p">[</span><span class="nx">i</span><span class="p">].</span><span class="nx">offset</span><span class="o">===</span><span class="nx">offset</span><span class="p">){</span><span class="k">return</span> <span class="nx">z</span><span class="p">[</span><span class="nx">i</span><span class="p">].</span><span class="nx">name</span><span class="p">;}}</span></div><div class='line' id='LC14'><span class="k">return</span> <span class="kc">null</span><span class="p">;};</span><span class="nx">$D</span><span class="p">.</span><span class="nx">getTimezoneOffset</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">name</span><span class="p">){</span><span class="kd">var</span> <span class="nx">z</span><span class="o">=</span><span class="nx">$C</span><span class="p">.</span><span class="nx">timezones</span><span class="p">,</span><span class="nx">p</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">i</span><span class="o">&lt;</span><span class="nx">z</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">i</span><span class="o">++</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">z</span><span class="p">[</span><span class="nx">i</span><span class="p">].</span><span class="nx">name</span><span class="o">===</span><span class="nx">name</span><span class="p">.</span><span class="nx">toUpperCase</span><span class="p">()){</span><span class="k">return</span> <span class="nx">z</span><span class="p">[</span><span class="nx">i</span><span class="p">].</span><span class="nx">offset</span><span class="p">;}}</span></div><div class='line' id='LC15'><span class="k">return</span> <span class="kc">null</span><span class="p">;};</span><span class="nx">$P</span><span class="p">.</span><span class="nx">clone</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">new</span> <span class="nb">Date</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">getTime</span><span class="p">());};</span><span class="nx">$P</span><span class="p">.</span><span class="nx">compareTo</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">date</span><span class="p">){</span><span class="k">return</span> <span class="nb">Date</span><span class="p">.</span><span class="nx">compare</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">date</span><span class="p">);};</span><span class="nx">$P</span><span class="p">.</span><span class="nx">equals</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">date</span><span class="p">){</span><span class="k">return</span> <span class="nb">Date</span><span class="p">.</span><span class="nx">equals</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">date</span><span class="o">||</span><span class="k">new</span> <span class="nb">Date</span><span class="p">());};</span><span class="nx">$P</span><span class="p">.</span><span class="nx">between</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">start</span><span class="p">,</span><span class="nx">end</span><span class="p">){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">getTime</span><span class="p">()</span><span class="o">&gt;=</span><span class="nx">start</span><span class="p">.</span><span class="nx">getTime</span><span class="p">()</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">getTime</span><span class="p">()</span><span class="o">&lt;=</span><span class="nx">end</span><span class="p">.</span><span class="nx">getTime</span><span class="p">();};</span><span class="nx">$P</span><span class="p">.</span><span class="nx">isAfter</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">date</span><span class="p">){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">compareTo</span><span class="p">(</span><span class="nx">date</span><span class="o">||</span><span class="k">new</span> <span class="nb">Date</span><span class="p">())</span><span class="o">===</span><span class="mi">1</span><span class="p">;};</span><span class="nx">$P</span><span class="p">.</span><span class="nx">isBefore</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">date</span><span class="p">){</span><span class="k">return</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">compareTo</span><span class="p">(</span><span class="nx">date</span><span class="o">||</span><span class="k">new</span> <span class="nb">Date</span><span class="p">())</span><span class="o">===-</span><span class="mi">1</span><span class="p">);};</span><span class="nx">$P</span><span class="p">.</span><span class="nx">isToday</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">isSameDay</span><span class="p">(</span><span class="k">new</span> <span class="nb">Date</span><span class="p">());};</span><span class="nx">$P</span><span class="p">.</span><span class="nx">isSameDay</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">date</span><span class="p">){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">clone</span><span class="p">().</span><span class="nx">clearTime</span><span class="p">().</span><span class="nx">equals</span><span class="p">(</span><span class="nx">date</span><span class="p">.</span><span class="nx">clone</span><span class="p">().</span><span class="nx">clearTime</span><span class="p">());};</span><span class="nx">$P</span><span class="p">.</span><span class="nx">addMilliseconds</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">value</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">setMilliseconds</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">getMilliseconds</span><span class="p">()</span><span class="o">+</span><span class="nx">value</span><span class="p">);</span><span class="k">return</span> <span class="k">this</span><span class="p">;};</span><span class="nx">$P</span><span class="p">.</span><span class="nx">addSeconds</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">value</span><span class="p">){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">addMilliseconds</span><span class="p">(</span><span class="nx">value</span><span class="o">*</span><span class="mi">1000</span><span class="p">);};</span><span class="nx">$P</span><span class="p">.</span><span class="nx">addMinutes</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">value</span><span class="p">){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">addMilliseconds</span><span class="p">(</span><span class="nx">value</span><span class="o">*</span><span class="mi">60000</span><span class="p">);};</span><span class="nx">$P</span><span class="p">.</span><span class="nx">addHours</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">value</span><span class="p">){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">addMilliseconds</span><span class="p">(</span><span class="nx">value</span><span class="o">*</span><span class="mi">3600000</span><span class="p">);};</span><span class="nx">$P</span><span class="p">.</span><span class="nx">addDays</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">value</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">setDate</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">getDate</span><span class="p">()</span><span class="o">+</span><span class="nx">value</span><span class="p">);</span><span class="k">return</span> <span class="k">this</span><span class="p">;};</span><span class="nx">$P</span><span class="p">.</span><span class="nx">addWeeks</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">value</span><span class="p">){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">addDays</span><span class="p">(</span><span class="nx">value</span><span class="o">*</span><span class="mi">7</span><span class="p">);};</span><span class="nx">$P</span><span class="p">.</span><span class="nx">addMonths</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">value</span><span class="p">){</span><span class="kd">var</span> <span class="nx">n</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">getDate</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">setDate</span><span class="p">(</span><span class="mi">1</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">setMonth</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">getMonth</span><span class="p">()</span><span class="o">+</span><span class="nx">value</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">setDate</span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">min</span><span class="p">(</span><span class="nx">n</span><span class="p">,</span><span class="nx">$D</span><span class="p">.</span><span class="nx">getDaysInMonth</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">getFullYear</span><span class="p">(),</span><span class="k">this</span><span class="p">.</span><span class="nx">getMonth</span><span class="p">())));</span><span class="k">return</span> <span class="k">this</span><span class="p">;};</span><span class="nx">$P</span><span class="p">.</span><span class="nx">addYears</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">value</span><span class="p">){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">addMonths</span><span class="p">(</span><span class="nx">value</span><span class="o">*</span><span class="mi">12</span><span class="p">);};</span><span class="nx">$P</span><span class="p">.</span><span class="nx">add</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">config</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">config</span><span class="o">==</span><span class="s2">&quot;number&quot;</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">_orient</span><span class="o">=</span><span class="nx">config</span><span class="p">;</span><span class="k">return</span> <span class="k">this</span><span class="p">;}</span></div><div class='line' id='LC16'><span class="kd">var</span> <span class="nx">x</span><span class="o">=</span><span class="nx">config</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">x</span><span class="p">.</span><span class="nx">milliseconds</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">addMilliseconds</span><span class="p">(</span><span class="nx">x</span><span class="p">.</span><span class="nx">milliseconds</span><span class="p">);}</span></div><div class='line' id='LC17'><span class="k">if</span><span class="p">(</span><span class="nx">x</span><span class="p">.</span><span class="nx">seconds</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">addSeconds</span><span class="p">(</span><span class="nx">x</span><span class="p">.</span><span class="nx">seconds</span><span class="p">);}</span></div><div class='line' id='LC18'><span class="k">if</span><span class="p">(</span><span class="nx">x</span><span class="p">.</span><span class="nx">minutes</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">addMinutes</span><span class="p">(</span><span class="nx">x</span><span class="p">.</span><span class="nx">minutes</span><span class="p">);}</span></div><div class='line' id='LC19'><span class="k">if</span><span class="p">(</span><span class="nx">x</span><span class="p">.</span><span class="nx">hours</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">addHours</span><span class="p">(</span><span class="nx">x</span><span class="p">.</span><span class="nx">hours</span><span class="p">);}</span></div><div class='line' id='LC20'><span class="k">if</span><span class="p">(</span><span class="nx">x</span><span class="p">.</span><span class="nx">weeks</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">addWeeks</span><span class="p">(</span><span class="nx">x</span><span class="p">.</span><span class="nx">weeks</span><span class="p">);}</span></div><div class='line' id='LC21'><span class="k">if</span><span class="p">(</span><span class="nx">x</span><span class="p">.</span><span class="nx">months</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">addMonths</span><span class="p">(</span><span class="nx">x</span><span class="p">.</span><span class="nx">months</span><span class="p">);}</span></div><div class='line' id='LC22'><span class="k">if</span><span class="p">(</span><span class="nx">x</span><span class="p">.</span><span class="nx">years</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">addYears</span><span class="p">(</span><span class="nx">x</span><span class="p">.</span><span class="nx">years</span><span class="p">);}</span></div><div class='line' id='LC23'><span class="k">if</span><span class="p">(</span><span class="nx">x</span><span class="p">.</span><span class="nx">days</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">addDays</span><span class="p">(</span><span class="nx">x</span><span class="p">.</span><span class="nx">days</span><span class="p">);}</span></div><div class='line' id='LC24'><span class="k">return</span> <span class="k">this</span><span class="p">;};</span><span class="kd">var</span> <span class="nx">$y</span><span class="p">,</span><span class="nx">$m</span><span class="p">,</span><span class="nx">$d</span><span class="p">;</span><span class="nx">$P</span><span class="p">.</span><span class="nx">getWeek</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">n</span><span class="p">,</span><span class="nx">s</span><span class="p">,</span><span class="nx">w</span><span class="p">;</span><span class="nx">$y</span><span class="o">=</span><span class="p">(</span><span class="o">!</span><span class="nx">$y</span><span class="p">)</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">getFullYear</span><span class="p">()</span><span class="o">:</span><span class="nx">$y</span><span class="p">;</span><span class="nx">$m</span><span class="o">=</span><span class="p">(</span><span class="o">!</span><span class="nx">$m</span><span class="p">)</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">getMonth</span><span class="p">()</span><span class="o">+</span><span class="mi">1</span><span class="o">:</span><span class="nx">$m</span><span class="p">;</span><span class="nx">$d</span><span class="o">=</span><span class="p">(</span><span class="o">!</span><span class="nx">$d</span><span class="p">)</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">getDate</span><span class="p">()</span><span class="o">:</span><span class="nx">$d</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">$m</span><span class="o">&lt;=</span><span class="mi">2</span><span class="p">){</span><span class="nx">a</span><span class="o">=</span><span class="nx">$y</span><span class="o">-</span><span class="mi">1</span><span class="p">;</span><span class="nx">b</span><span class="o">=</span><span class="p">(</span><span class="nx">a</span><span class="o">/</span><span class="mi">4</span><span class="o">|</span><span class="mi">0</span><span class="p">)</span><span class="o">-</span><span class="p">(</span><span class="nx">a</span><span class="o">/</span><span class="mi">100</span><span class="o">|</span><span class="mi">0</span><span class="p">)</span><span class="o">+</span><span class="p">(</span><span class="nx">a</span><span class="o">/</span><span class="mi">400</span><span class="o">|</span><span class="mi">0</span><span class="p">);</span><span class="nx">c</span><span class="o">=</span><span class="p">((</span><span class="nx">a</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span><span class="o">/</span><span class="mi">4</span><span class="o">|</span><span class="mi">0</span><span class="p">)</span><span class="o">-</span><span class="p">((</span><span class="nx">a</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span><span class="o">/</span><span class="mi">100</span><span class="o">|</span><span class="mi">0</span><span class="p">)</span><span class="o">+</span><span class="p">((</span><span class="nx">a</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span><span class="o">/</span><span class="mi">400</span><span class="o">|</span><span class="mi">0</span><span class="p">);</span><span class="nx">s</span><span class="o">=</span><span class="nx">b</span><span class="o">-</span><span class="nx">c</span><span class="p">;</span><span class="nx">e</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">f</span><span class="o">=</span><span class="nx">$d</span><span class="o">-</span><span class="mi">1</span><span class="o">+</span><span class="p">(</span><span class="mi">31</span><span class="o">*</span><span class="p">(</span><span class="nx">$m</span><span class="o">-</span><span class="mi">1</span><span class="p">));}</span><span class="k">else</span><span class="p">{</span><span class="nx">a</span><span class="o">=</span><span class="nx">$y</span><span class="p">;</span><span class="nx">b</span><span class="o">=</span><span class="p">(</span><span class="nx">a</span><span class="o">/</span><span class="mi">4</span><span class="o">|</span><span class="mi">0</span><span class="p">)</span><span class="o">-</span><span class="p">(</span><span class="nx">a</span><span class="o">/</span><span class="mi">100</span><span class="o">|</span><span class="mi">0</span><span class="p">)</span><span class="o">+</span><span class="p">(</span><span class="nx">a</span><span class="o">/</span><span class="mi">400</span><span class="o">|</span><span class="mi">0</span><span class="p">);</span><span class="nx">c</span><span class="o">=</span><span class="p">((</span><span class="nx">a</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span><span class="o">/</span><span class="mi">4</span><span class="o">|</span><span class="mi">0</span><span class="p">)</span><span class="o">-</span><span class="p">((</span><span class="nx">a</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span><span class="o">/</span><span class="mi">100</span><span class="o">|</span><span class="mi">0</span><span class="p">)</span><span class="o">+</span><span class="p">((</span><span class="nx">a</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span><span class="o">/</span><span class="mi">400</span><span class="o">|</span><span class="mi">0</span><span class="p">);</span><span class="nx">s</span><span class="o">=</span><span class="nx">b</span><span class="o">-</span><span class="nx">c</span><span class="p">;</span><span class="nx">e</span><span class="o">=</span><span class="nx">s</span><span class="o">+</span><span class="mi">1</span><span class="p">;</span><span class="nx">f</span><span class="o">=</span><span class="nx">$d</span><span class="o">+</span><span class="p">((</span><span class="mi">153</span><span class="o">*</span><span class="p">(</span><span class="nx">$m</span><span class="o">-</span><span class="mi">3</span><span class="p">)</span><span class="o">+</span><span class="mi">2</span><span class="p">)</span><span class="o">/</span><span class="mi">5</span><span class="p">)</span><span class="o">+</span><span class="mi">58</span><span class="o">+</span><span class="nx">s</span><span class="p">;}</span></div><div class='line' id='LC25'><span class="nx">g</span><span class="o">=</span><span class="p">(</span><span class="nx">a</span><span class="o">+</span><span class="nx">b</span><span class="p">)</span><span class="o">%</span><span class="mi">7</span><span class="p">;</span><span class="nx">d</span><span class="o">=</span><span class="p">(</span><span class="nx">f</span><span class="o">+</span><span class="nx">g</span><span class="o">-</span><span class="nx">e</span><span class="p">)</span><span class="o">%</span><span class="mi">7</span><span class="p">;</span><span class="nx">n</span><span class="o">=</span><span class="p">(</span><span class="nx">f</span><span class="o">+</span><span class="mi">3</span><span class="o">-</span><span class="nx">d</span><span class="p">)</span><span class="o">|</span><span class="mi">0</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">n</span><span class="o">&lt;</span><span class="mi">0</span><span class="p">){</span><span class="nx">w</span><span class="o">=</span><span class="mi">53</span><span class="o">-</span><span class="p">((</span><span class="nx">g</span><span class="o">-</span><span class="nx">s</span><span class="p">)</span><span class="o">/</span><span class="mi">5</span><span class="o">|</span><span class="mi">0</span><span class="p">);}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">n</span><span class="o">&gt;</span><span class="mi">364</span><span class="o">+</span><span class="nx">s</span><span class="p">){</span><span class="nx">w</span><span class="o">=</span><span class="mi">1</span><span class="p">;}</span><span class="k">else</span><span class="p">{</span><span class="nx">w</span><span class="o">=</span><span class="p">(</span><span class="nx">n</span><span class="o">/</span><span class="mi">7</span><span class="o">|</span><span class="mi">0</span><span class="p">)</span><span class="o">+</span><span class="mi">1</span><span class="p">;}</span></div><div class='line' id='LC26'><span class="nx">$y</span><span class="o">=</span><span class="nx">$m</span><span class="o">=</span><span class="nx">$d</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="k">return</span> <span class="nx">w</span><span class="p">;};</span><span class="nx">$P</span><span class="p">.</span><span class="nx">getISOWeek</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">$y</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">getUTCFullYear</span><span class="p">();</span><span class="nx">$m</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">getUTCMonth</span><span class="p">()</span><span class="o">+</span><span class="mi">1</span><span class="p">;</span><span class="nx">$d</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">getUTCDate</span><span class="p">();</span><span class="k">return</span> <span class="nx">p</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">getWeek</span><span class="p">());};</span><span class="nx">$P</span><span class="p">.</span><span class="nx">setWeek</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">n</span><span class="p">){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">moveToDayOfWeek</span><span class="p">(</span><span class="mi">1</span><span class="p">).</span><span class="nx">addWeeks</span><span class="p">(</span><span class="nx">n</span><span class="o">-</span><span class="k">this</span><span class="p">.</span><span class="nx">getWeek</span><span class="p">());};</span><span class="nx">$D</span><span class="p">.</span><span class="nx">_validate</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">n</span><span class="p">,</span><span class="nx">min</span><span class="p">,</span><span class="nx">max</span><span class="p">,</span><span class="nx">name</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">n</span><span class="o">==</span><span class="s2">&quot;undefined&quot;</span><span class="p">){</span><span class="k">return</span> <span class="kc">false</span><span class="p">;}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">n</span><span class="o">!=</span><span class="s2">&quot;number&quot;</span><span class="p">){</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">TypeError</span><span class="p">(</span><span class="nx">n</span><span class="o">+</span><span class="s2">&quot; is not a Number.&quot;</span><span class="p">);}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">n</span><span class="o">&lt;</span><span class="nx">min</span><span class="o">||</span><span class="nx">n</span><span class="o">&gt;</span><span class="nx">max</span><span class="p">){</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">RangeError</span><span class="p">(</span><span class="nx">n</span><span class="o">+</span><span class="s2">&quot; is not a valid value for &quot;</span><span class="o">+</span><span class="nx">name</span><span class="o">+</span><span class="s2">&quot;.&quot;</span><span class="p">);}</span></div><div class='line' id='LC27'><span class="k">return</span> <span class="kc">true</span><span class="p">;};</span><span class="nx">$D</span><span class="p">.</span><span class="nx">validateMillisecond</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">value</span><span class="p">){</span><span class="k">return</span> <span class="nx">$D</span><span class="p">.</span><span class="nx">_validate</span><span class="p">(</span><span class="nx">value</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">999</span><span class="p">,</span><span class="s2">&quot;millisecond&quot;</span><span class="p">);};</span><span class="nx">$D</span><span class="p">.</span><span class="nx">validateSecond</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">value</span><span class="p">){</span><span class="k">return</span> <span class="nx">$D</span><span class="p">.</span><span class="nx">_validate</span><span class="p">(</span><span class="nx">value</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">59</span><span class="p">,</span><span class="s2">&quot;second&quot;</span><span class="p">);};</span><span class="nx">$D</span><span class="p">.</span><span class="nx">validateMinute</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">value</span><span class="p">){</span><span class="k">return</span> <span class="nx">$D</span><span class="p">.</span><span class="nx">_validate</span><span class="p">(</span><span class="nx">value</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">59</span><span class="p">,</span><span class="s2">&quot;minute&quot;</span><span class="p">);};</span><span class="nx">$D</span><span class="p">.</span><span class="nx">validateHour</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">value</span><span class="p">){</span><span class="k">return</span> <span class="nx">$D</span><span class="p">.</span><span class="nx">_validate</span><span class="p">(</span><span class="nx">value</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">23</span><span class="p">,</span><span class="s2">&quot;hour&quot;</span><span class="p">);};</span><span class="nx">$D</span><span class="p">.</span><span class="nx">validateDay</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">value</span><span class="p">,</span><span class="nx">year</span><span class="p">,</span><span class="nx">month</span><span class="p">){</span><span class="k">return</span> <span class="nx">$D</span><span class="p">.</span><span class="nx">_validate</span><span class="p">(</span><span class="nx">value</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="nx">$D</span><span class="p">.</span><span class="nx">getDaysInMonth</span><span class="p">(</span><span class="nx">year</span><span class="p">,</span><span class="nx">month</span><span class="p">),</span><span class="s2">&quot;day&quot;</span><span class="p">);};</span><span class="nx">$D</span><span class="p">.</span><span class="nx">validateMonth</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">value</span><span class="p">){</span><span class="k">return</span> <span class="nx">$D</span><span class="p">.</span><span class="nx">_validate</span><span class="p">(</span><span class="nx">value</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">11</span><span class="p">,</span><span class="s2">&quot;month&quot;</span><span class="p">);};</span><span class="nx">$D</span><span class="p">.</span><span class="nx">validateYear</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">value</span><span class="p">){</span><span class="k">return</span> <span class="nx">$D</span><span class="p">.</span><span class="nx">_validate</span><span class="p">(</span><span class="nx">value</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">9999</span><span class="p">,</span><span class="s2">&quot;year&quot;</span><span class="p">);};</span><span class="nx">$P</span><span class="p">.</span><span class="nx">set</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">config</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">$D</span><span class="p">.</span><span class="nx">validateMillisecond</span><span class="p">(</span><span class="nx">config</span><span class="p">.</span><span class="nx">millisecond</span><span class="p">)){</span><span class="k">this</span><span class="p">.</span><span class="nx">addMilliseconds</span><span class="p">(</span><span class="nx">config</span><span class="p">.</span><span class="nx">millisecond</span><span class="o">-</span><span class="k">this</span><span class="p">.</span><span class="nx">getMilliseconds</span><span class="p">());}</span></div><div class='line' id='LC28'><span class="k">if</span><span class="p">(</span><span class="nx">$D</span><span class="p">.</span><span class="nx">validateSecond</span><span class="p">(</span><span class="nx">config</span><span class="p">.</span><span class="nx">second</span><span class="p">)){</span><span class="k">this</span><span class="p">.</span><span class="nx">addSeconds</span><span class="p">(</span><span class="nx">config</span><span class="p">.</span><span class="nx">second</span><span class="o">-</span><span class="k">this</span><span class="p">.</span><span class="nx">getSeconds</span><span class="p">());}</span></div><div class='line' id='LC29'><span class="k">if</span><span class="p">(</span><span class="nx">$D</span><span class="p">.</span><span class="nx">validateMinute</span><span class="p">(</span><span class="nx">config</span><span class="p">.</span><span class="nx">minute</span><span class="p">)){</span><span class="k">this</span><span class="p">.</span><span class="nx">addMinutes</span><span class="p">(</span><span class="nx">config</span><span class="p">.</span><span class="nx">minute</span><span class="o">-</span><span class="k">this</span><span class="p">.</span><span class="nx">getMinutes</span><span class="p">());}</span></div><div class='line' id='LC30'><span class="k">if</span><span class="p">(</span><span class="nx">$D</span><span class="p">.</span><span class="nx">validateHour</span><span class="p">(</span><span class="nx">config</span><span class="p">.</span><span class="nx">hour</span><span class="p">)){</span><span class="k">this</span><span class="p">.</span><span class="nx">addHours</span><span class="p">(</span><span class="nx">config</span><span class="p">.</span><span class="nx">hour</span><span class="o">-</span><span class="k">this</span><span class="p">.</span><span class="nx">getHours</span><span class="p">());}</span></div><div class='line' id='LC31'><span class="k">if</span><span class="p">(</span><span class="nx">$D</span><span class="p">.</span><span class="nx">validateMonth</span><span class="p">(</span><span class="nx">config</span><span class="p">.</span><span class="nx">month</span><span class="p">)){</span><span class="k">this</span><span class="p">.</span><span class="nx">addMonths</span><span class="p">(</span><span class="nx">config</span><span class="p">.</span><span class="nx">month</span><span class="o">-</span><span class="k">this</span><span class="p">.</span><span class="nx">getMonth</span><span class="p">());}</span></div><div class='line' id='LC32'><span class="k">if</span><span class="p">(</span><span class="nx">$D</span><span class="p">.</span><span class="nx">validateYear</span><span class="p">(</span><span class="nx">config</span><span class="p">.</span><span class="nx">year</span><span class="p">)){</span><span class="k">this</span><span class="p">.</span><span class="nx">addYears</span><span class="p">(</span><span class="nx">config</span><span class="p">.</span><span class="nx">year</span><span class="o">-</span><span class="k">this</span><span class="p">.</span><span class="nx">getFullYear</span><span class="p">());}</span></div><div class='line' id='LC33'><span class="k">if</span><span class="p">(</span><span class="nx">$D</span><span class="p">.</span><span class="nx">validateDay</span><span class="p">(</span><span class="nx">config</span><span class="p">.</span><span class="nx">day</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">getFullYear</span><span class="p">(),</span><span class="k">this</span><span class="p">.</span><span class="nx">getMonth</span><span class="p">())){</span><span class="k">this</span><span class="p">.</span><span class="nx">addDays</span><span class="p">(</span><span class="nx">config</span><span class="p">.</span><span class="nx">day</span><span class="o">-</span><span class="k">this</span><span class="p">.</span><span class="nx">getDate</span><span class="p">());}</span></div><div class='line' id='LC34'><span class="k">if</span><span class="p">(</span><span class="nx">config</span><span class="p">.</span><span class="nx">timezone</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">setTimezone</span><span class="p">(</span><span class="nx">config</span><span class="p">.</span><span class="nx">timezone</span><span class="p">);}</span></div><div class='line' id='LC35'><span class="k">if</span><span class="p">(</span><span class="nx">config</span><span class="p">.</span><span class="nx">timezoneOffset</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">setTimezoneOffset</span><span class="p">(</span><span class="nx">config</span><span class="p">.</span><span class="nx">timezoneOffset</span><span class="p">);}</span></div><div class='line' id='LC36'><span class="k">if</span><span class="p">(</span><span class="nx">config</span><span class="p">.</span><span class="nx">week</span><span class="o">&amp;&amp;</span><span class="nx">$D</span><span class="p">.</span><span class="nx">_validate</span><span class="p">(</span><span class="nx">config</span><span class="p">.</span><span class="nx">week</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">53</span><span class="p">,</span><span class="s2">&quot;week&quot;</span><span class="p">)){</span><span class="k">this</span><span class="p">.</span><span class="nx">setWeek</span><span class="p">(</span><span class="nx">config</span><span class="p">.</span><span class="nx">week</span><span class="p">);}</span></div><div class='line' id='LC37'><span class="k">return</span> <span class="k">this</span><span class="p">;};</span><span class="nx">$P</span><span class="p">.</span><span class="nx">moveToFirstDayOfMonth</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">set</span><span class="p">({</span><span class="nx">day</span><span class="o">:</span><span class="mi">1</span><span class="p">});};</span><span class="nx">$P</span><span class="p">.</span><span class="nx">moveToLastDayOfMonth</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">set</span><span class="p">({</span><span class="nx">day</span><span class="o">:</span><span class="nx">$D</span><span class="p">.</span><span class="nx">getDaysInMonth</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">getFullYear</span><span class="p">(),</span><span class="k">this</span><span class="p">.</span><span class="nx">getMonth</span><span class="p">())});};</span><span class="nx">$P</span><span class="p">.</span><span class="nx">moveToNthOccurrence</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">dayOfWeek</span><span class="p">,</span><span class="nx">occurrence</span><span class="p">){</span><span class="kd">var</span> <span class="nx">shift</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">occurrence</span><span class="o">&gt;</span><span class="mi">0</span><span class="p">){</span><span class="nx">shift</span><span class="o">=</span><span class="nx">occurrence</span><span class="o">-</span><span class="mi">1</span><span class="p">;}</span></div><div class='line' id='LC38'><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">occurrence</span><span class="o">===-</span><span class="mi">1</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">moveToLastDayOfMonth</span><span class="p">();</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">getDay</span><span class="p">()</span><span class="o">!==</span><span class="nx">dayOfWeek</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">moveToDayOfWeek</span><span class="p">(</span><span class="nx">dayOfWeek</span><span class="p">,</span><span class="o">-</span><span class="mi">1</span><span class="p">);}</span></div><div class='line' id='LC39'><span class="k">return</span> <span class="k">this</span><span class="p">;}</span></div><div class='line' id='LC40'><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">moveToFirstDayOfMonth</span><span class="p">().</span><span class="nx">addDays</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">).</span><span class="nx">moveToDayOfWeek</span><span class="p">(</span><span class="nx">dayOfWeek</span><span class="p">,</span><span class="o">+</span><span class="mi">1</span><span class="p">).</span><span class="nx">addWeeks</span><span class="p">(</span><span class="nx">shift</span><span class="p">);};</span><span class="nx">$P</span><span class="p">.</span><span class="nx">moveToDayOfWeek</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">dayOfWeek</span><span class="p">,</span><span class="nx">orient</span><span class="p">){</span><span class="kd">var</span> <span class="nx">diff</span><span class="o">=</span><span class="p">(</span><span class="nx">dayOfWeek</span><span class="o">-</span><span class="k">this</span><span class="p">.</span><span class="nx">getDay</span><span class="p">()</span><span class="o">+</span><span class="mi">7</span><span class="o">*</span><span class="p">(</span><span class="nx">orient</span><span class="o">||+</span><span class="mi">1</span><span class="p">))</span><span class="o">%</span><span class="mi">7</span><span class="p">;</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">addDays</span><span class="p">((</span><span class="nx">diff</span><span class="o">===</span><span class="mi">0</span><span class="p">)</span><span class="o">?</span><span class="nx">diff</span><span class="o">+=</span><span class="mi">7</span><span class="o">*</span><span class="p">(</span><span class="nx">orient</span><span class="o">||+</span><span class="mi">1</span><span class="p">)</span><span class="o">:</span><span class="nx">diff</span><span class="p">);};</span><span class="nx">$P</span><span class="p">.</span><span class="nx">moveToMonth</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">month</span><span class="p">,</span><span class="nx">orient</span><span class="p">){</span><span class="kd">var</span> <span class="nx">diff</span><span class="o">=</span><span class="p">(</span><span class="nx">month</span><span class="o">-</span><span class="k">this</span><span class="p">.</span><span class="nx">getMonth</span><span class="p">()</span><span class="o">+</span><span class="mi">12</span><span class="o">*</span><span class="p">(</span><span class="nx">orient</span><span class="o">||+</span><span class="mi">1</span><span class="p">))</span><span class="o">%</span><span class="mi">12</span><span class="p">;</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">addMonths</span><span class="p">((</span><span class="nx">diff</span><span class="o">===</span><span class="mi">0</span><span class="p">)</span><span class="o">?</span><span class="nx">diff</span><span class="o">+=</span><span class="mi">12</span><span class="o">*</span><span class="p">(</span><span class="nx">orient</span><span class="o">||+</span><span class="mi">1</span><span class="p">)</span><span class="o">:</span><span class="nx">diff</span><span class="p">);};</span><span class="nx">$P</span><span class="p">.</span><span class="nx">getOrdinalNumber</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nb">Math</span><span class="p">.</span><span class="nx">ceil</span><span class="p">((</span><span class="k">this</span><span class="p">.</span><span class="nx">clone</span><span class="p">().</span><span class="nx">clearTime</span><span class="p">()</span><span class="o">-</span><span class="k">new</span> <span class="nb">Date</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">getFullYear</span><span class="p">(),</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">))</span><span class="o">/</span><span class="mi">86400000</span><span class="p">)</span><span class="o">+</span><span class="mi">1</span><span class="p">;};</span><span class="nx">$P</span><span class="p">.</span><span class="nx">getTimezone</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">$D</span><span class="p">.</span><span class="nx">getTimezoneAbbreviation</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">getUTCOffset</span><span class="p">());};</span><span class="nx">$P</span><span class="p">.</span><span class="nx">setTimezoneOffset</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">offset</span><span class="p">){</span><span class="kd">var</span> <span class="nx">here</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">getTimezoneOffset</span><span class="p">(),</span><span class="nx">there</span><span class="o">=</span><span class="nb">Number</span><span class="p">(</span><span class="nx">offset</span><span class="p">)</span><span class="o">*-</span><span class="mi">6</span><span class="o">/</span><span class="mi">10</span><span class="p">;</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">addMinutes</span><span class="p">(</span><span class="nx">there</span><span class="o">-</span><span class="nx">here</span><span class="p">);};</span><span class="nx">$P</span><span class="p">.</span><span class="nx">setTimezone</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">offset</span><span class="p">){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">setTimezoneOffset</span><span class="p">(</span><span class="nx">$D</span><span class="p">.</span><span class="nx">getTimezoneOffset</span><span class="p">(</span><span class="nx">offset</span><span class="p">));};</span><span class="nx">$P</span><span class="p">.</span><span class="nx">hasDaylightSavingTime</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="p">(</span><span class="nb">Date</span><span class="p">.</span><span class="nx">today</span><span class="p">().</span><span class="nx">set</span><span class="p">({</span><span class="nx">month</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">day</span><span class="o">:</span><span class="mi">1</span><span class="p">}).</span><span class="nx">getTimezoneOffset</span><span class="p">()</span><span class="o">!==</span><span class="nb">Date</span><span class="p">.</span><span class="nx">today</span><span class="p">().</span><span class="nx">set</span><span class="p">({</span><span class="nx">month</span><span class="o">:</span><span class="mi">6</span><span class="p">,</span><span class="nx">day</span><span class="o">:</span><span class="mi">1</span><span class="p">}).</span><span class="nx">getTimezoneOffset</span><span class="p">());};</span><span class="nx">$P</span><span class="p">.</span><span class="nx">isDaylightSavingTime</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">hasDaylightSavingTime</span><span class="p">()</span><span class="o">&amp;&amp;</span><span class="k">new</span> <span class="nb">Date</span><span class="p">().</span><span class="nx">getTimezoneOffset</span><span class="p">()</span><span class="o">===</span><span class="nb">Date</span><span class="p">.</span><span class="nx">today</span><span class="p">().</span><span class="nx">set</span><span class="p">({</span><span class="nx">month</span><span class="o">:</span><span class="mi">6</span><span class="p">,</span><span class="nx">day</span><span class="o">:</span><span class="mi">1</span><span class="p">}).</span><span class="nx">getTimezoneOffset</span><span class="p">());};</span><span class="nx">$P</span><span class="p">.</span><span class="nx">getUTCOffset</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">n</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">getTimezoneOffset</span><span class="p">()</span><span class="o">*-</span><span class="mi">10</span><span class="o">/</span><span class="mi">6</span><span class="p">,</span><span class="nx">r</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">n</span><span class="o">&lt;</span><span class="mi">0</span><span class="p">){</span><span class="nx">r</span><span class="o">=</span><span class="p">(</span><span class="nx">n</span><span class="o">-</span><span class="mi">10000</span><span class="p">).</span><span class="nx">toString</span><span class="p">();</span><span class="k">return</span> <span class="nx">r</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span><span class="o">+</span><span class="nx">r</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">2</span><span class="p">);}</span><span class="k">else</span><span class="p">{</span><span class="nx">r</span><span class="o">=</span><span class="p">(</span><span class="nx">n</span><span class="o">+</span><span class="mi">10000</span><span class="p">).</span><span class="nx">toString</span><span class="p">();</span><span class="k">return</span><span class="s2">&quot;+&quot;</span><span class="o">+</span><span class="nx">r</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">1</span><span class="p">);}};</span><span class="nx">$P</span><span class="p">.</span><span class="nx">getElapsed</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">date</span><span class="p">){</span><span class="k">return</span><span class="p">(</span><span class="nx">date</span><span class="o">||</span><span class="k">new</span> <span class="nb">Date</span><span class="p">())</span><span class="o">-</span><span class="k">this</span><span class="p">;};</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">$P</span><span class="p">.</span><span class="nx">toISOString</span><span class="p">){</span><span class="nx">$P</span><span class="p">.</span><span class="nx">toISOString</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">function</span> <span class="nx">f</span><span class="p">(</span><span class="nx">n</span><span class="p">){</span><span class="k">return</span> <span class="nx">n</span><span class="o">&lt;</span><span class="mi">10</span><span class="o">?</span><span class="s1">&#39;0&#39;</span><span class="o">+</span><span class="nx">n</span><span class="o">:</span><span class="nx">n</span><span class="p">;}</span></div><div class='line' id='LC41'><span class="k">return</span><span class="s1">&#39;&quot;&#39;</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">getUTCFullYear</span><span class="p">()</span><span class="o">+</span><span class="s1">&#39;-&#39;</span><span class="o">+</span></div><div class='line' id='LC42'><span class="nx">f</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">getUTCMonth</span><span class="p">()</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span><span class="o">+</span><span class="s1">&#39;-&#39;</span><span class="o">+</span></div><div class='line' id='LC43'><span class="nx">f</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">getUTCDate</span><span class="p">())</span><span class="o">+</span><span class="s1">&#39;T&#39;</span><span class="o">+</span></div><div class='line' id='LC44'><span class="nx">f</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">getUTCHours</span><span class="p">())</span><span class="o">+</span><span class="s1">&#39;:&#39;</span><span class="o">+</span></div><div class='line' id='LC45'><span class="nx">f</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">getUTCMinutes</span><span class="p">())</span><span class="o">+</span><span class="s1">&#39;:&#39;</span><span class="o">+</span></div><div class='line' id='LC46'><span class="nx">f</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">getUTCSeconds</span><span class="p">())</span><span class="o">+</span><span class="s1">&#39;Z&quot;&#39;</span><span class="p">;};}</span></div><div class='line' id='LC47'><span class="nx">$P</span><span class="p">.</span><span class="nx">_toString</span><span class="o">=</span><span class="nx">$P</span><span class="p">.</span><span class="nx">toString</span><span class="p">;</span><span class="nx">$P</span><span class="p">.</span><span class="nx">toString</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">format</span><span class="p">){</span><span class="kd">var</span> <span class="nx">x</span><span class="o">=</span><span class="k">this</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">format</span><span class="o">&amp;&amp;</span><span class="nx">format</span><span class="p">.</span><span class="nx">length</span><span class="o">==</span><span class="mi">1</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">$C</span><span class="p">.</span><span class="nx">formatPatterns</span><span class="p">;</span><span class="nx">x</span><span class="p">.</span><span class="nx">t</span><span class="o">=</span><span class="nx">x</span><span class="p">.</span><span class="nx">toString</span><span class="p">;</span><span class="k">switch</span><span class="p">(</span><span class="nx">format</span><span class="p">){</span><span class="k">case</span><span class="s2">&quot;d&quot;</span><span class="o">:</span><span class="k">return</span> <span class="nx">x</span><span class="p">.</span><span class="nx">t</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">shortDate</span><span class="p">);</span><span class="k">case</span><span class="s2">&quot;D&quot;</span><span class="o">:</span><span class="k">return</span> <span class="nx">x</span><span class="p">.</span><span class="nx">t</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">longDate</span><span class="p">);</span><span class="k">case</span><span class="s2">&quot;F&quot;</span><span class="o">:</span><span class="k">return</span> <span class="nx">x</span><span class="p">.</span><span class="nx">t</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">fullDateTime</span><span class="p">);</span><span class="k">case</span><span class="s2">&quot;m&quot;</span><span class="o">:</span><span class="k">return</span> <span class="nx">x</span><span class="p">.</span><span class="nx">t</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">monthDay</span><span class="p">);</span><span class="k">case</span><span class="s2">&quot;r&quot;</span><span class="o">:</span><span class="k">return</span> <span class="nx">x</span><span class="p">.</span><span class="nx">t</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">rfc1123</span><span class="p">);</span><span class="k">case</span><span class="s2">&quot;s&quot;</span><span class="o">:</span><span class="k">return</span> <span class="nx">x</span><span class="p">.</span><span class="nx">t</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">sortableDateTime</span><span class="p">);</span><span class="k">case</span><span class="s2">&quot;t&quot;</span><span class="o">:</span><span class="k">return</span> <span class="nx">x</span><span class="p">.</span><span class="nx">t</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">shortTime</span><span class="p">);</span><span class="k">case</span><span class="s2">&quot;T&quot;</span><span class="o">:</span><span class="k">return</span> <span class="nx">x</span><span class="p">.</span><span class="nx">t</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">longTime</span><span class="p">);</span><span class="k">case</span><span class="s2">&quot;u&quot;</span><span class="o">:</span><span class="k">return</span> <span class="nx">x</span><span class="p">.</span><span class="nx">t</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">universalSortableDateTime</span><span class="p">);</span><span class="k">case</span><span class="s2">&quot;y&quot;</span><span class="o">:</span><span class="k">return</span> <span class="nx">x</span><span class="p">.</span><span class="nx">t</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">yearMonth</span><span class="p">);}}</span></div><div class='line' id='LC48'><span class="kd">var</span> <span class="nx">ord</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">n</span><span class="p">){</span><span class="k">switch</span><span class="p">(</span><span class="nx">n</span><span class="o">*</span><span class="mi">1</span><span class="p">){</span><span class="k">case</span> <span class="mi">1</span><span class="o">:</span><span class="k">case</span> <span class="mi">21</span><span class="o">:</span><span class="k">case</span> <span class="mi">31</span><span class="o">:</span><span class="k">return</span><span class="s2">&quot;st&quot;</span><span class="p">;</span><span class="k">case</span> <span class="mi">2</span><span class="o">:</span><span class="k">case</span> <span class="mi">22</span><span class="o">:</span><span class="k">return</span><span class="s2">&quot;nd&quot;</span><span class="p">;</span><span class="k">case</span> <span class="mi">3</span><span class="o">:</span><span class="k">case</span> <span class="mi">23</span><span class="o">:</span><span class="k">return</span><span class="s2">&quot;rd&quot;</span><span class="p">;</span><span class="k">default</span><span class="o">:</span><span class="k">return</span><span class="s2">&quot;th&quot;</span><span class="p">;}};</span><span class="k">return</span> <span class="nx">format</span><span class="o">?</span><span class="nx">format</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/(\\)?(dd?d?d?|MM?M?M?|yy?y?y?|hh?|HH?|mm?|ss?|tt?|S)/g</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">m</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">m</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span><span class="o">===</span><span class="s2">&quot;\\&quot;</span><span class="p">){</span><span class="k">return</span> <span class="nx">m</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="s2">&quot;\\&quot;</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">);}</span></div><div class='line' id='LC49'><span class="nx">x</span><span class="p">.</span><span class="nx">h</span><span class="o">=</span><span class="nx">x</span><span class="p">.</span><span class="nx">getHours</span><span class="p">;</span><span class="k">switch</span><span class="p">(</span><span class="nx">m</span><span class="p">){</span><span class="k">case</span><span class="s2">&quot;hh&quot;</span><span class="o">:</span><span class="k">return</span> <span class="nx">p</span><span class="p">(</span><span class="nx">x</span><span class="p">.</span><span class="nx">h</span><span class="p">()</span><span class="o">&lt;</span><span class="mi">13</span><span class="o">?</span><span class="p">(</span><span class="nx">x</span><span class="p">.</span><span class="nx">h</span><span class="p">()</span><span class="o">===</span><span class="mi">0</span><span class="o">?</span><span class="mi">12</span><span class="o">:</span><span class="nx">x</span><span class="p">.</span><span class="nx">h</span><span class="p">())</span><span class="o">:</span><span class="p">(</span><span class="nx">x</span><span class="p">.</span><span class="nx">h</span><span class="p">()</span><span class="o">-</span><span class="mi">12</span><span class="p">));</span><span class="k">case</span><span class="s2">&quot;h&quot;</span><span class="o">:</span><span class="k">return</span> <span class="nx">x</span><span class="p">.</span><span class="nx">h</span><span class="p">()</span><span class="o">&lt;</span><span class="mi">13</span><span class="o">?</span><span class="p">(</span><span class="nx">x</span><span class="p">.</span><span class="nx">h</span><span class="p">()</span><span class="o">===</span><span class="mi">0</span><span class="o">?</span><span class="mi">12</span><span class="o">:</span><span class="nx">x</span><span class="p">.</span><span class="nx">h</span><span class="p">())</span><span class="o">:</span><span class="p">(</span><span class="nx">x</span><span class="p">.</span><span class="nx">h</span><span class="p">()</span><span class="o">-</span><span class="mi">12</span><span class="p">);</span><span class="k">case</span><span class="s2">&quot;HH&quot;</span><span class="o">:</span><span class="k">return</span> <span class="nx">p</span><span class="p">(</span><span class="nx">x</span><span class="p">.</span><span class="nx">h</span><span class="p">());</span><span class="k">case</span><span class="s2">&quot;H&quot;</span><span class="o">:</span><span class="k">return</span> <span class="nx">x</span><span class="p">.</span><span class="nx">h</span><span class="p">();</span><span class="k">case</span><span class="s2">&quot;mm&quot;</span><span class="o">:</span><span class="k">return</span> <span class="nx">p</span><span class="p">(</span><span class="nx">x</span><span class="p">.</span><span class="nx">getMinutes</span><span class="p">());</span><span class="k">case</span><span class="s2">&quot;m&quot;</span><span class="o">:</span><span class="k">return</span> <span class="nx">x</span><span class="p">.</span><span class="nx">getMinutes</span><span class="p">();</span><span class="k">case</span><span class="s2">&quot;ss&quot;</span><span class="o">:</span><span class="k">return</span> <span class="nx">p</span><span class="p">(</span><span class="nx">x</span><span class="p">.</span><span class="nx">getSeconds</span><span class="p">());</span><span class="k">case</span><span class="s2">&quot;s&quot;</span><span class="o">:</span><span class="k">return</span> <span class="nx">x</span><span class="p">.</span><span class="nx">getSeconds</span><span class="p">();</span><span class="k">case</span><span class="s2">&quot;yyyy&quot;</span><span class="o">:</span><span class="k">return</span> <span class="nx">p</span><span class="p">(</span><span class="nx">x</span><span class="p">.</span><span class="nx">getFullYear</span><span class="p">(),</span><span class="mi">4</span><span class="p">);</span><span class="k">case</span><span class="s2">&quot;yy&quot;</span><span class="o">:</span><span class="k">return</span> <span class="nx">p</span><span class="p">(</span><span class="nx">x</span><span class="p">.</span><span class="nx">getFullYear</span><span class="p">());</span><span class="k">case</span><span class="s2">&quot;dddd&quot;</span><span class="o">:</span><span class="k">return</span> <span class="nx">$C</span><span class="p">.</span><span class="nx">dayNames</span><span class="p">[</span><span class="nx">x</span><span class="p">.</span><span class="nx">getDay</span><span class="p">()];</span><span class="k">case</span><span class="s2">&quot;ddd&quot;</span><span class="o">:</span><span class="k">return</span> <span class="nx">$C</span><span class="p">.</span><span class="nx">abbreviatedDayNames</span><span class="p">[</span><span class="nx">x</span><span class="p">.</span><span class="nx">getDay</span><span class="p">()];</span><span class="k">case</span><span class="s2">&quot;dd&quot;</span><span class="o">:</span><span class="k">return</span> <span class="nx">p</span><span class="p">(</span><span class="nx">x</span><span class="p">.</span><span class="nx">getDate</span><span class="p">());</span><span class="k">case</span><span class="s2">&quot;d&quot;</span><span class="o">:</span><span class="k">return</span> <span class="nx">x</span><span class="p">.</span><span class="nx">getDate</span><span class="p">();</span><span class="k">case</span><span class="s2">&quot;MMMM&quot;</span><span class="o">:</span><span class="k">return</span> <span class="nx">$C</span><span class="p">.</span><span class="nx">monthNames</span><span class="p">[</span><span class="nx">x</span><span class="p">.</span><span class="nx">getMonth</span><span class="p">()];</span><span class="k">case</span><span class="s2">&quot;MMM&quot;</span><span class="o">:</span><span class="k">return</span> <span class="nx">$C</span><span class="p">.</span><span class="nx">abbreviatedMonthNames</span><span class="p">[</span><span class="nx">x</span><span class="p">.</span><span class="nx">getMonth</span><span class="p">()];</span><span class="k">case</span><span class="s2">&quot;MM&quot;</span><span class="o">:</span><span class="k">return</span> <span class="nx">p</span><span class="p">((</span><span class="nx">x</span><span class="p">.</span><span class="nx">getMonth</span><span class="p">()</span><span class="o">+</span><span class="mi">1</span><span class="p">));</span><span class="k">case</span><span class="s2">&quot;M&quot;</span><span class="o">:</span><span class="k">return</span> <span class="nx">x</span><span class="p">.</span><span class="nx">getMonth</span><span class="p">()</span><span class="o">+</span><span class="mi">1</span><span class="p">;</span><span class="k">case</span><span class="s2">&quot;t&quot;</span><span class="o">:</span><span class="k">return</span> <span class="nx">x</span><span class="p">.</span><span class="nx">h</span><span class="p">()</span><span class="o">&lt;</span><span class="mi">12</span><span class="o">?</span><span class="nx">$C</span><span class="p">.</span><span class="nx">amDesignator</span><span class="p">.</span><span class="nx">substring</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">)</span><span class="o">:</span><span class="nx">$C</span><span class="p">.</span><span class="nx">pmDesignator</span><span class="p">.</span><span class="nx">substring</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">);</span><span class="k">case</span><span class="s2">&quot;tt&quot;</span><span class="o">:</span><span class="k">return</span> <span class="nx">x</span><span class="p">.</span><span class="nx">h</span><span class="p">()</span><span class="o">&lt;</span><span class="mi">12</span><span class="o">?</span><span class="nx">$C</span><span class="p">.</span><span class="nx">amDesignator</span><span class="o">:</span><span class="nx">$C</span><span class="p">.</span><span class="nx">pmDesignator</span><span class="p">;</span><span class="k">case</span><span class="s2">&quot;S&quot;</span><span class="o">:</span><span class="k">return</span> <span class="nx">ord</span><span class="p">(</span><span class="nx">x</span><span class="p">.</span><span class="nx">getDate</span><span class="p">());</span><span class="k">default</span><span class="o">:</span><span class="k">return</span> <span class="nx">m</span><span class="p">;}})</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">_toString</span><span class="p">();};}());</span></div><div class='line' id='LC50'><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">$D</span><span class="o">=</span><span class="nb">Date</span><span class="p">,</span><span class="nx">$P</span><span class="o">=</span><span class="nx">$D</span><span class="p">.</span><span class="nx">prototype</span><span class="p">,</span><span class="nx">$C</span><span class="o">=</span><span class="nx">$D</span><span class="p">.</span><span class="nx">CultureInfo</span><span class="p">,</span><span class="nx">$N</span><span class="o">=</span><span class="nb">Number</span><span class="p">.</span><span class="nx">prototype</span><span class="p">;</span><span class="nx">$P</span><span class="p">.</span><span class="nx">_orient</span><span class="o">=+</span><span class="mi">1</span><span class="p">;</span><span class="nx">$P</span><span class="p">.</span><span class="nx">_nth</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="nx">$P</span><span class="p">.</span><span class="nx">_is</span><span class="o">=</span><span class="kc">false</span><span class="p">;</span><span class="nx">$P</span><span class="p">.</span><span class="nx">_same</span><span class="o">=</span><span class="kc">false</span><span class="p">;</span><span class="nx">$P</span><span class="p">.</span><span class="nx">_isSecond</span><span class="o">=</span><span class="kc">false</span><span class="p">;</span><span class="nx">$N</span><span class="p">.</span><span class="nx">_dateElement</span><span class="o">=</span><span class="s2">&quot;day&quot;</span><span class="p">;</span><span class="nx">$P</span><span class="p">.</span><span class="nx">next</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">_orient</span><span class="o">=+</span><span class="mi">1</span><span class="p">;</span><span class="k">return</span> <span class="k">this</span><span class="p">;};</span><span class="nx">$D</span><span class="p">.</span><span class="nx">next</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">$D</span><span class="p">.</span><span class="nx">today</span><span class="p">().</span><span class="nx">next</span><span class="p">();};</span><span class="nx">$P</span><span class="p">.</span><span class="nx">last</span><span class="o">=</span><span class="nx">$P</span><span class="p">.</span><span class="nx">prev</span><span class="o">=</span><span class="nx">$P</span><span class="p">.</span><span class="nx">previous</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">_orient</span><span class="o">=-</span><span class="mi">1</span><span class="p">;</span><span class="k">return</span> <span class="k">this</span><span class="p">;};</span><span class="nx">$D</span><span class="p">.</span><span class="nx">last</span><span class="o">=</span><span class="nx">$D</span><span class="p">.</span><span class="nx">prev</span><span class="o">=</span><span class="nx">$D</span><span class="p">.</span><span class="nx">previous</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">$D</span><span class="p">.</span><span class="nx">today</span><span class="p">().</span><span class="nx">last</span><span class="p">();};</span><span class="nx">$P</span><span class="p">.</span><span class="nx">is</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">_is</span><span class="o">=</span><span class="kc">true</span><span class="p">;</span><span class="k">return</span> <span class="k">this</span><span class="p">;};</span><span class="nx">$P</span><span class="p">.</span><span class="nx">same</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">_same</span><span class="o">=</span><span class="kc">true</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">_isSecond</span><span class="o">=</span><span class="kc">false</span><span class="p">;</span><span class="k">return</span> <span class="k">this</span><span class="p">;};</span><span class="nx">$P</span><span class="p">.</span><span class="nx">today</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">same</span><span class="p">().</span><span class="nx">day</span><span class="p">();};</span><span class="nx">$P</span><span class="p">.</span><span class="nx">weekday</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_is</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">_is</span><span class="o">=</span><span class="kc">false</span><span class="p">;</span><span class="k">return</span><span class="p">(</span><span class="o">!</span><span class="k">this</span><span class="p">.</span><span class="nx">is</span><span class="p">().</span><span class="nx">sat</span><span class="p">()</span><span class="o">&amp;&amp;!</span><span class="k">this</span><span class="p">.</span><span class="nx">is</span><span class="p">().</span><span class="nb">sun</span><span class="p">());}</span></div><div class='line' id='LC51'><span class="k">return</span> <span class="kc">false</span><span class="p">;};</span><span class="nx">$P</span><span class="p">.</span><span class="nx">at</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">time</span><span class="p">){</span><span class="k">return</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">time</span><span class="o">===</span><span class="s2">&quot;string&quot;</span><span class="p">)</span><span class="o">?</span><span class="nx">$D</span><span class="p">.</span><span class="nx">parse</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">toString</span><span class="p">(</span><span class="s2">&quot;d&quot;</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot; &quot;</span><span class="o">+</span><span class="nx">time</span><span class="p">)</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">set</span><span class="p">(</span><span class="nx">time</span><span class="p">);};</span><span class="nx">$N</span><span class="p">.</span><span class="nx">fromNow</span><span class="o">=</span><span class="nx">$N</span><span class="p">.</span><span class="nx">after</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">date</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="p">{};</span><span class="nx">c</span><span class="p">[</span><span class="k">this</span><span class="p">.</span><span class="nx">_dateElement</span><span class="p">]</span><span class="o">=</span><span class="k">this</span><span class="p">;</span><span class="k">return</span><span class="p">((</span><span class="o">!</span><span class="nx">date</span><span class="p">)</span><span class="o">?</span><span class="k">new</span> <span class="nb">Date</span><span class="p">()</span><span class="o">:</span><span class="nx">date</span><span class="p">.</span><span class="nx">clone</span><span class="p">()).</span><span class="nx">add</span><span class="p">(</span><span class="nx">c</span><span class="p">);};</span><span class="nx">$N</span><span class="p">.</span><span class="nx">ago</span><span class="o">=</span><span class="nx">$N</span><span class="p">.</span><span class="nx">before</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">date</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="p">{};</span><span class="nx">c</span><span class="p">[</span><span class="k">this</span><span class="p">.</span><span class="nx">_dateElement</span><span class="p">]</span><span class="o">=</span><span class="k">this</span><span class="o">*-</span><span class="mi">1</span><span class="p">;</span><span class="k">return</span><span class="p">((</span><span class="o">!</span><span class="nx">date</span><span class="p">)</span><span class="o">?</span><span class="k">new</span> <span class="nb">Date</span><span class="p">()</span><span class="o">:</span><span class="nx">date</span><span class="p">.</span><span class="nx">clone</span><span class="p">()).</span><span class="nx">add</span><span class="p">(</span><span class="nx">c</span><span class="p">);};</span><span class="kd">var</span> <span class="nx">dx</span><span class="o">=</span><span class="p">(</span><span class="s2">&quot;sunday monday tuesday wednesday thursday friday saturday&quot;</span><span class="p">).</span><span class="nx">split</span><span class="p">(</span><span class="sr">/\s/</span><span class="p">),</span><span class="nx">mx</span><span class="o">=</span><span class="p">(</span><span class="s2">&quot;january february march april may june july august september october november december&quot;</span><span class="p">).</span><span class="nx">split</span><span class="p">(</span><span class="sr">/\s/</span><span class="p">),</span><span class="nx">px</span><span class="o">=</span><span class="p">(</span><span class="s2">&quot;Millisecond Second Minute Hour Day Week Month Year&quot;</span><span class="p">).</span><span class="nx">split</span><span class="p">(</span><span class="sr">/\s/</span><span class="p">),</span><span class="nx">pxf</span><span class="o">=</span><span class="p">(</span><span class="s2">&quot;Milliseconds Seconds Minutes Hours Date Week Month FullYear&quot;</span><span class="p">).</span><span class="nx">split</span><span class="p">(</span><span class="sr">/\s/</span><span class="p">),</span><span class="nx">nth</span><span class="o">=</span><span class="p">(</span><span class="s2">&quot;final first second third fourth fifth&quot;</span><span class="p">).</span><span class="nx">split</span><span class="p">(</span><span class="sr">/\s/</span><span class="p">),</span><span class="nx">de</span><span class="p">;</span><span class="nx">$P</span><span class="p">.</span><span class="nx">toObject</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">o</span><span class="o">=</span><span class="p">{};</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">i</span><span class="o">&lt;</span><span class="nx">px</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">i</span><span class="o">++</span><span class="p">){</span><span class="nx">o</span><span class="p">[</span><span class="nx">px</span><span class="p">[</span><span class="nx">i</span><span class="p">].</span><span class="nx">toLowerCase</span><span class="p">()]</span><span class="o">=</span><span class="k">this</span><span class="p">[</span><span class="s2">&quot;get&quot;</span><span class="o">+</span><span class="nx">pxf</span><span class="p">[</span><span class="nx">i</span><span class="p">]]();}</span></div><div class='line' id='LC52'><span class="k">return</span> <span class="nx">o</span><span class="p">;};</span><span class="nx">$D</span><span class="p">.</span><span class="nx">fromObject</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">config</span><span class="p">){</span><span class="nx">config</span><span class="p">.</span><span class="nx">week</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="k">return</span> <span class="nb">Date</span><span class="p">.</span><span class="nx">today</span><span class="p">().</span><span class="nx">set</span><span class="p">(</span><span class="nx">config</span><span class="p">);};</span><span class="kd">var</span> <span class="nx">df</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">n</span><span class="p">){</span><span class="k">return</span> <span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_is</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">_is</span><span class="o">=</span><span class="kc">false</span><span class="p">;</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">getDay</span><span class="p">()</span><span class="o">==</span><span class="nx">n</span><span class="p">;}</span></div><div class='line' id='LC53'><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_nth</span><span class="o">!==</span><span class="kc">null</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_isSecond</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">addSeconds</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_orient</span><span class="o">*-</span><span class="mi">1</span><span class="p">);}</span></div><div class='line' id='LC54'><span class="k">this</span><span class="p">.</span><span class="nx">_isSecond</span><span class="o">=</span><span class="kc">false</span><span class="p">;</span><span class="kd">var</span> <span class="nx">ntemp</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_nth</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">_nth</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="kd">var</span> <span class="nx">temp</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">clone</span><span class="p">().</span><span class="nx">moveToLastDayOfMonth</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">moveToNthOccurrence</span><span class="p">(</span><span class="nx">n</span><span class="p">,</span><span class="nx">ntemp</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="o">&gt;</span><span class="nx">temp</span><span class="p">){</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">RangeError</span><span class="p">(</span><span class="nx">$D</span><span class="p">.</span><span class="nx">getDayName</span><span class="p">(</span><span class="nx">n</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot; does not occur &quot;</span><span class="o">+</span><span class="nx">ntemp</span><span class="o">+</span><span class="s2">&quot; times in the month of &quot;</span><span class="o">+</span><span class="nx">$D</span><span class="p">.</span><span class="nx">getMonthName</span><span class="p">(</span><span class="nx">temp</span><span class="p">.</span><span class="nx">getMonth</span><span class="p">())</span><span class="o">+</span><span class="s2">&quot; &quot;</span><span class="o">+</span><span class="nx">temp</span><span class="p">.</span><span class="nx">getFullYear</span><span class="p">()</span><span class="o">+</span><span class="s2">&quot;.&quot;</span><span class="p">);}</span></div><div class='line' id='LC55'><span class="k">return</span> <span class="k">this</span><span class="p">;}</span></div><div class='line' id='LC56'><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">moveToDayOfWeek</span><span class="p">(</span><span class="nx">n</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_orient</span><span class="p">);};};</span><span class="kd">var</span> <span class="nx">sdf</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">n</span><span class="p">){</span><span class="k">return</span> <span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">t</span><span class="o">=</span><span class="nx">$D</span><span class="p">.</span><span class="nx">today</span><span class="p">(),</span><span class="nx">shift</span><span class="o">=</span><span class="nx">n</span><span class="o">-</span><span class="nx">t</span><span class="p">.</span><span class="nx">getDay</span><span class="p">();</span><span class="k">if</span><span class="p">(</span><span class="nx">n</span><span class="o">===</span><span class="mi">0</span><span class="o">&amp;&amp;</span><span class="nx">$C</span><span class="p">.</span><span class="nx">firstDayOfWeek</span><span class="o">===</span><span class="mi">1</span><span class="o">&amp;&amp;</span><span class="nx">t</span><span class="p">.</span><span class="nx">getDay</span><span class="p">()</span><span class="o">!==</span><span class="mi">0</span><span class="p">){</span><span class="nx">shift</span><span class="o">=</span><span class="nx">shift</span><span class="o">+</span><span class="mi">7</span><span class="p">;}</span></div><div class='line' id='LC57'><span class="k">return</span> <span class="nx">t</span><span class="p">.</span><span class="nx">addDays</span><span class="p">(</span><span class="nx">shift</span><span class="p">);};};</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">i</span><span class="o">&lt;</span><span class="nx">dx</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">i</span><span class="o">++</span><span class="p">){</span><span class="nx">$D</span><span class="p">[</span><span class="nx">dx</span><span class="p">[</span><span class="nx">i</span><span class="p">].</span><span class="nx">toUpperCase</span><span class="p">()]</span><span class="o">=</span><span class="nx">$D</span><span class="p">[</span><span class="nx">dx</span><span class="p">[</span><span class="nx">i</span><span class="p">].</span><span class="nx">toUpperCase</span><span class="p">().</span><span class="nx">substring</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">3</span><span class="p">)]</span><span class="o">=</span><span class="nx">i</span><span class="p">;</span><span class="nx">$D</span><span class="p">[</span><span class="nx">dx</span><span class="p">[</span><span class="nx">i</span><span class="p">]]</span><span class="o">=</span><span class="nx">$D</span><span class="p">[</span><span class="nx">dx</span><span class="p">[</span><span class="nx">i</span><span class="p">].</span><span class="nx">substring</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">3</span><span class="p">)]</span><span class="o">=</span><span class="nx">sdf</span><span class="p">(</span><span class="nx">i</span><span class="p">);</span><span class="nx">$P</span><span class="p">[</span><span class="nx">dx</span><span class="p">[</span><span class="nx">i</span><span class="p">]]</span><span class="o">=</span><span class="nx">$P</span><span class="p">[</span><span class="nx">dx</span><span class="p">[</span><span class="nx">i</span><span class="p">].</span><span class="nx">substring</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">3</span><span class="p">)]</span><span class="o">=</span><span class="nx">df</span><span class="p">(</span><span class="nx">i</span><span class="p">);}</span></div><div class='line' id='LC58'><span class="kd">var</span> <span class="nx">mf</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">n</span><span class="p">){</span><span class="k">return</span> <span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_is</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">_is</span><span class="o">=</span><span class="kc">false</span><span class="p">;</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">getMonth</span><span class="p">()</span><span class="o">===</span><span class="nx">n</span><span class="p">;}</span></div><div class='line' id='LC59'><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">moveToMonth</span><span class="p">(</span><span class="nx">n</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_orient</span><span class="p">);};};</span><span class="kd">var</span> <span class="nx">smf</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">n</span><span class="p">){</span><span class="k">return</span> <span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">$D</span><span class="p">.</span><span class="nx">today</span><span class="p">().</span><span class="nx">set</span><span class="p">({</span><span class="nx">month</span><span class="o">:</span><span class="nx">n</span><span class="p">,</span><span class="nx">day</span><span class="o">:</span><span class="mi">1</span><span class="p">});};};</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">j</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">j</span><span class="o">&lt;</span><span class="nx">mx</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">j</span><span class="o">++</span><span class="p">){</span><span class="nx">$D</span><span class="p">[</span><span class="nx">mx</span><span class="p">[</span><span class="nx">j</span><span class="p">].</span><span class="nx">toUpperCase</span><span class="p">()]</span><span class="o">=</span><span class="nx">$D</span><span class="p">[</span><span class="nx">mx</span><span class="p">[</span><span class="nx">j</span><span class="p">].</span><span class="nx">toUpperCase</span><span class="p">().</span><span class="nx">substring</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">3</span><span class="p">)]</span><span class="o">=</span><span class="nx">j</span><span class="p">;</span><span class="nx">$D</span><span class="p">[</span><span class="nx">mx</span><span class="p">[</span><span class="nx">j</span><span class="p">]]</span><span class="o">=</span><span class="nx">$D</span><span class="p">[</span><span class="nx">mx</span><span class="p">[</span><span class="nx">j</span><span class="p">].</span><span class="nx">substring</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">3</span><span class="p">)]</span><span class="o">=</span><span class="nx">smf</span><span class="p">(</span><span class="nx">j</span><span class="p">);</span><span class="nx">$P</span><span class="p">[</span><span class="nx">mx</span><span class="p">[</span><span class="nx">j</span><span class="p">]]</span><span class="o">=</span><span class="nx">$P</span><span class="p">[</span><span class="nx">mx</span><span class="p">[</span><span class="nx">j</span><span class="p">].</span><span class="nx">substring</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">3</span><span class="p">)]</span><span class="o">=</span><span class="nx">mf</span><span class="p">(</span><span class="nx">j</span><span class="p">);}</span></div><div class='line' id='LC60'><span class="kd">var</span> <span class="nx">ef</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">j</span><span class="p">){</span><span class="k">return</span> <span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_isSecond</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">_isSecond</span><span class="o">=</span><span class="kc">false</span><span class="p">;</span><span class="k">return</span> <span class="k">this</span><span class="p">;}</span></div><div class='line' id='LC61'><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_same</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">_same</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_is</span><span class="o">=</span><span class="kc">false</span><span class="p">;</span><span class="kd">var</span> <span class="nx">o1</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">toObject</span><span class="p">(),</span><span class="nx">o2</span><span class="o">=</span><span class="p">(</span><span class="nx">arguments</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">||</span><span class="k">new</span> <span class="nb">Date</span><span class="p">()).</span><span class="nx">toObject</span><span class="p">(),</span><span class="nx">v</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">,</span><span class="nx">k</span><span class="o">=</span><span class="nx">j</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">();</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">m</span><span class="o">=</span><span class="p">(</span><span class="nx">px</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">);</span><span class="nx">m</span><span class="o">&gt;-</span><span class="mi">1</span><span class="p">;</span><span class="nx">m</span><span class="o">--</span><span class="p">){</span><span class="nx">v</span><span class="o">=</span><span class="nx">px</span><span class="p">[</span><span class="nx">m</span><span class="p">].</span><span class="nx">toLowerCase</span><span class="p">();</span><span class="k">if</span><span class="p">(</span><span class="nx">o1</span><span class="p">[</span><span class="nx">v</span><span class="p">]</span><span class="o">!=</span><span class="nx">o2</span><span class="p">[</span><span class="nx">v</span><span class="p">]){</span><span class="k">return</span> <span class="kc">false</span><span class="p">;}</span></div><div class='line' id='LC62'><span class="k">if</span><span class="p">(</span><span class="nx">k</span><span class="o">==</span><span class="nx">v</span><span class="p">){</span><span class="k">break</span><span class="p">;}}</span></div><div class='line' id='LC63'><span class="k">return</span> <span class="kc">true</span><span class="p">;}</span></div><div class='line' id='LC64'><span class="k">if</span><span class="p">(</span><span class="nx">j</span><span class="p">.</span><span class="nx">substring</span><span class="p">(</span><span class="nx">j</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span><span class="o">!=</span><span class="s2">&quot;s&quot;</span><span class="p">){</span><span class="nx">j</span><span class="o">+=</span><span class="s2">&quot;s&quot;</span><span class="p">;}</span></div><div class='line' id='LC65'><span class="k">return</span> <span class="k">this</span><span class="p">[</span><span class="s2">&quot;add&quot;</span><span class="o">+</span><span class="nx">j</span><span class="p">](</span><span class="k">this</span><span class="p">.</span><span class="nx">_orient</span><span class="p">);};};</span><span class="kd">var</span> <span class="nx">nf</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">n</span><span class="p">){</span><span class="k">return</span> <span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">_dateElement</span><span class="o">=</span><span class="nx">n</span><span class="p">;</span><span class="k">return</span> <span class="k">this</span><span class="p">;};};</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">k</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">k</span><span class="o">&lt;</span><span class="nx">px</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">k</span><span class="o">++</span><span class="p">){</span><span class="nx">de</span><span class="o">=</span><span class="nx">px</span><span class="p">[</span><span class="nx">k</span><span class="p">].</span><span class="nx">toLowerCase</span><span class="p">();</span><span class="nx">$P</span><span class="p">[</span><span class="nx">de</span><span class="p">]</span><span class="o">=</span><span class="nx">$P</span><span class="p">[</span><span class="nx">de</span><span class="o">+</span><span class="s2">&quot;s&quot;</span><span class="p">]</span><span class="o">=</span><span class="nx">ef</span><span class="p">(</span><span class="nx">px</span><span class="p">[</span><span class="nx">k</span><span class="p">]);</span><span class="nx">$N</span><span class="p">[</span><span class="nx">de</span><span class="p">]</span><span class="o">=</span><span class="nx">$N</span><span class="p">[</span><span class="nx">de</span><span class="o">+</span><span class="s2">&quot;s&quot;</span><span class="p">]</span><span class="o">=</span><span class="nx">nf</span><span class="p">(</span><span class="nx">de</span><span class="p">);}</span></div><div class='line' id='LC66'><span class="nx">$P</span><span class="p">.</span><span class="nx">_ss</span><span class="o">=</span><span class="nx">ef</span><span class="p">(</span><span class="s2">&quot;Second&quot;</span><span class="p">);</span><span class="kd">var</span> <span class="nx">nthfn</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">n</span><span class="p">){</span><span class="k">return</span> <span class="kd">function</span><span class="p">(</span><span class="nx">dayOfWeek</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_same</span><span class="p">){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">_ss</span><span class="p">(</span><span class="nx">arguments</span><span class="p">[</span><span class="mi">0</span><span class="p">]);}</span></div><div class='line' id='LC67'><span class="k">if</span><span class="p">(</span><span class="nx">dayOfWeek</span><span class="o">||</span><span class="nx">dayOfWeek</span><span class="o">===</span><span class="mi">0</span><span class="p">){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">moveToNthOccurrence</span><span class="p">(</span><span class="nx">dayOfWeek</span><span class="p">,</span><span class="nx">n</span><span class="p">);}</span></div><div class='line' id='LC68'><span class="k">this</span><span class="p">.</span><span class="nx">_nth</span><span class="o">=</span><span class="nx">n</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">n</span><span class="o">===</span><span class="mi">2</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">dayOfWeek</span><span class="o">===</span><span class="kc">undefined</span><span class="o">||</span><span class="nx">dayOfWeek</span><span class="o">===</span><span class="kc">null</span><span class="p">)){</span><span class="k">this</span><span class="p">.</span><span class="nx">_isSecond</span><span class="o">=</span><span class="kc">true</span><span class="p">;</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">addSeconds</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_orient</span><span class="p">);}</span></div><div class='line' id='LC69'><span class="k">return</span> <span class="k">this</span><span class="p">;};};</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">l</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">l</span><span class="o">&lt;</span><span class="nx">nth</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">l</span><span class="o">++</span><span class="p">){</span><span class="nx">$P</span><span class="p">[</span><span class="nx">nth</span><span class="p">[</span><span class="nx">l</span><span class="p">]]</span><span class="o">=</span><span class="p">(</span><span class="nx">l</span><span class="o">===</span><span class="mi">0</span><span class="p">)</span><span class="o">?</span><span class="nx">nthfn</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span><span class="o">:</span><span class="nx">nthfn</span><span class="p">(</span><span class="nx">l</span><span class="p">);}}());</span></div><div class='line' id='LC70'><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nb">Date</span><span class="p">.</span><span class="nx">Parsing</span><span class="o">=</span><span class="p">{</span><span class="nx">Exception</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">s</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">message</span><span class="o">=</span><span class="s2">&quot;Parse error at &#39;&quot;</span><span class="o">+</span><span class="nx">s</span><span class="p">.</span><span class="nx">substring</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">10</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot; ...&#39;&quot;</span><span class="p">;}};</span><span class="kd">var</span> <span class="nx">$P</span><span class="o">=</span><span class="nb">Date</span><span class="p">.</span><span class="nx">Parsing</span><span class="p">;</span><span class="kd">var</span> <span class="nx">_</span><span class="o">=</span><span class="nx">$P</span><span class="p">.</span><span class="nx">Operators</span><span class="o">=</span><span class="p">{</span><span class="nx">rtoken</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">r</span><span class="p">){</span><span class="k">return</span> <span class="kd">function</span><span class="p">(</span><span class="nx">s</span><span class="p">){</span><span class="kd">var</span> <span class="nx">mx</span><span class="o">=</span><span class="nx">s</span><span class="p">.</span><span class="nx">match</span><span class="p">(</span><span class="nx">r</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">mx</span><span class="p">){</span><span class="k">return</span><span class="p">([</span><span class="nx">mx</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">s</span><span class="p">.</span><span class="nx">substring</span><span class="p">(</span><span class="nx">mx</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">length</span><span class="p">)]);}</span><span class="k">else</span><span class="p">{</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">$P</span><span class="p">.</span><span class="nx">Exception</span><span class="p">(</span><span class="nx">s</span><span class="p">);}};},</span><span class="nx">token</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">s</span><span class="p">){</span><span class="k">return</span> <span class="kd">function</span><span class="p">(</span><span class="nx">s</span><span class="p">){</span><span class="k">return</span> <span class="nx">_</span><span class="p">.</span><span class="nx">rtoken</span><span class="p">(</span><span class="k">new</span> <span class="nb">RegExp</span><span class="p">(</span><span class="s2">&quot;^\s*&quot;</span><span class="o">+</span><span class="nx">s</span><span class="o">+</span><span class="s2">&quot;\s*&quot;</span><span class="p">))(</span><span class="nx">s</span><span class="p">);};},</span><span class="nx">stoken</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">s</span><span class="p">){</span><span class="k">return</span> <span class="nx">_</span><span class="p">.</span><span class="nx">rtoken</span><span class="p">(</span><span class="k">new</span> <span class="nb">RegExp</span><span class="p">(</span><span class="s2">&quot;^&quot;</span><span class="o">+</span><span class="nx">s</span><span class="p">));},</span><span class="nx">until</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">p</span><span class="p">){</span><span class="k">return</span> <span class="kd">function</span><span class="p">(</span><span class="nx">s</span><span class="p">){</span><span class="kd">var</span> <span class="nx">qx</span><span class="o">=</span><span class="p">[],</span><span class="nx">rx</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="k">while</span><span class="p">(</span><span class="nx">s</span><span class="p">.</span><span class="nx">length</span><span class="p">){</span><span class="k">try</span><span class="p">{</span><span class="nx">rx</span><span class="o">=</span><span class="nx">p</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">s</span><span class="p">);}</span><span class="k">catch</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="nx">qx</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">rx</span><span class="p">[</span><span class="mi">0</span><span class="p">]);</span><span class="nx">s</span><span class="o">=</span><span class="nx">rx</span><span class="p">[</span><span class="mi">1</span><span class="p">];</span><span class="k">continue</span><span class="p">;}</span></div><div class='line' id='LC71'><span class="k">break</span><span class="p">;}</span></div><div class='line' id='LC72'><span class="k">return</span><span class="p">[</span><span class="nx">qx</span><span class="p">,</span><span class="nx">s</span><span class="p">];};},</span><span class="nx">many</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">p</span><span class="p">){</span><span class="k">return</span> <span class="kd">function</span><span class="p">(</span><span class="nx">s</span><span class="p">){</span><span class="kd">var</span> <span class="nx">rx</span><span class="o">=</span><span class="p">[],</span><span class="nx">r</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="k">while</span><span class="p">(</span><span class="nx">s</span><span class="p">.</span><span class="nx">length</span><span class="p">){</span><span class="k">try</span><span class="p">{</span><span class="nx">r</span><span class="o">=</span><span class="nx">p</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">s</span><span class="p">);}</span><span class="k">catch</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="k">return</span><span class="p">[</span><span class="nx">rx</span><span class="p">,</span><span class="nx">s</span><span class="p">];}</span></div><div class='line' id='LC73'><span class="nx">rx</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">r</span><span class="p">[</span><span class="mi">0</span><span class="p">]);</span><span class="nx">s</span><span class="o">=</span><span class="nx">r</span><span class="p">[</span><span class="mi">1</span><span class="p">];}</span></div><div class='line' id='LC74'><span class="k">return</span><span class="p">[</span><span class="nx">rx</span><span class="p">,</span><span class="nx">s</span><span class="p">];};},</span><span class="nx">optional</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">p</span><span class="p">){</span><span class="k">return</span> <span class="kd">function</span><span class="p">(</span><span class="nx">s</span><span class="p">){</span><span class="kd">var</span> <span class="nx">r</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="k">try</span><span class="p">{</span><span class="nx">r</span><span class="o">=</span><span class="nx">p</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">s</span><span class="p">);}</span><span class="k">catch</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="k">return</span><span class="p">[</span><span class="kc">null</span><span class="p">,</span><span class="nx">s</span><span class="p">];}</span></div><div class='line' id='LC75'><span class="k">return</span><span class="p">[</span><span class="nx">r</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">r</span><span class="p">[</span><span class="mi">1</span><span class="p">]];};},</span><span class="nx">not</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">p</span><span class="p">){</span><span class="k">return</span> <span class="kd">function</span><span class="p">(</span><span class="nx">s</span><span class="p">){</span><span class="k">try</span><span class="p">{</span><span class="nx">p</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">s</span><span class="p">);}</span><span class="k">catch</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="k">return</span><span class="p">[</span><span class="kc">null</span><span class="p">,</span><span class="nx">s</span><span class="p">];}</span></div><div class='line' id='LC76'><span class="k">throw</span> <span class="k">new</span> <span class="nx">$P</span><span class="p">.</span><span class="nx">Exception</span><span class="p">(</span><span class="nx">s</span><span class="p">);};},</span><span class="nx">ignore</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">p</span><span class="p">){</span><span class="k">return</span> <span class="nx">p</span><span class="o">?</span><span class="kd">function</span><span class="p">(</span><span class="nx">s</span><span class="p">){</span><span class="kd">var</span> <span class="nx">r</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="nx">r</span><span class="o">=</span><span class="nx">p</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">s</span><span class="p">);</span><span class="k">return</span><span class="p">[</span><span class="kc">null</span><span class="p">,</span><span class="nx">r</span><span class="p">[</span><span class="mi">1</span><span class="p">]];}</span><span class="o">:</span><span class="kc">null</span><span class="p">;},</span><span class="nx">product</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">px</span><span class="o">=</span><span class="nx">arguments</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">qx</span><span class="o">=</span><span class="nb">Array</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">slice</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">arguments</span><span class="p">,</span><span class="mi">1</span><span class="p">),</span><span class="nx">rx</span><span class="o">=</span><span class="p">[];</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">i</span><span class="o">&lt;</span><span class="nx">px</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">i</span><span class="o">++</span><span class="p">){</span><span class="nx">rx</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">_</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="nx">px</span><span class="p">[</span><span class="nx">i</span><span class="p">],</span><span class="nx">qx</span><span class="p">));}</span></div><div class='line' id='LC77'><span class="k">return</span> <span class="nx">rx</span><span class="p">;},</span><span class="nx">cache</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">rule</span><span class="p">){</span><span class="kd">var</span> <span class="nx">cache</span><span class="o">=</span><span class="p">{},</span><span class="nx">r</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="k">return</span> <span class="kd">function</span><span class="p">(</span><span class="nx">s</span><span class="p">){</span><span class="k">try</span><span class="p">{</span><span class="nx">r</span><span class="o">=</span><span class="nx">cache</span><span class="p">[</span><span class="nx">s</span><span class="p">]</span><span class="o">=</span><span class="p">(</span><span class="nx">cache</span><span class="p">[</span><span class="nx">s</span><span class="p">]</span><span class="o">||</span><span class="nx">rule</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">s</span><span class="p">));}</span><span class="k">catch</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="nx">r</span><span class="o">=</span><span class="nx">cache</span><span class="p">[</span><span class="nx">s</span><span class="p">]</span><span class="o">=</span><span class="nx">e</span><span class="p">;}</span></div><div class='line' id='LC78'><span class="k">if</span><span class="p">(</span><span class="nx">r</span> <span class="k">instanceof</span> <span class="nx">$P</span><span class="p">.</span><span class="nx">Exception</span><span class="p">){</span><span class="k">throw</span> <span class="nx">r</span><span class="p">;}</span><span class="k">else</span><span class="p">{</span><span class="k">return</span> <span class="nx">r</span><span class="p">;}};},</span><span class="nx">any</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">px</span><span class="o">=</span><span class="nx">arguments</span><span class="p">;</span><span class="k">return</span> <span class="kd">function</span><span class="p">(</span><span class="nx">s</span><span class="p">){</span><span class="kd">var</span> <span class="nx">r</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">i</span><span class="o">&lt;</span><span class="nx">px</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">i</span><span class="o">++</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">px</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span><span class="o">==</span><span class="kc">null</span><span class="p">){</span><span class="k">continue</span><span class="p">;}</span></div><div class='line' id='LC79'><span class="k">try</span><span class="p">{</span><span class="nx">r</span><span class="o">=</span><span class="p">(</span><span class="nx">px</span><span class="p">[</span><span class="nx">i</span><span class="p">].</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">s</span><span class="p">));}</span><span class="k">catch</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="nx">r</span><span class="o">=</span><span class="kc">null</span><span class="p">;}</span></div><div class='line' id='LC80'><span class="k">if</span><span class="p">(</span><span class="nx">r</span><span class="p">){</span><span class="k">return</span> <span class="nx">r</span><span class="p">;}}</span></div><div class='line' id='LC81'><span class="k">throw</span> <span class="k">new</span> <span class="nx">$P</span><span class="p">.</span><span class="nx">Exception</span><span class="p">(</span><span class="nx">s</span><span class="p">);};},</span><span class="nx">each</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">px</span><span class="o">=</span><span class="nx">arguments</span><span class="p">;</span><span class="k">return</span> <span class="kd">function</span><span class="p">(</span><span class="nx">s</span><span class="p">){</span><span class="kd">var</span> <span class="nx">rx</span><span class="o">=</span><span class="p">[],</span><span class="nx">r</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">i</span><span class="o">&lt;</span><span class="nx">px</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">i</span><span class="o">++</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">px</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span><span class="o">==</span><span class="kc">null</span><span class="p">){</span><span class="k">continue</span><span class="p">;}</span></div><div class='line' id='LC82'><span class="k">try</span><span class="p">{</span><span class="nx">r</span><span class="o">=</span><span class="p">(</span><span class="nx">px</span><span class="p">[</span><span class="nx">i</span><span class="p">].</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">s</span><span class="p">));}</span><span class="k">catch</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">$P</span><span class="p">.</span><span class="nx">Exception</span><span class="p">(</span><span class="nx">s</span><span class="p">);}</span></div><div class='line' id='LC83'><span class="nx">rx</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">r</span><span class="p">[</span><span class="mi">0</span><span class="p">]);</span><span class="nx">s</span><span class="o">=</span><span class="nx">r</span><span class="p">[</span><span class="mi">1</span><span class="p">];}</span></div><div class='line' id='LC84'><span class="k">return</span><span class="p">[</span><span class="nx">rx</span><span class="p">,</span><span class="nx">s</span><span class="p">];};},</span><span class="nx">all</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">px</span><span class="o">=</span><span class="nx">arguments</span><span class="p">,</span><span class="nx">_</span><span class="o">=</span><span class="nx">_</span><span class="p">;</span><span class="k">return</span> <span class="nx">_</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="nx">_</span><span class="p">.</span><span class="nx">optional</span><span class="p">(</span><span class="nx">px</span><span class="p">));},</span><span class="nx">sequence</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">px</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">d</span><span class="o">=</span><span class="nx">d</span><span class="o">||</span><span class="nx">_</span><span class="p">.</span><span class="nx">rtoken</span><span class="p">(</span><span class="sr">/^\s*/</span><span class="p">);</span><span class="nx">c</span><span class="o">=</span><span class="nx">c</span><span class="o">||</span><span class="kc">null</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">px</span><span class="p">.</span><span class="nx">length</span><span class="o">==</span><span class="mi">1</span><span class="p">){</span><span class="k">return</span> <span class="nx">px</span><span class="p">[</span><span class="mi">0</span><span class="p">];}</span></div><div class='line' id='LC85'><span class="k">return</span> <span class="kd">function</span><span class="p">(</span><span class="nx">s</span><span class="p">){</span><span class="kd">var</span> <span class="nx">r</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">q</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="kd">var</span> <span class="nx">rx</span><span class="o">=</span><span class="p">[];</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">i</span><span class="o">&lt;</span><span class="nx">px</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">i</span><span class="o">++</span><span class="p">){</span><span class="k">try</span><span class="p">{</span><span class="nx">r</span><span class="o">=</span><span class="nx">px</span><span class="p">[</span><span class="nx">i</span><span class="p">].</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">s</span><span class="p">);}</span><span class="k">catch</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="k">break</span><span class="p">;}</span></div><div class='line' id='LC86'><span class="nx">rx</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">r</span><span class="p">[</span><span class="mi">0</span><span class="p">]);</span><span class="k">try</span><span class="p">{</span><span class="nx">q</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">r</span><span class="p">[</span><span class="mi">1</span><span class="p">]);}</span><span class="k">catch</span><span class="p">(</span><span class="nx">ex</span><span class="p">){</span><span class="nx">q</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="k">break</span><span class="p">;}</span></div><div class='line' id='LC87'><span class="nx">s</span><span class="o">=</span><span class="nx">q</span><span class="p">[</span><span class="mi">1</span><span class="p">];}</span></div><div class='line' id='LC88'><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">r</span><span class="p">){</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">$P</span><span class="p">.</span><span class="nx">Exception</span><span class="p">(</span><span class="nx">s</span><span class="p">);}</span></div><div class='line' id='LC89'><span class="k">if</span><span class="p">(</span><span class="nx">q</span><span class="p">){</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">$P</span><span class="p">.</span><span class="nx">Exception</span><span class="p">(</span><span class="nx">q</span><span class="p">[</span><span class="mi">1</span><span class="p">]);}</span></div><div class='line' id='LC90'><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="p">){</span><span class="k">try</span><span class="p">{</span><span class="nx">r</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">r</span><span class="p">[</span><span class="mi">1</span><span class="p">]);}</span><span class="k">catch</span><span class="p">(</span><span class="nx">ey</span><span class="p">){</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">$P</span><span class="p">.</span><span class="nx">Exception</span><span class="p">(</span><span class="nx">r</span><span class="p">[</span><span class="mi">1</span><span class="p">]);}}</span></div><div class='line' id='LC91'><span class="k">return</span><span class="p">[</span><span class="nx">rx</span><span class="p">,(</span><span class="nx">r</span><span class="o">?</span><span class="nx">r</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">:</span><span class="nx">s</span><span class="p">)];};},</span><span class="nx">between</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">d1</span><span class="p">,</span><span class="nx">p</span><span class="p">,</span><span class="nx">d2</span><span class="p">){</span><span class="nx">d2</span><span class="o">=</span><span class="nx">d2</span><span class="o">||</span><span class="nx">d1</span><span class="p">;</span><span class="kd">var</span> <span class="nx">_fn</span><span class="o">=</span><span class="nx">_</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="nx">_</span><span class="p">.</span><span class="nx">ignore</span><span class="p">(</span><span class="nx">d1</span><span class="p">),</span><span class="nx">p</span><span class="p">,</span><span class="nx">_</span><span class="p">.</span><span class="nx">ignore</span><span class="p">(</span><span class="nx">d2</span><span class="p">));</span><span class="k">return</span> <span class="kd">function</span><span class="p">(</span><span class="nx">s</span><span class="p">){</span><span class="kd">var</span> <span class="nx">rx</span><span class="o">=</span><span class="nx">_fn</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">s</span><span class="p">);</span><span class="k">return</span><span class="p">[[</span><span class="nx">rx</span><span class="p">[</span><span class="mi">0</span><span class="p">][</span><span class="mi">0</span><span class="p">],</span><span class="nx">r</span><span class="p">[</span><span class="mi">0</span><span class="p">][</span><span class="mi">2</span><span class="p">]],</span><span class="nx">rx</span><span class="p">[</span><span class="mi">1</span><span class="p">]];};},</span><span class="nx">list</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">p</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">d</span><span class="o">=</span><span class="nx">d</span><span class="o">||</span><span class="nx">_</span><span class="p">.</span><span class="nx">rtoken</span><span class="p">(</span><span class="sr">/^\s*/</span><span class="p">);</span><span class="nx">c</span><span class="o">=</span><span class="nx">c</span><span class="o">||</span><span class="kc">null</span><span class="p">;</span><span class="k">return</span><span class="p">(</span><span class="nx">p</span> <span class="k">instanceof</span> <span class="nb">Array</span><span class="o">?</span><span class="nx">_</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="nx">_</span><span class="p">.</span><span class="nx">product</span><span class="p">(</span><span class="nx">p</span><span class="p">.</span><span class="nx">slice</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="o">-</span><span class="mi">1</span><span class="p">),</span><span class="nx">_</span><span class="p">.</span><span class="nx">ignore</span><span class="p">(</span><span class="nx">d</span><span class="p">)),</span><span class="nx">p</span><span class="p">.</span><span class="nx">slice</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">),</span><span class="nx">_</span><span class="p">.</span><span class="nx">ignore</span><span class="p">(</span><span class="nx">c</span><span class="p">))</span><span class="o">:</span><span class="nx">_</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="nx">_</span><span class="p">.</span><span class="nx">many</span><span class="p">(</span><span class="nx">_</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="nx">p</span><span class="p">,</span><span class="nx">_</span><span class="p">.</span><span class="nx">ignore</span><span class="p">(</span><span class="nx">d</span><span class="p">))),</span><span class="nx">px</span><span class="p">,</span><span class="nx">_</span><span class="p">.</span><span class="nx">ignore</span><span class="p">(</span><span class="nx">c</span><span class="p">)));},</span><span class="nx">set</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">px</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">d</span><span class="o">=</span><span class="nx">d</span><span class="o">||</span><span class="nx">_</span><span class="p">.</span><span class="nx">rtoken</span><span class="p">(</span><span class="sr">/^\s*/</span><span class="p">);</span><span class="nx">c</span><span class="o">=</span><span class="nx">c</span><span class="o">||</span><span class="kc">null</span><span class="p">;</span><span class="k">return</span> <span class="kd">function</span><span class="p">(</span><span class="nx">s</span><span class="p">){</span><span class="kd">var</span> <span class="nx">r</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">p</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">q</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">rx</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">best</span><span class="o">=</span><span class="p">[[],</span><span class="nx">s</span><span class="p">],</span><span class="nx">last</span><span class="o">=</span><span class="kc">false</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">i</span><span class="o">&lt;</span><span class="nx">px</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">i</span><span class="o">++</span><span class="p">){</span><span class="nx">q</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="nx">p</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="nx">r</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="nx">last</span><span class="o">=</span><span class="p">(</span><span class="nx">px</span><span class="p">.</span><span class="nx">length</span><span class="o">==</span><span class="mi">1</span><span class="p">);</span><span class="k">try</span><span class="p">{</span><span class="nx">r</span><span class="o">=</span><span class="nx">px</span><span class="p">[</span><span class="nx">i</span><span class="p">].</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">s</span><span class="p">);}</span><span class="k">catch</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="k">continue</span><span class="p">;}</span></div><div class='line' id='LC92'><span class="nx">rx</span><span class="o">=</span><span class="p">[[</span><span class="nx">r</span><span class="p">[</span><span class="mi">0</span><span class="p">]],</span><span class="nx">r</span><span class="p">[</span><span class="mi">1</span><span class="p">]];</span><span class="k">if</span><span class="p">(</span><span class="nx">r</span><span class="p">[</span><span class="mi">1</span><span class="p">].</span><span class="nx">length</span><span class="o">&gt;</span><span class="mi">0</span><span class="o">&amp;&amp;!</span><span class="nx">last</span><span class="p">){</span><span class="k">try</span><span class="p">{</span><span class="nx">q</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">r</span><span class="p">[</span><span class="mi">1</span><span class="p">]);}</span><span class="k">catch</span><span class="p">(</span><span class="nx">ex</span><span class="p">){</span><span class="nx">last</span><span class="o">=</span><span class="kc">true</span><span class="p">;}}</span><span class="k">else</span><span class="p">{</span><span class="nx">last</span><span class="o">=</span><span class="kc">true</span><span class="p">;}</span></div><div class='line' id='LC93'><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">last</span><span class="o">&amp;&amp;</span><span class="nx">q</span><span class="p">[</span><span class="mi">1</span><span class="p">].</span><span class="nx">length</span><span class="o">===</span><span class="mi">0</span><span class="p">){</span><span class="nx">last</span><span class="o">=</span><span class="kc">true</span><span class="p">;}</span></div><div class='line' id='LC94'><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">last</span><span class="p">){</span><span class="kd">var</span> <span class="nx">qx</span><span class="o">=</span><span class="p">[];</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">j</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">j</span><span class="o">&lt;</span><span class="nx">px</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">j</span><span class="o">++</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">i</span><span class="o">!=</span><span class="nx">j</span><span class="p">){</span><span class="nx">qx</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">px</span><span class="p">[</span><span class="nx">j</span><span class="p">]);}}</span></div><div class='line' id='LC95'><span class="nx">p</span><span class="o">=</span><span class="nx">_</span><span class="p">.</span><span class="nx">set</span><span class="p">(</span><span class="nx">qx</span><span class="p">,</span><span class="nx">d</span><span class="p">).</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">q</span><span class="p">[</span><span class="mi">1</span><span class="p">]);</span><span class="k">if</span><span class="p">(</span><span class="nx">p</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">length</span><span class="o">&gt;</span><span class="mi">0</span><span class="p">){</span><span class="nx">rx</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">=</span><span class="nx">rx</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">concat</span><span class="p">(</span><span class="nx">p</span><span class="p">[</span><span class="mi">0</span><span class="p">]);</span><span class="nx">rx</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">=</span><span class="nx">p</span><span class="p">[</span><span class="mi">1</span><span class="p">];}}</span></div><div class='line' id='LC96'><span class="k">if</span><span class="p">(</span><span class="nx">rx</span><span class="p">[</span><span class="mi">1</span><span class="p">].</span><span class="nx">length</span><span class="o">&lt;</span><span class="nx">best</span><span class="p">[</span><span class="mi">1</span><span class="p">].</span><span class="nx">length</span><span class="p">){</span><span class="nx">best</span><span class="o">=</span><span class="nx">rx</span><span class="p">;}</span></div><div class='line' id='LC97'><span class="k">if</span><span class="p">(</span><span class="nx">best</span><span class="p">[</span><span class="mi">1</span><span class="p">].</span><span class="nx">length</span><span class="o">===</span><span class="mi">0</span><span class="p">){</span><span class="k">break</span><span class="p">;}}</span></div><div class='line' id='LC98'><span class="k">if</span><span class="p">(</span><span class="nx">best</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">length</span><span class="o">===</span><span class="mi">0</span><span class="p">){</span><span class="k">return</span> <span class="nx">best</span><span class="p">;}</span></div><div class='line' id='LC99'><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="p">){</span><span class="k">try</span><span class="p">{</span><span class="nx">q</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">best</span><span class="p">[</span><span class="mi">1</span><span class="p">]);}</span><span class="k">catch</span><span class="p">(</span><span class="nx">ey</span><span class="p">){</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">$P</span><span class="p">.</span><span class="nx">Exception</span><span class="p">(</span><span class="nx">best</span><span class="p">[</span><span class="mi">1</span><span class="p">]);}</span></div><div class='line' id='LC100'><span class="nx">best</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">=</span><span class="nx">q</span><span class="p">[</span><span class="mi">1</span><span class="p">];}</span></div><div class='line' id='LC101'><span class="k">return</span> <span class="nx">best</span><span class="p">;};},</span><span class="nx">forward</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">gr</span><span class="p">,</span><span class="nx">fname</span><span class="p">){</span><span class="k">return</span> <span class="kd">function</span><span class="p">(</span><span class="nx">s</span><span class="p">){</span><span class="k">return</span> <span class="nx">gr</span><span class="p">[</span><span class="nx">fname</span><span class="p">].</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">s</span><span class="p">);};},</span><span class="nx">replace</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">rule</span><span class="p">,</span><span class="nx">repl</span><span class="p">){</span><span class="k">return</span> <span class="kd">function</span><span class="p">(</span><span class="nx">s</span><span class="p">){</span><span class="kd">var</span> <span class="nx">r</span><span class="o">=</span><span class="nx">rule</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">s</span><span class="p">);</span><span class="k">return</span><span class="p">[</span><span class="nx">repl</span><span class="p">,</span><span class="nx">r</span><span class="p">[</span><span class="mi">1</span><span class="p">]];};},</span><span class="nx">process</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">rule</span><span class="p">,</span><span class="nx">fn</span><span class="p">){</span><span class="k">return</span> <span class="kd">function</span><span class="p">(</span><span class="nx">s</span><span class="p">){</span><span class="kd">var</span> <span class="nx">r</span><span class="o">=</span><span class="nx">rule</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">s</span><span class="p">);</span><span class="k">return</span><span class="p">[</span><span class="nx">fn</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">r</span><span class="p">[</span><span class="mi">0</span><span class="p">]),</span><span class="nx">r</span><span class="p">[</span><span class="mi">1</span><span class="p">]];};},</span><span class="nx">min</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">min</span><span class="p">,</span><span class="nx">rule</span><span class="p">){</span><span class="k">return</span> <span class="kd">function</span><span class="p">(</span><span class="nx">s</span><span class="p">){</span><span class="kd">var</span> <span class="nx">rx</span><span class="o">=</span><span class="nx">rule</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">s</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">rx</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">length</span><span class="o">&lt;</span><span class="nx">min</span><span class="p">){</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">$P</span><span class="p">.</span><span class="nx">Exception</span><span class="p">(</span><span class="nx">s</span><span class="p">);}</span></div><div class='line' id='LC102'><span class="k">return</span> <span class="nx">rx</span><span class="p">;};}};</span><span class="kd">var</span> <span class="nx">_generator</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">op</span><span class="p">){</span><span class="k">return</span> <span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">args</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">rx</span><span class="o">=</span><span class="p">[];</span><span class="k">if</span><span class="p">(</span><span class="nx">arguments</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;</span><span class="mi">1</span><span class="p">){</span><span class="nx">args</span><span class="o">=</span><span class="nb">Array</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">slice</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">arguments</span><span class="p">);}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">arguments</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="k">instanceof</span> <span class="nb">Array</span><span class="p">){</span><span class="nx">args</span><span class="o">=</span><span class="nx">arguments</span><span class="p">[</span><span class="mi">0</span><span class="p">];}</span></div><div class='line' id='LC103'><span class="k">if</span><span class="p">(</span><span class="nx">args</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">px</span><span class="o">=</span><span class="nx">args</span><span class="p">.</span><span class="nx">shift</span><span class="p">();</span><span class="nx">i</span><span class="o">&lt;</span><span class="nx">px</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">i</span><span class="o">++</span><span class="p">){</span><span class="nx">args</span><span class="p">.</span><span class="nx">unshift</span><span class="p">(</span><span class="nx">px</span><span class="p">[</span><span class="nx">i</span><span class="p">]);</span><span class="nx">rx</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">op</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="kc">null</span><span class="p">,</span><span class="nx">args</span><span class="p">));</span><span class="nx">args</span><span class="p">.</span><span class="nx">shift</span><span class="p">();</span><span class="k">return</span> <span class="nx">rx</span><span class="p">;}}</span><span class="k">else</span><span class="p">{</span><span class="k">return</span> <span class="nx">op</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="kc">null</span><span class="p">,</span><span class="nx">arguments</span><span class="p">);}};};</span><span class="kd">var</span> <span class="nx">gx</span><span class="o">=</span><span class="s2">&quot;optional not ignore cache&quot;</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="sr">/\s/</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">i</span><span class="o">&lt;</span><span class="nx">gx</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">i</span><span class="o">++</span><span class="p">){</span><span class="nx">_</span><span class="p">[</span><span class="nx">gx</span><span class="p">[</span><span class="nx">i</span><span class="p">]]</span><span class="o">=</span><span class="nx">_generator</span><span class="p">(</span><span class="nx">_</span><span class="p">[</span><span class="nx">gx</span><span class="p">[</span><span class="nx">i</span><span class="p">]]);}</span></div><div class='line' id='LC104'><span class="kd">var</span> <span class="nx">_vector</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">op</span><span class="p">){</span><span class="k">return</span> <span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="nx">arguments</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="k">instanceof</span> <span class="nb">Array</span><span class="p">){</span><span class="k">return</span> <span class="nx">op</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="kc">null</span><span class="p">,</span><span class="nx">arguments</span><span class="p">[</span><span class="mi">0</span><span class="p">]);}</span><span class="k">else</span><span class="p">{</span><span class="k">return</span> <span class="nx">op</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="kc">null</span><span class="p">,</span><span class="nx">arguments</span><span class="p">);}};};</span><span class="kd">var</span> <span class="nx">vx</span><span class="o">=</span><span class="s2">&quot;each any all&quot;</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="sr">/\s/</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">j</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">j</span><span class="o">&lt;</span><span class="nx">vx</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">j</span><span class="o">++</span><span class="p">){</span><span class="nx">_</span><span class="p">[</span><span class="nx">vx</span><span class="p">[</span><span class="nx">j</span><span class="p">]]</span><span class="o">=</span><span class="nx">_vector</span><span class="p">(</span><span class="nx">_</span><span class="p">[</span><span class="nx">vx</span><span class="p">[</span><span class="nx">j</span><span class="p">]]);}}());(</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">$D</span><span class="o">=</span><span class="nb">Date</span><span class="p">,</span><span class="nx">$P</span><span class="o">=</span><span class="nx">$D</span><span class="p">.</span><span class="nx">prototype</span><span class="p">,</span><span class="nx">$C</span><span class="o">=</span><span class="nx">$D</span><span class="p">.</span><span class="nx">CultureInfo</span><span class="p">;</span><span class="kd">var</span> <span class="nx">flattenAndCompact</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">ax</span><span class="p">){</span><span class="kd">var</span> <span class="nx">rx</span><span class="o">=</span><span class="p">[];</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">i</span><span class="o">&lt;</span><span class="nx">ax</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">i</span><span class="o">++</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">ax</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span><span class="k">instanceof</span> <span class="nb">Array</span><span class="p">){</span><span class="nx">rx</span><span class="o">=</span><span class="nx">rx</span><span class="p">.</span><span class="nx">concat</span><span class="p">(</span><span class="nx">flattenAndCompact</span><span class="p">(</span><span class="nx">ax</span><span class="p">[</span><span class="nx">i</span><span class="p">]));}</span><span class="k">else</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="nx">ax</span><span class="p">[</span><span class="nx">i</span><span class="p">]){</span><span class="nx">rx</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">ax</span><span class="p">[</span><span class="nx">i</span><span class="p">]);}}}</span></div><div class='line' id='LC105'><span class="k">return</span> <span class="nx">rx</span><span class="p">;};</span><span class="nx">$D</span><span class="p">.</span><span class="nx">Grammar</span><span class="o">=</span><span class="p">{};</span><span class="nx">$D</span><span class="p">.</span><span class="nx">Translator</span><span class="o">=</span><span class="p">{</span><span class="nx">hour</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">s</span><span class="p">){</span><span class="k">return</span> <span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">hour</span><span class="o">=</span><span class="nb">Number</span><span class="p">(</span><span class="nx">s</span><span class="p">);};},</span><span class="nx">minute</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">s</span><span class="p">){</span><span class="k">return</span> <span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">minute</span><span class="o">=</span><span class="nb">Number</span><span class="p">(</span><span class="nx">s</span><span class="p">);};},</span><span class="nx">second</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">s</span><span class="p">){</span><span class="k">return</span> <span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">second</span><span class="o">=</span><span class="nb">Number</span><span class="p">(</span><span class="nx">s</span><span class="p">);};},</span><span class="nx">meridian</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">s</span><span class="p">){</span><span class="k">return</span> <span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">meridian</span><span class="o">=</span><span class="nx">s</span><span class="p">.</span><span class="nx">slice</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">).</span><span class="nx">toLowerCase</span><span class="p">();};},</span><span class="nx">timezone</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">s</span><span class="p">){</span><span class="k">return</span> <span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">n</span><span class="o">=</span><span class="nx">s</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/[^\d\+\-]/g</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">n</span><span class="p">.</span><span class="nx">length</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">timezoneOffset</span><span class="o">=</span><span class="nb">Number</span><span class="p">(</span><span class="nx">n</span><span class="p">);}</span><span class="k">else</span><span class="p">{</span><span class="k">this</span><span class="p">.</span><span class="nx">timezone</span><span class="o">=</span><span class="nx">s</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">();}};},</span><span class="nx">day</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">x</span><span class="p">){</span><span class="kd">var</span> <span class="nx">s</span><span class="o">=</span><span class="nx">x</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span><span class="k">return</span> <span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">day</span><span class="o">=</span><span class="nb">Number</span><span class="p">(</span><span class="nx">s</span><span class="p">.</span><span class="nx">match</span><span class="p">(</span><span class="sr">/\d+/</span><span class="p">)[</span><span class="mi">0</span><span class="p">]);};},</span><span class="nx">month</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">s</span><span class="p">){</span><span class="k">return</span> <span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">month</span><span class="o">=</span><span class="p">(</span><span class="nx">s</span><span class="p">.</span><span class="nx">length</span><span class="o">==</span><span class="mi">3</span><span class="p">)</span><span class="o">?</span><span class="s2">&quot;jan feb mar apr may jun jul aug sep oct nov dec&quot;</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="nx">s</span><span class="p">)</span><span class="o">/</span><span class="mi">4</span><span class="o">:</span><span class="nb">Number</span><span class="p">(</span><span class="nx">s</span><span class="p">)</span><span class="o">-</span><span class="mi">1</span><span class="p">;};},</span><span class="nx">year</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">s</span><span class="p">){</span><span class="k">return</span> <span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">n</span><span class="o">=</span><span class="nb">Number</span><span class="p">(</span><span class="nx">s</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">year</span><span class="o">=</span><span class="p">((</span><span class="nx">s</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;</span><span class="mi">2</span><span class="p">)</span><span class="o">?</span><span class="nx">n</span><span class="o">:</span><span class="p">(</span><span class="nx">n</span><span class="o">+</span><span class="p">(((</span><span class="nx">n</span><span class="o">+</span><span class="mi">2000</span><span class="p">)</span><span class="o">&lt;</span><span class="nx">$C</span><span class="p">.</span><span class="nx">twoDigitYearMax</span><span class="p">)</span><span class="o">?</span><span class="mi">2000</span><span class="o">:</span><span class="mi">1900</span><span class="p">)));};},</span><span class="nx">rday</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">s</span><span class="p">){</span><span class="k">return</span> <span class="kd">function</span><span class="p">(){</span><span class="k">switch</span><span class="p">(</span><span class="nx">s</span><span class="p">){</span><span class="k">case</span><span class="s2">&quot;yesterday&quot;</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">days</span><span class="o">=-</span><span class="mi">1</span><span class="p">;</span><span class="k">break</span><span class="p">;</span><span class="k">case</span><span class="s2">&quot;tomorrow&quot;</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">days</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="k">break</span><span class="p">;</span><span class="k">case</span><span class="s2">&quot;today&quot;</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">days</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">break</span><span class="p">;</span><span class="k">case</span><span class="s2">&quot;now&quot;</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">days</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">now</span><span class="o">=</span><span class="kc">true</span><span class="p">;</span><span class="k">break</span><span class="p">;}};},</span><span class="nx">finishExact</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">x</span><span class="p">){</span><span class="nx">x</span><span class="o">=</span><span class="p">(</span><span class="nx">x</span> <span class="k">instanceof</span> <span class="nb">Array</span><span class="p">)</span><span class="o">?</span><span class="nx">x</span><span class="o">:</span><span class="p">[</span><span class="nx">x</span><span class="p">];</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">i</span><span class="o">&lt;</span><span class="nx">x</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">i</span><span class="o">++</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">x</span><span class="p">[</span><span class="nx">i</span><span class="p">]){</span><span class="nx">x</span><span class="p">[</span><span class="nx">i</span><span class="p">].</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">);}}</span></div><div class='line' id='LC106'><span class="kd">var</span> <span class="nx">now</span><span class="o">=</span><span class="k">new</span> <span class="nb">Date</span><span class="p">();</span><span class="k">if</span><span class="p">((</span><span class="k">this</span><span class="p">.</span><span class="nx">hour</span><span class="o">||</span><span class="k">this</span><span class="p">.</span><span class="nx">minute</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="o">!</span><span class="k">this</span><span class="p">.</span><span class="nx">month</span><span class="o">&amp;&amp;!</span><span class="k">this</span><span class="p">.</span><span class="nx">year</span><span class="o">&amp;&amp;!</span><span class="k">this</span><span class="p">.</span><span class="nx">day</span><span class="p">)){</span><span class="k">this</span><span class="p">.</span><span class="nx">day</span><span class="o">=</span><span class="nx">now</span><span class="p">.</span><span class="nx">getDate</span><span class="p">();}</span></div><div class='line' id='LC107'><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="k">this</span><span class="p">.</span><span class="nx">year</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">year</span><span class="o">=</span><span class="nx">now</span><span class="p">.</span><span class="nx">getFullYear</span><span class="p">();}</span></div><div class='line' id='LC108'><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="k">this</span><span class="p">.</span><span class="nx">month</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">month</span><span class="o">!==</span><span class="mi">0</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">month</span><span class="o">=</span><span class="nx">now</span><span class="p">.</span><span class="nx">getMonth</span><span class="p">();}</span></div><div class='line' id='LC109'><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="k">this</span><span class="p">.</span><span class="nx">day</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">day</span><span class="o">=</span><span class="mi">1</span><span class="p">;}</span></div><div class='line' id='LC110'><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="k">this</span><span class="p">.</span><span class="nx">hour</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">hour</span><span class="o">=</span><span class="mi">0</span><span class="p">;}</span></div><div class='line' id='LC111'><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="k">this</span><span class="p">.</span><span class="nx">minute</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">minute</span><span class="o">=</span><span class="mi">0</span><span class="p">;}</span></div><div class='line' id='LC112'><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="k">this</span><span class="p">.</span><span class="nx">second</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">second</span><span class="o">=</span><span class="mi">0</span><span class="p">;}</span></div><div class='line' id='LC113'><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">meridian</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">hour</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">meridian</span><span class="o">==</span><span class="s2">&quot;p&quot;</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">hour</span><span class="o">&lt;</span><span class="mi">12</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">hour</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">hour</span><span class="o">+</span><span class="mi">12</span><span class="p">;}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">meridian</span><span class="o">==</span><span class="s2">&quot;a&quot;</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">hour</span><span class="o">==</span><span class="mi">12</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">hour</span><span class="o">=</span><span class="mi">0</span><span class="p">;}}</span></div><div class='line' id='LC114'><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">day</span><span class="o">&gt;</span><span class="nx">$D</span><span class="p">.</span><span class="nx">getDaysInMonth</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">year</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">month</span><span class="p">)){</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">RangeError</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">day</span><span class="o">+</span><span class="s2">&quot; is not a valid value for days.&quot;</span><span class="p">);}</span></div><div class='line' id='LC115'><span class="kd">var</span> <span class="nx">r</span><span class="o">=</span><span class="k">new</span> <span class="nb">Date</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">year</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">month</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">day</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">hour</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">minute</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">second</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">timezone</span><span class="p">){</span><span class="nx">r</span><span class="p">.</span><span class="nx">set</span><span class="p">({</span><span class="nx">timezone</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">timezone</span><span class="p">});}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">timezoneOffset</span><span class="p">){</span><span class="nx">r</span><span class="p">.</span><span class="nx">set</span><span class="p">({</span><span class="nx">timezoneOffset</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">timezoneOffset</span><span class="p">});}</span></div><div class='line' id='LC116'><span class="k">return</span> <span class="nx">r</span><span class="p">;},</span><span class="nx">finish</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">x</span><span class="p">){</span><span class="nx">x</span><span class="o">=</span><span class="p">(</span><span class="nx">x</span> <span class="k">instanceof</span> <span class="nb">Array</span><span class="p">)</span><span class="o">?</span><span class="nx">flattenAndCompact</span><span class="p">(</span><span class="nx">x</span><span class="p">)</span><span class="o">:</span><span class="p">[</span><span class="nx">x</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nx">x</span><span class="p">.</span><span class="nx">length</span><span class="o">===</span><span class="mi">0</span><span class="p">){</span><span class="k">return</span> <span class="kc">null</span><span class="p">;}</span></div><div class='line' id='LC117'><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">i</span><span class="o">&lt;</span><span class="nx">x</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">i</span><span class="o">++</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">x</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span><span class="o">==</span><span class="s2">&quot;function&quot;</span><span class="p">){</span><span class="nx">x</span><span class="p">[</span><span class="nx">i</span><span class="p">].</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">);}}</span></div><div class='line' id='LC118'><span class="kd">var</span> <span class="nx">today</span><span class="o">=</span><span class="nx">$D</span><span class="p">.</span><span class="nx">today</span><span class="p">();</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">now</span><span class="o">&amp;&amp;!</span><span class="k">this</span><span class="p">.</span><span class="nx">unit</span><span class="o">&amp;&amp;!</span><span class="k">this</span><span class="p">.</span><span class="nx">operator</span><span class="p">){</span><span class="k">return</span> <span class="k">new</span> <span class="nb">Date</span><span class="p">();}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">now</span><span class="p">){</span><span class="nx">today</span><span class="o">=</span><span class="k">new</span> <span class="nb">Date</span><span class="p">();}</span></div><div class='line' id='LC119'><span class="kd">var</span> <span class="nx">expression</span><span class="o">=!!</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">days</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">days</span><span class="o">!==</span><span class="kc">null</span><span class="o">||</span><span class="k">this</span><span class="p">.</span><span class="nx">orient</span><span class="o">||</span><span class="k">this</span><span class="p">.</span><span class="nx">operator</span><span class="p">);</span><span class="kd">var</span> <span class="nx">gap</span><span class="p">,</span><span class="nx">mod</span><span class="p">,</span><span class="nx">orient</span><span class="p">;</span><span class="nx">orient</span><span class="o">=</span><span class="p">((</span><span class="k">this</span><span class="p">.</span><span class="nx">orient</span><span class="o">==</span><span class="s2">&quot;past&quot;</span><span class="o">||</span><span class="k">this</span><span class="p">.</span><span class="nx">operator</span><span class="o">==</span><span class="s2">&quot;subtract&quot;</span><span class="p">)</span><span class="o">?-</span><span class="mi">1</span><span class="o">:</span><span class="mi">1</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="k">this</span><span class="p">.</span><span class="nx">now</span><span class="o">&amp;&amp;</span><span class="s2">&quot;hour minute second&quot;</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">unit</span><span class="p">)</span><span class="o">!=-</span><span class="mi">1</span><span class="p">){</span><span class="nx">today</span><span class="p">.</span><span class="nx">setTimeToNow</span><span class="p">();}</span></div><div class='line' id='LC120'><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">month</span><span class="o">||</span><span class="k">this</span><span class="p">.</span><span class="nx">month</span><span class="o">===</span><span class="mi">0</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;year day hour minute second&quot;</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">unit</span><span class="p">)</span><span class="o">!=-</span><span class="mi">1</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">month</span><span class="o">+</span><span class="mi">1</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">month</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="nx">expression</span><span class="o">=</span><span class="kc">true</span><span class="p">;}}</span></div><div class='line' id='LC121'><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">expression</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">weekday</span><span class="o">&amp;&amp;!</span><span class="k">this</span><span class="p">.</span><span class="nx">day</span><span class="o">&amp;&amp;!</span><span class="k">this</span><span class="p">.</span><span class="nx">days</span><span class="p">){</span><span class="kd">var</span> <span class="nx">temp</span><span class="o">=</span><span class="nb">Date</span><span class="p">[</span><span class="k">this</span><span class="p">.</span><span class="nx">weekday</span><span class="p">]();</span><span class="k">this</span><span class="p">.</span><span class="nx">day</span><span class="o">=</span><span class="nx">temp</span><span class="p">.</span><span class="nx">getDate</span><span class="p">();</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="k">this</span><span class="p">.</span><span class="nx">month</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">month</span><span class="o">=</span><span class="nx">temp</span><span class="p">.</span><span class="nx">getMonth</span><span class="p">();}</span></div><div class='line' id='LC122'><span class="k">this</span><span class="p">.</span><span class="nx">year</span><span class="o">=</span><span class="nx">temp</span><span class="p">.</span><span class="nx">getFullYear</span><span class="p">();}</span></div><div class='line' id='LC123'><span class="k">if</span><span class="p">(</span><span class="nx">expression</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">weekday</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">unit</span><span class="o">!=</span><span class="s2">&quot;month&quot;</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">unit</span><span class="o">=</span><span class="s2">&quot;day&quot;</span><span class="p">;</span><span class="nx">gap</span><span class="o">=</span><span class="p">(</span><span class="nx">$D</span><span class="p">.</span><span class="nx">getDayNumberFromName</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">weekday</span><span class="p">)</span><span class="o">-</span><span class="nx">today</span><span class="p">.</span><span class="nx">getDay</span><span class="p">());</span><span class="nx">mod</span><span class="o">=</span><span class="mi">7</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">days</span><span class="o">=</span><span class="nx">gap</span><span class="o">?</span><span class="p">((</span><span class="nx">gap</span><span class="o">+</span><span class="p">(</span><span class="nx">orient</span><span class="o">*</span><span class="nx">mod</span><span class="p">))</span><span class="o">%</span><span class="nx">mod</span><span class="p">)</span><span class="o">:</span><span class="p">(</span><span class="nx">orient</span><span class="o">*</span><span class="nx">mod</span><span class="p">);}</span></div><div class='line' id='LC124'><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">month</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">unit</span><span class="o">==</span><span class="s2">&quot;day&quot;</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">operator</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="o">=</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">month</span><span class="o">+</span><span class="mi">1</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">month</span><span class="o">=</span><span class="kc">null</span><span class="p">;}</span></div><div class='line' id='LC125'><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="o">!=</span><span class="kc">null</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">month</span><span class="o">!=</span><span class="kc">null</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">year</span><span class="o">!=</span><span class="kc">null</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">day</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="o">*</span><span class="mi">1</span><span class="p">;}</span></div><div class='line' id='LC126'><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">month</span><span class="o">&amp;&amp;!</span><span class="k">this</span><span class="p">.</span><span class="nx">day</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">){</span><span class="nx">today</span><span class="p">.</span><span class="nx">set</span><span class="p">({</span><span class="nx">day</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="o">*</span><span class="mi">1</span><span class="p">});</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">expression</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">day</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="o">*</span><span class="mi">1</span><span class="p">;}}</span></div><div class='line' id='LC127'><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="k">this</span><span class="p">.</span><span class="nx">month</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">unit</span><span class="o">==</span><span class="s2">&quot;month&quot;</span><span class="o">&amp;&amp;!</span><span class="k">this</span><span class="p">.</span><span class="nx">now</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">month</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">;</span><span class="nx">expression</span><span class="o">=</span><span class="kc">true</span><span class="p">;}</span></div><div class='line' id='LC128'><span class="k">if</span><span class="p">(</span><span class="nx">expression</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">month</span><span class="o">||</span><span class="k">this</span><span class="p">.</span><span class="nx">month</span><span class="o">===</span><span class="mi">0</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">unit</span><span class="o">!=</span><span class="s2">&quot;year&quot;</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">unit</span><span class="o">=</span><span class="s2">&quot;month&quot;</span><span class="p">;</span><span class="nx">gap</span><span class="o">=</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">month</span><span class="o">-</span><span class="nx">today</span><span class="p">.</span><span class="nx">getMonth</span><span class="p">());</span><span class="nx">mod</span><span class="o">=</span><span class="mi">12</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">months</span><span class="o">=</span><span class="nx">gap</span><span class="o">?</span><span class="p">((</span><span class="nx">gap</span><span class="o">+</span><span class="p">(</span><span class="nx">orient</span><span class="o">*</span><span class="nx">mod</span><span class="p">))</span><span class="o">%</span><span class="nx">mod</span><span class="p">)</span><span class="o">:</span><span class="p">(</span><span class="nx">orient</span><span class="o">*</span><span class="nx">mod</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">month</span><span class="o">=</span><span class="kc">null</span><span class="p">;}</span></div><div class='line' id='LC129'><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="k">this</span><span class="p">.</span><span class="nx">unit</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">unit</span><span class="o">=</span><span class="s2">&quot;day&quot;</span><span class="p">;}</span></div><div class='line' id='LC130'><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">operator</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">operator</span><span class="o">!==</span><span class="kc">null</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">[</span><span class="k">this</span><span class="p">.</span><span class="nx">unit</span><span class="o">+</span><span class="s2">&quot;s&quot;</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">[</span><span class="k">this</span><span class="p">.</span><span class="nx">unit</span><span class="o">+</span><span class="s2">&quot;s&quot;</span><span class="p">]</span><span class="o">!==</span><span class="kc">null</span><span class="p">){</span><span class="k">this</span><span class="p">[</span><span class="k">this</span><span class="p">.</span><span class="nx">unit</span><span class="o">+</span><span class="s2">&quot;s&quot;</span><span class="p">]</span><span class="o">=</span><span class="k">this</span><span class="p">[</span><span class="k">this</span><span class="p">.</span><span class="nx">unit</span><span class="o">+</span><span class="s2">&quot;s&quot;</span><span class="p">]</span><span class="o">+</span><span class="p">((</span><span class="k">this</span><span class="p">.</span><span class="nx">operator</span><span class="o">==</span><span class="s2">&quot;add&quot;</span><span class="p">)</span><span class="o">?</span><span class="mi">1</span><span class="o">:-</span><span class="mi">1</span><span class="p">)</span><span class="o">+</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="o">||</span><span class="mi">0</span><span class="p">)</span><span class="o">*</span><span class="nx">orient</span><span class="p">;}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">[</span><span class="k">this</span><span class="p">.</span><span class="nx">unit</span><span class="o">+</span><span class="s2">&quot;s&quot;</span><span class="p">]</span><span class="o">==</span><span class="kc">null</span><span class="o">||</span><span class="k">this</span><span class="p">.</span><span class="nx">operator</span><span class="o">!=</span><span class="kc">null</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="o">=</span><span class="mi">1</span><span class="p">;}</span></div><div class='line' id='LC131'><span class="k">this</span><span class="p">[</span><span class="k">this</span><span class="p">.</span><span class="nx">unit</span><span class="o">+</span><span class="s2">&quot;s&quot;</span><span class="p">]</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="o">*</span><span class="nx">orient</span><span class="p">;}</span></div><div class='line' id='LC132'><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">meridian</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">hour</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">meridian</span><span class="o">==</span><span class="s2">&quot;p&quot;</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">hour</span><span class="o">&lt;</span><span class="mi">12</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">hour</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">hour</span><span class="o">+</span><span class="mi">12</span><span class="p">;}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">meridian</span><span class="o">==</span><span class="s2">&quot;a&quot;</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">hour</span><span class="o">==</span><span class="mi">12</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">hour</span><span class="o">=</span><span class="mi">0</span><span class="p">;}}</span></div><div class='line' id='LC133'><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">weekday</span><span class="o">&amp;&amp;!</span><span class="k">this</span><span class="p">.</span><span class="nx">day</span><span class="o">&amp;&amp;!</span><span class="k">this</span><span class="p">.</span><span class="nx">days</span><span class="p">){</span><span class="kd">var</span> <span class="nx">temp</span><span class="o">=</span><span class="nb">Date</span><span class="p">[</span><span class="k">this</span><span class="p">.</span><span class="nx">weekday</span><span class="p">]();</span><span class="k">this</span><span class="p">.</span><span class="nx">day</span><span class="o">=</span><span class="nx">temp</span><span class="p">.</span><span class="nx">getDate</span><span class="p">();</span><span class="k">if</span><span class="p">(</span><span class="nx">temp</span><span class="p">.</span><span class="nx">getMonth</span><span class="p">()</span><span class="o">!==</span><span class="nx">today</span><span class="p">.</span><span class="nx">getMonth</span><span class="p">()){</span><span class="k">this</span><span class="p">.</span><span class="nx">month</span><span class="o">=</span><span class="nx">temp</span><span class="p">.</span><span class="nx">getMonth</span><span class="p">();}}</span></div><div class='line' id='LC134'><span class="k">if</span><span class="p">((</span><span class="k">this</span><span class="p">.</span><span class="nx">month</span><span class="o">||</span><span class="k">this</span><span class="p">.</span><span class="nx">month</span><span class="o">===</span><span class="mi">0</span><span class="p">)</span><span class="o">&amp;&amp;!</span><span class="k">this</span><span class="p">.</span><span class="nx">day</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">day</span><span class="o">=</span><span class="mi">1</span><span class="p">;}</span></div><div class='line' id='LC135'><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="k">this</span><span class="p">.</span><span class="nx">orient</span><span class="o">&amp;&amp;!</span><span class="k">this</span><span class="p">.</span><span class="nx">operator</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">unit</span><span class="o">==</span><span class="s2">&quot;week&quot;</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="o">&amp;&amp;!</span><span class="k">this</span><span class="p">.</span><span class="nx">day</span><span class="o">&amp;&amp;!</span><span class="k">this</span><span class="p">.</span><span class="nx">month</span><span class="p">){</span><span class="k">return</span> <span class="nb">Date</span><span class="p">.</span><span class="nx">today</span><span class="p">().</span><span class="nx">setWeek</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">);}</span></div><div class='line' id='LC136'><span class="k">if</span><span class="p">(</span><span class="nx">expression</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">timezone</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">day</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">days</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">day</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">days</span><span class="p">;}</span></div><div class='line' id='LC137'><span class="k">return</span><span class="p">(</span><span class="nx">expression</span><span class="p">)</span><span class="o">?</span><span class="nx">today</span><span class="p">.</span><span class="nx">add</span><span class="p">(</span><span class="k">this</span><span class="p">)</span><span class="o">:</span><span class="nx">today</span><span class="p">.</span><span class="nx">set</span><span class="p">(</span><span class="k">this</span><span class="p">);}};</span><span class="kd">var</span> <span class="nx">_</span><span class="o">=</span><span class="nx">$D</span><span class="p">.</span><span class="nx">Parsing</span><span class="p">.</span><span class="nx">Operators</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="nx">$D</span><span class="p">.</span><span class="nx">Grammar</span><span class="p">,</span><span class="nx">t</span><span class="o">=</span><span class="nx">$D</span><span class="p">.</span><span class="nx">Translator</span><span class="p">,</span><span class="nx">_fn</span><span class="p">;</span><span class="nx">g</span><span class="p">.</span><span class="nx">datePartDelimiter</span><span class="o">=</span><span class="nx">_</span><span class="p">.</span><span class="nx">rtoken</span><span class="p">(</span><span class="sr">/^([\s\-\.\,\/\x27]+)/</span><span class="p">);</span><span class="nx">g</span><span class="p">.</span><span class="nx">timePartDelimiter</span><span class="o">=</span><span class="nx">_</span><span class="p">.</span><span class="nx">stoken</span><span class="p">(</span><span class="s2">&quot;:&quot;</span><span class="p">);</span><span class="nx">g</span><span class="p">.</span><span class="nx">whiteSpace</span><span class="o">=</span><span class="nx">_</span><span class="p">.</span><span class="nx">rtoken</span><span class="p">(</span><span class="sr">/^\s*/</span><span class="p">);</span><span class="nx">g</span><span class="p">.</span><span class="nx">generalDelimiter</span><span class="o">=</span><span class="nx">_</span><span class="p">.</span><span class="nx">rtoken</span><span class="p">(</span><span class="sr">/^(([\s\,]|at|@|on)+)/</span><span class="p">);</span><span class="kd">var</span> <span class="nx">_C</span><span class="o">=</span><span class="p">{};</span><span class="nx">g</span><span class="p">.</span><span class="nx">ctoken</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">keys</span><span class="p">){</span><span class="kd">var</span> <span class="nx">fn</span><span class="o">=</span><span class="nx">_C</span><span class="p">[</span><span class="nx">keys</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">fn</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">$C</span><span class="p">.</span><span class="nx">regexPatterns</span><span class="p">;</span><span class="kd">var</span> <span class="nx">kx</span><span class="o">=</span><span class="nx">keys</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="sr">/\s+/</span><span class="p">),</span><span class="nx">px</span><span class="o">=</span><span class="p">[];</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">i</span><span class="o">&lt;</span><span class="nx">kx</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">i</span><span class="o">++</span><span class="p">){</span><span class="nx">px</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">_</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="nx">_</span><span class="p">.</span><span class="nx">rtoken</span><span class="p">(</span><span class="nx">c</span><span class="p">[</span><span class="nx">kx</span><span class="p">[</span><span class="nx">i</span><span class="p">]]),</span><span class="nx">kx</span><span class="p">[</span><span class="nx">i</span><span class="p">]));}</span></div><div class='line' id='LC138'><span class="nx">fn</span><span class="o">=</span><span class="nx">_C</span><span class="p">[</span><span class="nx">keys</span><span class="p">]</span><span class="o">=</span><span class="nx">_</span><span class="p">.</span><span class="nx">any</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="kc">null</span><span class="p">,</span><span class="nx">px</span><span class="p">);}</span></div><div class='line' id='LC139'><span class="k">return</span> <span class="nx">fn</span><span class="p">;};</span><span class="nx">g</span><span class="p">.</span><span class="nx">ctoken2</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">key</span><span class="p">){</span><span class="k">return</span> <span class="nx">_</span><span class="p">.</span><span class="nx">rtoken</span><span class="p">(</span><span class="nx">$C</span><span class="p">.</span><span class="nx">regexPatterns</span><span class="p">[</span><span class="nx">key</span><span class="p">]);};</span><span class="nx">g</span><span class="p">.</span><span class="nx">h</span><span class="o">=</span><span class="nx">_</span><span class="p">.</span><span class="nx">cache</span><span class="p">(</span><span class="nx">_</span><span class="p">.</span><span class="nx">process</span><span class="p">(</span><span class="nx">_</span><span class="p">.</span><span class="nx">rtoken</span><span class="p">(</span><span class="sr">/^(0[0-9]|1[0-2]|[1-9])/</span><span class="p">),</span><span class="nx">t</span><span class="p">.</span><span class="nx">hour</span><span class="p">));</span><span class="nx">g</span><span class="p">.</span><span class="nx">hh</span><span class="o">=</span><span class="nx">_</span><span class="p">.</span><span class="nx">cache</span><span class="p">(</span><span class="nx">_</span><span class="p">.</span><span class="nx">process</span><span class="p">(</span><span class="nx">_</span><span class="p">.</span><span class="nx">rtoken</span><span class="p">(</span><span class="sr">/^(0[0-9]|1[0-2])/</span><span class="p">),</span><span class="nx">t</span><span class="p">.</span><span class="nx">hour</span><span class="p">));</span><span class="nx">g</span><span class="p">.</span><span class="nx">H</span><span class="o">=</span><span class="nx">_</span><span class="p">.</span><span class="nx">cache</span><span class="p">(</span><span class="nx">_</span><span class="p">.</span><span class="nx">process</span><span class="p">(</span><span class="nx">_</span><span class="p">.</span><span class="nx">rtoken</span><span class="p">(</span><span class="sr">/^([0-1][0-9]|2[0-3]|[0-9])/</span><span class="p">),</span><span class="nx">t</span><span class="p">.</span><span class="nx">hour</span><span class="p">));</span><span class="nx">g</span><span class="p">.</span><span class="nx">HH</span><span class="o">=</span><span class="nx">_</span><span class="p">.</span><span class="nx">cache</span><span class="p">(</span><span class="nx">_</span><span class="p">.</span><span class="nx">process</span><span class="p">(</span><span class="nx">_</span><span class="p">.</span><span class="nx">rtoken</span><span class="p">(</span><span class="sr">/^([0-1][0-9]|2[0-3])/</span><span class="p">),</span><span class="nx">t</span><span class="p">.</span><span class="nx">hour</span><span class="p">));</span><span class="nx">g</span><span class="p">.</span><span class="nx">m</span><span class="o">=</span><span class="nx">_</span><span class="p">.</span><span class="nx">cache</span><span class="p">(</span><span class="nx">_</span><span class="p">.</span><span class="nx">process</span><span class="p">(</span><span class="nx">_</span><span class="p">.</span><span class="nx">rtoken</span><span class="p">(</span><span class="sr">/^([0-5][0-9]|[0-9])/</span><span class="p">),</span><span class="nx">t</span><span class="p">.</span><span class="nx">minute</span><span class="p">));</span><span class="nx">g</span><span class="p">.</span><span class="nx">mm</span><span class="o">=</span><span class="nx">_</span><span class="p">.</span><span class="nx">cache</span><span class="p">(</span><span class="nx">_</span><span class="p">.</span><span class="nx">process</span><span class="p">(</span><span class="nx">_</span><span class="p">.</span><span class="nx">rtoken</span><span class="p">(</span><span class="sr">/^[0-5][0-9]/</span><span class="p">),</span><span class="nx">t</span><span class="p">.</span><span class="nx">minute</span><span class="p">));</span><span class="nx">g</span><span class="p">.</span><span class="nx">s</span><span class="o">=</span><span class="nx">_</span><span class="p">.</span><span class="nx">cache</span><span class="p">(</span><span class="nx">_</span><span class="p">.</span><span class="nx">process</span><span class="p">(</span><span class="nx">_</span><span class="p">.</span><span class="nx">rtoken</span><span class="p">(</span><span class="sr">/^([0-5][0-9]|[0-9])/</span><span class="p">),</span><span class="nx">t</span><span class="p">.</span><span class="nx">second</span><span class="p">));</span><span class="nx">g</span><span class="p">.</span><span class="nx">ss</span><span class="o">=</span><span class="nx">_</span><span class="p">.</span><span class="nx">cache</span><span class="p">(</span><span class="nx">_</span><span class="p">.</span><span class="nx">process</span><span class="p">(</span><span class="nx">_</span><span class="p">.</span><span class="nx">rtoken</span><span class="p">(</span><span class="sr">/^[0-5][0-9]/</span><span class="p">),</span><span class="nx">t</span><span class="p">.</span><span class="nx">second</span><span class="p">));</span><span class="nx">g</span><span class="p">.</span><span class="nx">hms</span><span class="o">=</span><span class="nx">_</span><span class="p">.</span><span class="nx">cache</span><span class="p">(</span><span class="nx">_</span><span class="p">.</span><span class="nx">sequence</span><span class="p">([</span><span class="nx">g</span><span class="p">.</span><span class="nx">H</span><span class="p">,</span><span class="nx">g</span><span class="p">.</span><span class="nx">m</span><span class="p">,</span><span class="nx">g</span><span class="p">.</span><span class="nx">s</span><span class="p">],</span><span class="nx">g</span><span class="p">.</span><span class="nx">timePartDelimiter</span><span class="p">));</span><span class="nx">g</span><span class="p">.</span><span class="nx">t</span><span class="o">=</span><span class="nx">_</span><span class="p">.</span><span class="nx">cache</span><span class="p">(</span><span class="nx">_</span><span class="p">.</span><span class="nx">process</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">ctoken2</span><span class="p">(</span><span class="s2">&quot;shortMeridian&quot;</span><span class="p">),</span><span class="nx">t</span><span class="p">.</span><span class="nx">meridian</span><span class="p">));</span><span class="nx">g</span><span class="p">.</span><span class="nx">tt</span><span class="o">=</span><span class="nx">_</span><span class="p">.</span><span class="nx">cache</span><span class="p">(</span><span class="nx">_</span><span class="p">.</span><span class="nx">process</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">ctoken2</span><span class="p">(</span><span class="s2">&quot;longMeridian&quot;</span><span class="p">),</span><span class="nx">t</span><span class="p">.</span><span class="nx">meridian</span><span class="p">));</span><span class="nx">g</span><span class="p">.</span><span class="nx">z</span><span class="o">=</span><span class="nx">_</span><span class="p">.</span><span class="nx">cache</span><span class="p">(</span><span class="nx">_</span><span class="p">.</span><span class="nx">process</span><span class="p">(</span><span class="nx">_</span><span class="p">.</span><span class="nx">rtoken</span><span class="p">(</span><span class="sr">/^((\+|\-)\s*\d\d\d\d)|((\+|\-)\d\d\:?\d\d)/</span><span class="p">),</span><span class="nx">t</span><span class="p">.</span><span class="nx">timezone</span><span class="p">));</span><span class="nx">g</span><span class="p">.</span><span class="nx">zz</span><span class="o">=</span><span class="nx">_</span><span class="p">.</span><span class="nx">cache</span><span class="p">(</span><span class="nx">_</span><span class="p">.</span><span class="nx">process</span><span class="p">(</span><span class="nx">_</span><span class="p">.</span><span class="nx">rtoken</span><span class="p">(</span><span class="sr">/^((\+|\-)\s*\d\d\d\d)|((\+|\-)\d\d\:?\d\d)/</span><span class="p">),</span><span class="nx">t</span><span class="p">.</span><span class="nx">timezone</span><span class="p">));</span><span class="nx">g</span><span class="p">.</span><span class="nx">zzz</span><span class="o">=</span><span class="nx">_</span><span class="p">.</span><span class="nx">cache</span><span class="p">(</span><span class="nx">_</span><span class="p">.</span><span class="nx">process</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">ctoken2</span><span class="p">(</span><span class="s2">&quot;timezone&quot;</span><span class="p">),</span><span class="nx">t</span><span class="p">.</span><span class="nx">timezone</span><span class="p">));</span><span class="nx">g</span><span class="p">.</span><span class="nx">timeSuffix</span><span class="o">=</span><span class="nx">_</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="nx">_</span><span class="p">.</span><span class="nx">ignore</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">whiteSpace</span><span class="p">),</span><span class="nx">_</span><span class="p">.</span><span class="nx">set</span><span class="p">([</span><span class="nx">g</span><span class="p">.</span><span class="nx">tt</span><span class="p">,</span><span class="nx">g</span><span class="p">.</span><span class="nx">zzz</span><span class="p">]));</span><span class="nx">g</span><span class="p">.</span><span class="nx">time</span><span class="o">=</span><span class="nx">_</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="nx">_</span><span class="p">.</span><span class="nx">optional</span><span class="p">(</span><span class="nx">_</span><span class="p">.</span><span class="nx">ignore</span><span class="p">(</span><span class="nx">_</span><span class="p">.</span><span class="nx">stoken</span><span class="p">(</span><span class="s2">&quot;T&quot;</span><span class="p">))),</span><span class="nx">g</span><span class="p">.</span><span class="nx">hms</span><span class="p">,</span><span class="nx">g</span><span class="p">.</span><span class="nx">timeSuffix</span><span class="p">);</span><span class="nx">g</span><span class="p">.</span><span class="nx">d</span><span class="o">=</span><span class="nx">_</span><span class="p">.</span><span class="nx">cache</span><span class="p">(</span><span class="nx">_</span><span class="p">.</span><span class="nx">process</span><span class="p">(</span><span class="nx">_</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="nx">_</span><span class="p">.</span><span class="nx">rtoken</span><span class="p">(</span><span class="sr">/^([0-2]\d|3[0-1]|\d)/</span><span class="p">),</span><span class="nx">_</span><span class="p">.</span><span class="nx">optional</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">ctoken2</span><span class="p">(</span><span class="s2">&quot;ordinalSuffix&quot;</span><span class="p">))),</span><span class="nx">t</span><span class="p">.</span><span class="nx">day</span><span class="p">));</span><span class="nx">g</span><span class="p">.</span><span class="nx">dd</span><span class="o">=</span><span class="nx">_</span><span class="p">.</span><span class="nx">cache</span><span class="p">(</span><span class="nx">_</span><span class="p">.</span><span class="nx">process</span><span class="p">(</span><span class="nx">_</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="nx">_</span><span class="p">.</span><span class="nx">rtoken</span><span class="p">(</span><span class="sr">/^([0-2]\d|3[0-1])/</span><span class="p">),</span><span class="nx">_</span><span class="p">.</span><span class="nx">optional</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">ctoken2</span><span class="p">(</span><span class="s2">&quot;ordinalSuffix&quot;</span><span class="p">))),</span><span class="nx">t</span><span class="p">.</span><span class="nx">day</span><span class="p">));</span><span class="nx">g</span><span class="p">.</span><span class="nx">ddd</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">dddd</span><span class="o">=</span><span class="nx">_</span><span class="p">.</span><span class="nx">cache</span><span class="p">(</span><span class="nx">_</span><span class="p">.</span><span class="nx">process</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">ctoken</span><span class="p">(</span><span class="s2">&quot;sun mon tue wed thu fri sat&quot;</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">s</span><span class="p">){</span><span class="k">return</span> <span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">weekday</span><span class="o">=</span><span class="nx">s</span><span class="p">;};}));</span><span class="nx">g</span><span class="p">.</span><span class="nx">M</span><span class="o">=</span><span class="nx">_</span><span class="p">.</span><span class="nx">cache</span><span class="p">(</span><span class="nx">_</span><span class="p">.</span><span class="nx">process</span><span class="p">(</span><span class="nx">_</span><span class="p">.</span><span class="nx">rtoken</span><span class="p">(</span><span class="sr">/^(1[0-2]|0\d|\d)/</span><span class="p">),</span><span class="nx">t</span><span class="p">.</span><span class="nx">month</span><span class="p">));</span><span class="nx">g</span><span class="p">.</span><span class="nx">MM</span><span class="o">=</span><span class="nx">_</span><span class="p">.</span><span class="nx">cache</span><span class="p">(</span><span class="nx">_</span><span class="p">.</span><span class="nx">process</span><span class="p">(</span><span class="nx">_</span><span class="p">.</span><span class="nx">rtoken</span><span class="p">(</span><span class="sr">/^(1[0-2]|0\d)/</span><span class="p">),</span><span class="nx">t</span><span class="p">.</span><span class="nx">month</span><span class="p">));</span><span class="nx">g</span><span class="p">.</span><span class="nx">MMM</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">MMMM</span><span class="o">=</span><span class="nx">_</span><span class="p">.</span><span class="nx">cache</span><span class="p">(</span><span class="nx">_</span><span class="p">.</span><span class="nx">process</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">ctoken</span><span class="p">(</span><span class="s2">&quot;jan feb mar apr may jun jul aug sep oct nov dec&quot;</span><span class="p">),</span><span class="nx">t</span><span class="p">.</span><span class="nx">month</span><span class="p">));</span><span class="nx">g</span><span class="p">.</span><span class="nx">y</span><span class="o">=</span><span class="nx">_</span><span class="p">.</span><span class="nx">cache</span><span class="p">(</span><span class="nx">_</span><span class="p">.</span><span class="nx">process</span><span class="p">(</span><span class="nx">_</span><span class="p">.</span><span class="nx">rtoken</span><span class="p">(</span><span class="sr">/^(\d\d?)/</span><span class="p">),</span><span class="nx">t</span><span class="p">.</span><span class="nx">year</span><span class="p">));</span><span class="nx">g</span><span class="p">.</span><span class="nx">yy</span><span class="o">=</span><span class="nx">_</span><span class="p">.</span><span class="nx">cache</span><span class="p">(</span><span class="nx">_</span><span class="p">.</span><span class="nx">process</span><span class="p">(</span><span class="nx">_</span><span class="p">.</span><span class="nx">rtoken</span><span class="p">(</span><span class="sr">/^(\d\d)/</span><span class="p">),</span><span class="nx">t</span><span class="p">.</span><span class="nx">year</span><span class="p">));</span><span class="nx">g</span><span class="p">.</span><span class="nx">yyy</span><span class="o">=</span><span class="nx">_</span><span class="p">.</span><span class="nx">cache</span><span class="p">(</span><span class="nx">_</span><span class="p">.</span><span class="nx">process</span><span class="p">(</span><span class="nx">_</span><span class="p">.</span><span class="nx">rtoken</span><span class="p">(</span><span class="sr">/^(\d\d?\d?\d?)/</span><span class="p">),</span><span class="nx">t</span><span class="p">.</span><span class="nx">year</span><span class="p">));</span><span class="nx">g</span><span class="p">.</span><span class="nx">yyyy</span><span class="o">=</span><span class="nx">_</span><span class="p">.</span><span class="nx">cache</span><span class="p">(</span><span class="nx">_</span><span class="p">.</span><span class="nx">process</span><span class="p">(</span><span class="nx">_</span><span class="p">.</span><span class="nx">rtoken</span><span class="p">(</span><span class="sr">/^(\d\d\d\d)/</span><span class="p">),</span><span class="nx">t</span><span class="p">.</span><span class="nx">year</span><span class="p">));</span><span class="nx">_fn</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">_</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="nx">_</span><span class="p">.</span><span class="nx">any</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="kc">null</span><span class="p">,</span><span class="nx">arguments</span><span class="p">),</span><span class="nx">_</span><span class="p">.</span><span class="nx">not</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">ctoken2</span><span class="p">(</span><span class="s2">&quot;timeContext&quot;</span><span class="p">)));};</span><span class="nx">g</span><span class="p">.</span><span class="nx">day</span><span class="o">=</span><span class="nx">_fn</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">d</span><span class="p">,</span><span class="nx">g</span><span class="p">.</span><span class="nx">dd</span><span class="p">);</span><span class="nx">g</span><span class="p">.</span><span class="nx">month</span><span class="o">=</span><span class="nx">_fn</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">M</span><span class="p">,</span><span class="nx">g</span><span class="p">.</span><span class="nx">MMM</span><span class="p">);</span><span class="nx">g</span><span class="p">.</span><span class="nx">year</span><span class="o">=</span><span class="nx">_fn</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">yyyy</span><span class="p">,</span><span class="nx">g</span><span class="p">.</span><span class="nx">yy</span><span class="p">);</span><span class="nx">g</span><span class="p">.</span><span class="nx">orientation</span><span class="o">=</span><span class="nx">_</span><span class="p">.</span><span class="nx">process</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">ctoken</span><span class="p">(</span><span class="s2">&quot;past future&quot;</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">s</span><span class="p">){</span><span class="k">return</span> <span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">orient</span><span class="o">=</span><span class="nx">s</span><span class="p">;};});</span><span class="nx">g</span><span class="p">.</span><span class="nx">operator</span><span class="o">=</span><span class="nx">_</span><span class="p">.</span><span class="nx">process</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">ctoken</span><span class="p">(</span><span class="s2">&quot;add subtract&quot;</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">s</span><span class="p">){</span><span class="k">return</span> <span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">operator</span><span class="o">=</span><span class="nx">s</span><span class="p">;};});</span><span class="nx">g</span><span class="p">.</span><span class="nx">rday</span><span class="o">=</span><span class="nx">_</span><span class="p">.</span><span class="nx">process</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">ctoken</span><span class="p">(</span><span class="s2">&quot;yesterday tomorrow today now&quot;</span><span class="p">),</span><span class="nx">t</span><span class="p">.</span><span class="nx">rday</span><span class="p">);</span><span class="nx">g</span><span class="p">.</span><span class="nx">unit</span><span class="o">=</span><span class="nx">_</span><span class="p">.</span><span class="nx">process</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">ctoken</span><span class="p">(</span><span class="s2">&quot;second minute hour day week month year&quot;</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">s</span><span class="p">){</span><span class="k">return</span> <span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">unit</span><span class="o">=</span><span class="nx">s</span><span class="p">;};});</span><span class="nx">g</span><span class="p">.</span><span class="nx">value</span><span class="o">=</span><span class="nx">_</span><span class="p">.</span><span class="nx">process</span><span class="p">(</span><span class="nx">_</span><span class="p">.</span><span class="nx">rtoken</span><span class="p">(</span><span class="sr">/^\d\d?(st|nd|rd|th)?/</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">s</span><span class="p">){</span><span class="k">return</span> <span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="o">=</span><span class="nx">s</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/\D/g</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">);};});</span><span class="nx">g</span><span class="p">.</span><span class="nx">expression</span><span class="o">=</span><span class="nx">_</span><span class="p">.</span><span class="nx">set</span><span class="p">([</span><span class="nx">g</span><span class="p">.</span><span class="nx">rday</span><span class="p">,</span><span class="nx">g</span><span class="p">.</span><span class="nx">operator</span><span class="p">,</span><span class="nx">g</span><span class="p">.</span><span class="nx">value</span><span class="p">,</span><span class="nx">g</span><span class="p">.</span><span class="nx">unit</span><span class="p">,</span><span class="nx">g</span><span class="p">.</span><span class="nx">orientation</span><span class="p">,</span><span class="nx">g</span><span class="p">.</span><span class="nx">ddd</span><span class="p">,</span><span class="nx">g</span><span class="p">.</span><span class="nx">MMM</span><span class="p">]);</span><span class="nx">_fn</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">_</span><span class="p">.</span><span class="nx">set</span><span class="p">(</span><span class="nx">arguments</span><span class="p">,</span><span class="nx">g</span><span class="p">.</span><span class="nx">datePartDelimiter</span><span class="p">);};</span><span class="nx">g</span><span class="p">.</span><span class="nx">mdy</span><span class="o">=</span><span class="nx">_fn</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">ddd</span><span class="p">,</span><span class="nx">g</span><span class="p">.</span><span class="nx">month</span><span class="p">,</span><span class="nx">g</span><span class="p">.</span><span class="nx">day</span><span class="p">,</span><span class="nx">g</span><span class="p">.</span><span class="nx">year</span><span class="p">);</span><span class="nx">g</span><span class="p">.</span><span class="nx">ymd</span><span class="o">=</span><span class="nx">_fn</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">ddd</span><span class="p">,</span><span class="nx">g</span><span class="p">.</span><span class="nx">year</span><span class="p">,</span><span class="nx">g</span><span class="p">.</span><span class="nx">month</span><span class="p">,</span><span class="nx">g</span><span class="p">.</span><span class="nx">day</span><span class="p">);</span><span class="nx">g</span><span class="p">.</span><span class="nx">dmy</span><span class="o">=</span><span class="nx">_fn</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">ddd</span><span class="p">,</span><span class="nx">g</span><span class="p">.</span><span class="nx">day</span><span class="p">,</span><span class="nx">g</span><span class="p">.</span><span class="nx">month</span><span class="p">,</span><span class="nx">g</span><span class="p">.</span><span class="nx">year</span><span class="p">);</span><span class="nx">g</span><span class="p">.</span><span class="nx">date</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">s</span><span class="p">){</span><span class="k">return</span><span class="p">((</span><span class="nx">g</span><span class="p">[</span><span class="nx">$C</span><span class="p">.</span><span class="nx">dateElementOrder</span><span class="p">]</span><span class="o">||</span><span class="nx">g</span><span class="p">.</span><span class="nx">mdy</span><span class="p">).</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">s</span><span class="p">));};</span><span class="nx">g</span><span class="p">.</span><span class="nx">format</span><span class="o">=</span><span class="nx">_</span><span class="p">.</span><span class="nx">process</span><span class="p">(</span><span class="nx">_</span><span class="p">.</span><span class="nx">many</span><span class="p">(</span><span class="nx">_</span><span class="p">.</span><span class="nx">any</span><span class="p">(</span><span class="nx">_</span><span class="p">.</span><span class="nx">process</span><span class="p">(</span><span class="nx">_</span><span class="p">.</span><span class="nx">rtoken</span><span class="p">(</span><span class="sr">/^(dd?d?d?|MM?M?M?|yy?y?y?|hh?|HH?|mm?|ss?|tt?|zz?z?)/</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">fmt</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">g</span><span class="p">[</span><span class="nx">fmt</span><span class="p">]){</span><span class="k">return</span> <span class="nx">g</span><span class="p">[</span><span class="nx">fmt</span><span class="p">];}</span><span class="k">else</span><span class="p">{</span><span class="k">throw</span> <span class="nx">$D</span><span class="p">.</span><span class="nx">Parsing</span><span class="p">.</span><span class="nx">Exception</span><span class="p">(</span><span class="nx">fmt</span><span class="p">);}}),</span><span class="nx">_</span><span class="p">.</span><span class="nx">process</span><span class="p">(</span><span class="nx">_</span><span class="p">.</span><span class="nx">rtoken</span><span class="p">(</span><span class="sr">/^[^dMyhHmstz]+/</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">s</span><span class="p">){</span><span class="k">return</span> <span class="nx">_</span><span class="p">.</span><span class="nx">ignore</span><span class="p">(</span><span class="nx">_</span><span class="p">.</span><span class="nx">stoken</span><span class="p">(</span><span class="nx">s</span><span class="p">));}))),</span><span class="kd">function</span><span class="p">(</span><span class="nx">rules</span><span class="p">){</span><span class="k">return</span> <span class="nx">_</span><span class="p">.</span><span class="nx">process</span><span class="p">(</span><span class="nx">_</span><span class="p">.</span><span class="nx">each</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="kc">null</span><span class="p">,</span><span class="nx">rules</span><span class="p">),</span><span class="nx">t</span><span class="p">.</span><span class="nx">finishExact</span><span class="p">);});</span><span class="kd">var</span> <span class="nx">_F</span><span class="o">=</span><span class="p">{};</span><span class="kd">var</span> <span class="nx">_get</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">f</span><span class="p">){</span><span class="k">return</span> <span class="nx">_F</span><span class="p">[</span><span class="nx">f</span><span class="p">]</span><span class="o">=</span><span class="p">(</span><span class="nx">_F</span><span class="p">[</span><span class="nx">f</span><span class="p">]</span><span class="o">||</span><span class="nx">g</span><span class="p">.</span><span class="nx">format</span><span class="p">(</span><span class="nx">f</span><span class="p">)[</span><span class="mi">0</span><span class="p">]);};</span><span class="nx">g</span><span class="p">.</span><span class="nx">formats</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">fx</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">fx</span> <span class="k">instanceof</span> <span class="nb">Array</span><span class="p">){</span><span class="kd">var</span> <span class="nx">rx</span><span class="o">=</span><span class="p">[];</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">i</span><span class="o">&lt;</span><span class="nx">fx</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">i</span><span class="o">++</span><span class="p">){</span><span class="nx">rx</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">_get</span><span class="p">(</span><span class="nx">fx</span><span class="p">[</span><span class="nx">i</span><span class="p">]));}</span></div><div class='line' id='LC140'><span class="k">return</span> <span class="nx">_</span><span class="p">.</span><span class="nx">any</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="kc">null</span><span class="p">,</span><span class="nx">rx</span><span class="p">);}</span><span class="k">else</span><span class="p">{</span><span class="k">return</span> <span class="nx">_get</span><span class="p">(</span><span class="nx">fx</span><span class="p">);}};</span><span class="nx">g</span><span class="p">.</span><span class="nx">_formats</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">formats</span><span class="p">([</span><span class="s2">&quot;\&quot;yyyy-MM-ddTHH:mm:ssZ\&quot;&quot;</span><span class="p">,</span><span class="s2">&quot;yyyy-MM-ddTHH:mm:ssZ&quot;</span><span class="p">,</span><span class="s2">&quot;yyyy-MM-ddTHH:mm:ssz&quot;</span><span class="p">,</span><span class="s2">&quot;yyyy-MM-ddTHH:mm:ss&quot;</span><span class="p">,</span><span class="s2">&quot;yyyy-MM-ddTHH:mmZ&quot;</span><span class="p">,</span><span class="s2">&quot;yyyy-MM-ddTHH:mmz&quot;</span><span class="p">,</span><span class="s2">&quot;yyyy-MM-ddTHH:mm&quot;</span><span class="p">,</span><span class="s2">&quot;ddd, MMM dd, yyyy H:mm:ss tt&quot;</span><span class="p">,</span><span class="s2">&quot;ddd MMM d yyyy HH:mm:ss zzz&quot;</span><span class="p">,</span><span class="s2">&quot;MMddyyyy&quot;</span><span class="p">,</span><span class="s2">&quot;ddMMyyyy&quot;</span><span class="p">,</span><span class="s2">&quot;Mddyyyy&quot;</span><span class="p">,</span><span class="s2">&quot;ddMyyyy&quot;</span><span class="p">,</span><span class="s2">&quot;Mdyyyy&quot;</span><span class="p">,</span><span class="s2">&quot;dMyyyy&quot;</span><span class="p">,</span><span class="s2">&quot;yyyy&quot;</span><span class="p">,</span><span class="s2">&quot;Mdyy&quot;</span><span class="p">,</span><span class="s2">&quot;dMyy&quot;</span><span class="p">,</span><span class="s2">&quot;d&quot;</span><span class="p">]);</span><span class="nx">g</span><span class="p">.</span><span class="nx">_start</span><span class="o">=</span><span class="nx">_</span><span class="p">.</span><span class="nx">process</span><span class="p">(</span><span class="nx">_</span><span class="p">.</span><span class="nx">set</span><span class="p">([</span><span class="nx">g</span><span class="p">.</span><span class="nx">date</span><span class="p">,</span><span class="nx">g</span><span class="p">.</span><span class="nx">time</span><span class="p">,</span><span class="nx">g</span><span class="p">.</span><span class="nx">expression</span><span class="p">],</span><span class="nx">g</span><span class="p">.</span><span class="nx">generalDelimiter</span><span class="p">,</span><span class="nx">g</span><span class="p">.</span><span class="nx">whiteSpace</span><span class="p">),</span><span class="nx">t</span><span class="p">.</span><span class="nx">finish</span><span class="p">);</span><span class="nx">g</span><span class="p">.</span><span class="nx">start</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">s</span><span class="p">){</span><span class="k">try</span><span class="p">{</span><span class="kd">var</span> <span class="nx">r</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">_formats</span><span class="p">.</span><span class="nx">call</span><span class="p">({},</span><span class="nx">s</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">r</span><span class="p">[</span><span class="mi">1</span><span class="p">].</span><span class="nx">length</span><span class="o">===</span><span class="mi">0</span><span class="p">){</span><span class="k">return</span> <span class="nx">r</span><span class="p">;}}</span><span class="k">catch</span><span class="p">(</span><span class="nx">e</span><span class="p">){}</span></div><div class='line' id='LC141'><span class="k">return</span> <span class="nx">g</span><span class="p">.</span><span class="nx">_start</span><span class="p">.</span><span class="nx">call</span><span class="p">({},</span><span class="nx">s</span><span class="p">);};</span><span class="nx">$D</span><span class="p">.</span><span class="nx">_parse</span><span class="o">=</span><span class="nx">$D</span><span class="p">.</span><span class="nx">parse</span><span class="p">;</span><span class="nx">$D</span><span class="p">.</span><span class="nx">parse</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">s</span><span class="p">){</span><span class="kd">var</span> <span class="nx">r</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">s</span><span class="p">){</span><span class="k">return</span> <span class="kc">null</span><span class="p">;}</span></div><div class='line' id='LC142'><span class="k">if</span><span class="p">(</span><span class="nx">s</span> <span class="k">instanceof</span> <span class="nb">Date</span><span class="p">){</span><span class="k">return</span> <span class="nx">s</span><span class="p">;}</span></div><div class='line' id='LC143'><span class="k">try</span><span class="p">{</span><span class="nx">r</span><span class="o">=</span><span class="nx">$D</span><span class="p">.</span><span class="nx">Grammar</span><span class="p">.</span><span class="nx">start</span><span class="p">.</span><span class="nx">call</span><span class="p">({},</span><span class="nx">s</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/^\s*(\S*(\s+\S+)*)\s*$/</span><span class="p">,</span><span class="s2">&quot;$1&quot;</span><span class="p">));}</span><span class="k">catch</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="k">return</span> <span class="kc">null</span><span class="p">;}</span></div><div class='line' id='LC144'><span class="k">return</span><span class="p">((</span><span class="nx">r</span><span class="p">[</span><span class="mi">1</span><span class="p">].</span><span class="nx">length</span><span class="o">===</span><span class="mi">0</span><span class="p">)</span><span class="o">?</span><span class="nx">r</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">:</span><span class="kc">null</span><span class="p">);};</span><span class="nx">$D</span><span class="p">.</span><span class="nx">getParseFunction</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">fx</span><span class="p">){</span><span class="kd">var</span> <span class="nx">fn</span><span class="o">=</span><span class="nx">$D</span><span class="p">.</span><span class="nx">Grammar</span><span class="p">.</span><span class="nx">formats</span><span class="p">(</span><span class="nx">fx</span><span class="p">);</span><span class="k">return</span> <span class="kd">function</span><span class="p">(</span><span class="nx">s</span><span class="p">){</span><span class="kd">var</span> <span class="nx">r</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="k">try</span><span class="p">{</span><span class="nx">r</span><span class="o">=</span><span class="nx">fn</span><span class="p">.</span><span class="nx">call</span><span class="p">({},</span><span class="nx">s</span><span class="p">);}</span><span class="k">catch</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="k">return</span> <span class="kc">null</span><span class="p">;}</span></div><div class='line' id='LC145'><span class="k">return</span><span class="p">((</span><span class="nx">r</span><span class="p">[</span><span class="mi">1</span><span class="p">].</span><span class="nx">length</span><span class="o">===</span><span class="mi">0</span><span class="p">)</span><span class="o">?</span><span class="nx">r</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">:</span><span class="kc">null</span><span class="p">);};};</span><span class="nx">$D</span><span class="p">.</span><span class="nx">parseExact</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">s</span><span class="p">,</span><span class="nx">fx</span><span class="p">){</span><span class="k">return</span> <span class="nx">$D</span><span class="p">.</span><span class="nx">getParseFunction</span><span class="p">(</span><span class="nx">fx</span><span class="p">)(</span><span class="nx">s</span><span class="p">);};}());</span></div></pre></div>
          </td>
        </tr>
      </table>
  </div>

          </div>
        </div>

        <a href="#jump-to-line" rel="facebox" data-hotkey="l" class="js-jump-to-line" style="display:none">Jump to Line</a>
        <div id="jump-to-line" style="display:none">
          <h2>Jump to Line</h2>
          <form accept-charset="UTF-8" class="js-jump-to-line-form">
            <input class="textfield js-jump-to-line-field" type="text">
            <div class="full-button">
              <button type="submit" class="button">Go</button>
            </div>
          </form>
        </div>

      </div>
    </div>
</div>

<div id="js-frame-loading-template" class="frame frame-loading large-loading-area" style="display:none;">
  <img class="js-frame-loading-spinner" src="https://a248.e.akamai.net/assets.github.com/images/spinners/octocat-spinner-128.gif?1360648847" height="64" width="64">
</div>


        </div>
      </div>
      <div class="context-overlay"></div>
    </div>

      <div id="footer-push"></div><!-- hack for sticky footer -->
    </div><!-- end of wrapper - hack for sticky footer -->

      <!-- footer -->
      <div id="footer">
  <div class="container clearfix">

      <dl class="footer_nav">
        <dt>GitHub</dt>
        <dd><a href="https://github.com/about">About us</a></dd>
        <dd><a href="https://github.com/blog">Blog</a></dd>
        <dd><a href="https://github.com/contact">Contact &amp; support</a></dd>
        <dd><a href="http://enterprise.github.com/">GitHub Enterprise</a></dd>
        <dd><a href="http://status.github.com/">Site status</a></dd>
      </dl>

      <dl class="footer_nav">
        <dt>Applications</dt>
        <dd><a href="http://mac.github.com/">GitHub for Mac</a></dd>
        <dd><a href="http://windows.github.com/">GitHub for Windows</a></dd>
        <dd><a href="http://eclipse.github.com/">GitHub for Eclipse</a></dd>
        <dd><a href="http://mobile.github.com/">GitHub mobile apps</a></dd>
      </dl>

      <dl class="footer_nav">
        <dt>Services</dt>
        <dd><a href="http://get.gaug.es/">Gauges: Web analytics</a></dd>
        <dd><a href="http://speakerdeck.com">Speaker Deck: Presentations</a></dd>
        <dd><a href="https://gist.github.com">Gist: Code snippets</a></dd>
        <dd><a href="http://jobs.github.com/">Job board</a></dd>
      </dl>

      <dl class="footer_nav">
        <dt>Documentation</dt>
        <dd><a href="http://help.github.com/">GitHub Help</a></dd>
        <dd><a href="http://developer.github.com/">Developer API</a></dd>
        <dd><a href="http://github.github.com/github-flavored-markdown/">GitHub Flavored Markdown</a></dd>
        <dd><a href="http://pages.github.com/">GitHub Pages</a></dd>
      </dl>

      <dl class="footer_nav">
        <dt>More</dt>
        <dd><a href="http://training.github.com/">Training</a></dd>
        <dd><a href="https://github.com/edu">Students &amp; teachers</a></dd>
        <dd><a href="http://shop.github.com">The Shop</a></dd>
        <dd><a href="/plans">Plans &amp; pricing</a></dd>
        <dd><a href="http://octodex.github.com/">The Octodex</a></dd>
      </dl>

      <hr class="footer-divider">


    <p class="right">&copy; 2013 <span title="0.08774s from fe4.rs.github.com">GitHub</span>, Inc. All rights reserved.</p>
    <a class="left" href="https://github.com/">
      <span class="mega-icon mega-icon-invertocat"></span>
    </a>
    <ul id="legal">
        <li><a href="https://github.com/site/terms">Terms of Service</a></li>
        <li><a href="https://github.com/site/privacy">Privacy</a></li>
        <li><a href="https://github.com/security">Security</a></li>
    </ul>

  </div><!-- /.container -->

</div><!-- /.#footer -->


    <div class="fullscreen-overlay js-fullscreen-overlay" id="fullscreen_overlay">
  <div class="fullscreen-container js-fullscreen-container">
    <div class="textarea-wrap">
      <textarea name="fullscreen-contents" id="fullscreen-contents" class="js-fullscreen-contents" placeholder="" data-suggester="fullscreen_suggester"></textarea>
          <div class="suggester-container">
              <div class="suggester fullscreen-suggester js-navigation-container" id="fullscreen_suggester"
                 data-url="/thegrubbsian/jquery.ganttView/suggestions/commit">
              </div>
          </div>
    </div>
  </div>
  <div class="fullscreen-sidebar">
    <a href="#" class="exit-fullscreen js-exit-fullscreen tooltipped leftwards" title="Exit Zen Mode">
      <span class="mega-icon mega-icon-normalscreen"></span>
    </a>
    <a href="#" class="theme-switcher js-theme-switcher tooltipped leftwards"
      title="Switch themes">
      <span class="mini-icon mini-icon-brightness"></span>
    </a>
  </div>
</div>



    <div id="ajax-error-message" class="flash flash-error">
      <span class="mini-icon mini-icon-exclamation"></span>
      Something went wrong with that request. Please try again.
      <a href="#" class="mini-icon mini-icon-remove-close ajax-error-dismiss"></a>
    </div>

    
    
    <span id='server_response_time' data-time='0.08814' data-host='fe4'></span>
    
  </body>
</html>

